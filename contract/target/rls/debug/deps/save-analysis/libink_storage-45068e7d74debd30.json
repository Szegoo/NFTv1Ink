{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4","program":"/home/sergej/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ink_storage","--edition=2018","/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"criterion\"","--cfg","feature=\"ink_metadata\"","--cfg","feature=\"scale-info\"","--cfg","feature=\"std\"","-C","metadata=45068e7d74debd30","-C","extra-filename=-45068e7d74debd30","--out-dir","/home/sergej/NFT/contract/target/rls/debug/deps","-L","dependency=/home/sergej/NFT/contract/target/rls/debug/deps","--extern","array_init=/home/sergej/NFT/contract/target/rls/debug/deps/libarray_init-03fda8985f5b18a8.rmeta","--extern","cfg_if=/home/sergej/NFT/contract/target/rls/debug/deps/libcfg_if-810dd9fbe1e28608.rmeta","--extern","criterion=/home/sergej/NFT/contract/target/rls/debug/deps/libcriterion-24ec629ee42773a1.rmeta","--extern","derive_more=/home/sergej/NFT/contract/target/rls/debug/deps/libderive_more-a95a9582ea16af7f.so","--extern","ink_env=/home/sergej/NFT/contract/target/rls/debug/deps/libink_env-349247d64a789249.rmeta","--extern","ink_metadata=/home/sergej/NFT/contract/target/rls/debug/deps/libink_metadata-9e881fd508239b8e.rmeta","--extern","ink_prelude=/home/sergej/NFT/contract/target/rls/debug/deps/libink_prelude-1c1029f47483154b.rmeta","--extern","ink_primitives=/home/sergej/NFT/contract/target/rls/debug/deps/libink_primitives-fbaf6ae769779d8e.rmeta","--extern","ink_storage_derive=/home/sergej/NFT/contract/target/rls/debug/deps/libink_storage_derive-8bbb70f68a3082d8.so","--extern","scale=/home/sergej/NFT/contract/target/rls/debug/deps/libparity_scale_codec-079dd2a32f19ed2c.rmeta","--extern","scale_info=/home/sergej/NFT/contract/target/rls/debug/deps/libscale_info-8a633176f26182b2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/sergej/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/sergej/NFT/contract/target/rls/debug/deps/libink_storage-45068e7d74debd30.rmeta"},"prelude":{"crate_id":{"name":"ink_storage","disambiguator":[17001272250310828305,7059857205921805637]},"crate_root":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src","external_crates":[{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":19,"id":{"name":"ink_env","disambiguator":[1756460744350699745,10763403687739111392]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":20,"id":{"name":"ink_primitives","disambiguator":[16561382440638943404,4957116688377469789]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","num":21,"id":{"name":"scale_info","disambiguator":[9785977292301478422,4851682163240077890]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","num":22,"id":{"name":"cfg_if","disambiguator":[663853888918535240,12010312547204163862]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":23,"id":{"name":"serde","disambiguator":[349740135202762924,14291604423332087386]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":24,"id":{"name":"serde_derive","disambiguator":[14157360658265065688,10217278244902203579]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":25,"id":{"name":"parity_scale_codec","disambiguator":[5774184900184640556,13846837201639887499]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":26,"id":{"name":"parity_scale_codec_derive","disambiguator":[14462818478930469020,16917366307795086449]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":27,"id":{"name":"arrayvec","disambiguator":[7831548429920313419,5419238833594762183]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":28,"id":{"name":"byte_slice_cast","disambiguator":[709702439622045722,10712509937866309499]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":29,"id":{"name":"derive_more","disambiguator":[14414271030047568725,18438368270325639887]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":30,"id":{"name":"scale_info_derive","disambiguator":[4473944743190540116,15658332980532986366]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":31,"id":{"name":"num_traits","disambiguator":[7043957143675488800,1825284104435723048]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":32,"id":{"name":"sp_arithmetic","disambiguator":[17695000418252171585,10996301065199133818]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":33,"id":{"name":"sp_std","disambiguator":[8597146910757739990,17875923730131362104]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":34,"id":{"name":"integer_sqrt","disambiguator":[13412038265431609767,10329333172535913640]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":35,"id":{"name":"sp_debug_derive","disambiguator":[6730801346826878300,18114593324376584335]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":36,"id":{"name":"static_assertions","disambiguator":[2800172271264622283,16868211187352620724]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":37,"id":{"name":"arrayref","disambiguator":[7182672989026383584,9381797795682384601]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","num":38,"id":{"name":"ink_prelude","disambiguator":[16709852738688097756,13030557874737918528]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":39,"id":{"name":"rand","disambiguator":[10731930769726463141,7964862332542612308]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":40,"id":{"name":"rand_core","disambiguator":[7061235206493960592,8987094910453197214]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":41,"id":{"name":"getrandom","disambiguator":[1036939156423056652,541023533626578853]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":42,"id":{"name":"libc","disambiguator":[1604949523160815494,649748596282759568]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":43,"id":{"name":"rand_chacha","disambiguator":[9113297747875468360,12095757694062237636]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":44,"id":{"name":"ppv_lite86","disambiguator":[16342140534606003648,15606045994417953711]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":45,"id":{"name":"blake2","disambiguator":[13936359008176065365,1247372346081987093]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":46,"id":{"name":"digest","disambiguator":[18429762179806425625,13221353243685484064]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":47,"id":{"name":"generic_array","disambiguator":[14243802694031767939,1438805964005100436]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":48,"id":{"name":"typenum","disambiguator":[6578675967236591406,12581686752636525447]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":49,"id":{"name":"crypto_mac","disambiguator":[2363838519602959829,15113723886379000108]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":50,"id":{"name":"subtle","disambiguator":[10301496278841331339,302312146266213347]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":51,"id":{"name":"opaque_debug","disambiguator":[17895543252167649484,1529394115718377223]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":52,"id":{"name":"sha3","disambiguator":[15778404155706178990,3890120969457903201]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":53,"id":{"name":"block_buffer","disambiguator":[9179609435972742306,4642929272044501518]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":54,"id":{"name":"block_padding","disambiguator":[8606217475550260834,17660735010367494283]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":55,"id":{"name":"keccak","disambiguator":[4166653274539750117,6108742692447987433]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":56,"id":{"name":"sha2","disambiguator":[14425613968227303285,6135204810610462230]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","num":57,"id":{"name":"cpufeatures","disambiguator":[13748887277951749048,7670824654450952028]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","num":58,"id":{"name":"ink_metadata","disambiguator":[17889308543131297350,17616839833740412818]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","num":59,"id":{"name":"impl_serde","disambiguator":[14123929111317003778,14363140793200895547]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/arrays.rs","num":60,"id":{"name":"array_init","disambiguator":[15433926448426478845,9063982208976196742]}},{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","num":61,"id":{"name":"ink_storage_derive","disambiguator":[7038234361787416498,3562156452533909410]}}],"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":612,"byte_end":1902,"line_start":15,"line_end":70,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4134},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5736,"byte_end":5753,"line_start":81,"line_end":81,"column_start":17,"column_end":34},"alias_span":null,"name":"DynamicAllocation","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4135},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5736,"byte_end":5753,"line_start":81,"line_end":81,"column_start":17,"column_end":34},"alias_span":null,"name":"DynamicAllocation","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4158},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5766,"byte_end":5769,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"alias_span":null,"name":"Box","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4165},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5781,"byte_end":5794,"line_start":83,"line_end":83,"column_start":11,"column_end":24},"alias_span":null,"name":"ContractPhase","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":4282},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40182,"byte_end":40186,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":293}},{"kind":"Use","ref_id":{"krate":0,"index":4299},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40205,"byte_end":40212,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"alias_span":null,"name":"Reverse","value":"","parent":{"krate":0,"index":293}},{"kind":"Use","ref_id":{"krate":0,"index":4434},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":86419,"byte_end":86428,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"alias_span":null,"name":"BitRefMut","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4500},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":86443,"byte_end":86451,"line_start":31,"line_end":31,"column_start":14,"column_end":22},"alias_span":null,"name":"ChunkRef","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4512},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":86473,"byte_end":86481,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"alias_span":null,"name":"BitsIter","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4526},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":86491,"byte_end":86502,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"alias_span":null,"name":"BitsIterMut","value":"","parent":{"krate":0,"index":739}},{"kind":"Use","ref_id":{"krate":0,"index":4559},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":131946,"byte_end":131950,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4583},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":131956,"byte_end":131963,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4631},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":131969,"byte_end":131973,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4596},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":131979,"byte_end":131985,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4619},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":131991,"byte_end":132000,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"ValuesMut","value":"","parent":{"krate":0,"index":1145}},{"kind":"Use","ref_id":{"krate":0,"index":4683},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168975,"byte_end":168979,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1671}},{"kind":"Use","ref_id":{"krate":0,"index":4708},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168985,"byte_end":168992,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1671}},{"kind":"Use","ref_id":{"krate":0,"index":4731},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":188838,"byte_end":188842,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1902}},{"kind":"Use","ref_id":{"krate":0,"index":4749},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":188848,"byte_end":188855,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1902}},{"kind":"Use","ref_id":{"krate":0,"index":4859},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227190,"byte_end":227194,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":2211}},{"kind":"Use","ref_id":{"krate":0,"index":4876},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227200,"byte_end":227207,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":2211}},{"kind":"Use","ref_id":{"krate":0,"index":4331},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38357,"byte_end":38367,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"alias_span":null,"name":"BinaryHeap","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4420},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38383,"byte_end":38391,"line_start":32,"line_end":32,"column_start":15,"column_end":23},"alias_span":null,"name":"BitStash","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4554},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38405,"byte_end":38411,"line_start":33,"line_end":33,"column_start":13,"column_end":19},"alias_span":null,"name":"Bitvec","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4646},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38426,"byte_end":38433,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4777},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38446,"byte_end":38451,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"alias_span":null,"name":"Stash","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4886},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38462,"byte_end":38465,"line_start":36,"line_end":36,"column_start":10,"column_end":13},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":4721},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38510,"byte_end":38518,"line_start":40,"line_end":40,"column_start":25,"column_end":33},"alias_span":null,"name":"SmallVec","value":"","parent":{"krate":0,"index":292}},{"kind":"Use","ref_id":{"krate":0,"index":2924},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255042,"byte_end":255051,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"alias_span":null,"name":"LazyArray","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":3090},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255203,"byte_end":255211,"line_start":46,"line_end":46,"column_start":16,"column_end":24},"alias_span":null,"name":"LazyCell","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":2554},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255228,"byte_end":255239,"line_start":47,"line_end":47,"column_start":16,"column_end":27},"alias_span":null,"name":"LazyHashMap","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":3192},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255256,"byte_end":255268,"line_start":48,"line_end":48,"column_start":16,"column_end":28},"alias_span":null,"name":"LazyIndexMap","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":4000},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438563,"byte_end":438581,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"alias_span":null,"name":"LayoutCryptoHasher","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3998},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438587,"byte_end":438600,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"StorageLayout","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3824},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438808,"byte_end":438828,"line_start":49,"line_end":49,"column_start":9,"column_end":29},"alias_span":null,"name":"forward_clear_packed","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3820},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438838,"byte_end":438857,"line_start":50,"line_end":50,"column_start":9,"column_end":28},"alias_span":null,"name":"forward_pull_packed","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3822},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438867,"byte_end":438886,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"alias_span":null,"name":"forward_push_packed","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3836},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438917,"byte_end":438926,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"alias_span":null,"name":"ExtKeyPtr","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":20,"index":128},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438936,"byte_end":438942,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"alias_span":null,"name":"KeyPtr","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3877},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438963,"byte_end":438975,"line_start":57,"line_end":57,"column_start":13,"column_end":25},"alias_span":null,"name":"PackedLayout","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3886},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438999,"byte_end":439011,"line_start":59,"line_end":59,"column_start":9,"column_end":21},"alias_span":null,"name":"SpreadLayout","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":3885},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439021,"byte_end":439048,"line_start":60,"line_end":60,"column_start":9,"column_end":36},"alias_span":null,"name":"FOOTPRINT_CLEANUP_THRESHOLD","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":61,"index":82},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439096,"byte_end":439108,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"alias_span":null,"name":"PackedLayout","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":61,"index":81},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439114,"byte_end":439126,"line_start":65,"line_end":65,"column_start":5,"column_end":17},"alias_span":null,"name":"SpreadLayout","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":61,"index":83},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439132,"byte_end":439145,"line_start":66,"line_end":66,"column_start":5,"column_end":18},"alias_span":null,"name":"StorageLayout","value":"","parent":{"krate":0,"index":3595}},{"kind":"Use","ref_id":{"krate":0,"index":4158},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"alias_span":null,"name":"Box","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4886},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":66,"line_end":66,"column_start":18,"column_end":21},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4986},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1858,"byte_end":1862,"line_start":67,"line_end":67,"column_start":11,"column_end":15},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4992},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1876,"byte_end":1882,"line_start":68,"line_end":68,"column_start":13,"column_end":19},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5024},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1894,"byte_end":1898,"line_start":69,"line_end":69,"column_start":11,"column_end":15},"alias_span":null,"name":"Pack","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":612,"byte_end":1902,"line_start":15,"line_end":70,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":292},{"krate":0,"index":2467},{"krate":0,"index":3375},{"krate":0,"index":3467},{"krate":0,"index":3595},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4088},{"krate":0,"index":4091},{"krate":0,"index":4094},{"krate":0,"index":4097}],"decl_id":null,"docs":" The `ink_storage` utilities used to manipulate and organize contract storage.","sig":null,"attributes":[{"value":"/ The `ink_storage` utilities used to manipulate and organize contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":612,"byte_end":693,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":694,"byte_end":697,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Mainly provides entities to work on a contract's storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":698,"byte_end":758,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ as well as high-level collections on top of those.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":759,"byte_end":813,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/ Also provides environmental utilities, such as storage allocators,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":814,"byte_end":884,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ FFI to interface with FRAME contracts and a primitive blockchain","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":885,"byte_end":953,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ emulator for simple off-chain testing.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":954,"byte_end":996,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"deny(missing_docs, bad_style, bare_trait_objects, const_err,\n       improper_ctypes, non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused_allocation,\n       unused_comparisons, unused_parens, while_true, trivial_casts,\n       trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1041,"byte_end":1494,"line_start":24,"line_end":44,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alloc","qualname":"::alloc","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":40},{"krate":0,"index":79},{"krate":0,"index":239},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" The default dynamic storage allocator.","sig":null,"attributes":[{"value":"/ The default dynamic storage allocator.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2516,"byte_end":2558,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2559,"byte_end":2562,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Allows to allocate storage cells in a dynamic fashion.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2563,"byte_end":2621,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ This is important if users want to combine types of varying storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2622,"byte_end":2693,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ footprints. For example, dynamic allocations are required whenever","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2694,"byte_end":2764,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ a user wants to use a storage collection (e.g. `storage::Vec`) in","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2765,"byte_end":2834,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ another storage collection: `storage::Vec<storage::Vec<T>>`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2835,"byte_end":2898,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2899,"byte_end":2902,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Simplification","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2903,"byte_end":2923,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2924,"byte_end":2927,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The contracts pallet is using 256-bit keys for identifying storage cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":2928,"byte_end":3005,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ This implies a storage space of `2^256` cells which is big enough to say that","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3006,"byte_end":3087,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ there are probably never going to happen collisions anywhere at any time","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3088,"byte_end":3164,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ if keys are chosen randomly. Using the built-in crypto hashers on unique","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3165,"byte_end":3241,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ input we can be sure that there are never going to be collisions in this","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3242,"byte_end":3318,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ space of `2^256` cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3319,"byte_end":3346,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3347,"byte_end":3350,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This way we can reduce the problem of finding another region in our storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3351,"byte_end":3430,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ that fits certain requirements (e.g. a minimum size) to the problem of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3431,"byte_end":3505,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ finding another uniform slot. Since we are on 32-bit WebAssembly we have","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3506,"byte_end":3582,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ memory limitations that make it impractical to have more than `2^32` dynamic","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3583,"byte_end":3663,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ allocated entities, so we can create another limitation for having a total of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3664,"byte_end":3745,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ `2^32` dynamic allocations at any point in time.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3746,"byte_end":3798,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ This enables us to have 32-bit keys instead of 256-bit keys.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3799,"byte_end":3863,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3864,"byte_end":3867,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ We can convert such 32-bit keys (represented by e.g. a `u32`) into 256-bit","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3868,"byte_end":3946,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ keys by using one of the built-in crypto hashes that has a 256-bit output,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":3947,"byte_end":4025,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ e.g. KECCAK, SHA-2 or BLAKE-2. For technical reasons we should prepend the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4026,"byte_end":4104,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ bytes of the 32-bit key by some unique byte sequence, e.g.:","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4105,"byte_end":4168,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/ ```no_compile","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4169,"byte_end":4186,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ let key256 = blake2x256(b\"DYNAMICALLY ALLOCATED\", bytes(key32));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4187,"byte_end":4255,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4256,"byte_end":4263,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4264,"byte_end":4267,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Internals","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4268,"byte_end":4283,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4284,"byte_end":4287,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ As described in [# Simplification] there are `2^32` possible uniform dynamic","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4288,"byte_end":4368,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ allocations available. For each such slot the dynamic allocator stores via","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4369,"byte_end":4447,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ a single bit in a bitvector if that slot is free or occupied.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4448,"byte_end":4513,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ This bitvector is called the `free` list.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4514,"byte_end":4559,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ However, searching in this `free` list for a 0 bit and thus a free slot","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4560,"byte_end":4635,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ for a dynamic allocation would mean that for every 256 consecutively","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4636,"byte_end":4708,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ occupied dynamic allocations there was a contract storage lookup required.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4709,"byte_end":4787,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ This might seem a lot but given that there could be thousands or","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4788,"byte_end":4856,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ tens of thousands of dynamic allocations at any given time this might not scale","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4857,"byte_end":4940,"line_start":58,"line_end":58,"column_start":1,"column_end":84}},{"value":"/ well.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4941,"byte_end":4950,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ For the reason of improving scalability we added another vector: the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":4951,"byte_end":5023,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ so-called `set_bits` vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5024,"byte_end":5056,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ In this vector every `u8` element densely stores the number of set bits","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5057,"byte_end":5132,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ (bits that are `1` or `true`) for each 256-bit package in the `free` list.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5133,"byte_end":5211,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ (Note that the `free` list is organized in 256-bit chunks of bits.)","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5212,"byte_end":5283,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5284,"byte_end":5287,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This way, to search for an unoccupied dynamic allocation we iterate over","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5288,"byte_end":5364,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ the set-bits vector which is 32 times more dense than our `free` list.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5365,"byte_end":5439,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ The additional density implies that we can query up to 8192 potential","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5440,"byte_end":5513,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ dynamic storage allocations with a single contract storage look-up.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5514,"byte_end":5585,"line_start":69,"line_end":69,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4134},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":9127,"byte_end":9144,"line_start":38,"line_end":38,"column_start":12,"column_end":29},"name":"DynamicAllocation","qualname":"::alloc::allocation::DynamicAllocation","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique dynamic allocation.","sig":null,"attributes":[{"value":"/ A unique dynamic allocation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8491,"byte_end":8523,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8524,"byte_end":8527,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This can refer to a dynamically allocated storage cell.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8528,"byte_end":8587,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/ It has been created by a dynamic storage allocator.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8588,"byte_end":8643,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ The initiator of the allocation has to make sure to deallocate","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8644,"byte_end":8710,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ this dynamic allocation again using the same dynamic allocator","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8711,"byte_end":8777,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ if it is no longer in use.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8778,"byte_end":8808,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8809,"byte_end":8812,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8813,"byte_end":8823,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8824,"byte_end":8827,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Normally instances of this type are not used directly and instead","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8828,"byte_end":8897,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ a [`storage::Box`](`crate::Box`) is used instead.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":8898,"byte_end":8951,"line_start":33,"line_end":33,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":11030,"byte_end":11033,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"key","qualname":"<DynamicAllocation>::key","value":"pub fn key(Self) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage key associated with this dynamic allocation.\n","sig":null,"attributes":[{"value":"/ Returns the storage key associated with this dynamic allocation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":10950,"byte_end":11018,"line_start":111,"line_end":111,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":4158},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18125,"byte_end":18128,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"Box","qualname":"::alloc::boxed::Box","value":"Box {  }","parent":null,"children":[{"krate":0,"index":4160},{"krate":0,"index":4161}],"decl_id":null,"docs":" A dynamically allocated storage entity.","sig":null,"attributes":[{"value":"/ A dynamically allocated storage entity.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17268,"byte_end":17311,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17312,"byte_end":17315,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Users can use this in order to make certain `SpreadLayout` storage entities","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17316,"byte_end":17395,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ used in contexts that require a `PackedLayout` storage entity by simply","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17396,"byte_end":17471,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ packing the storage entity within a `storage::Box`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17472,"byte_end":17527,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17528,"byte_end":17531,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Dynamic allocations caused by the creation of `storage::Box` instances do","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17532,"byte_end":17609,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ have some limited overhead:","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17610,"byte_end":17641,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17642,"byte_end":17645,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - The dynamic allocation itself has to be provided by some dynamic storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17646,"byte_end":17724,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/   allocator that needs to be invoked.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17725,"byte_end":17766,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ - Each dynamic storage allocation implies roughly 1.12 bits of overhead.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17767,"byte_end":17843,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ - Upon ever first dereferencing of a `storage::Box` instance a cryptographic","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17844,"byte_end":17924,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/   hash routine is run in order to compute the underlying storage key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17925,"byte_end":17998,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":17999,"byte_end":18002,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Use this abstraction with caution due to the aforementioned performance","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18003,"byte_end":18078,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ implications.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18079,"byte_end":18096,"line_start":47,"line_end":47,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18425,"byte_end":18428,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<Box<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new boxed entity.\n","sig":null,"attributes":[{"value":"/ Creates a new boxed entity.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18382,"byte_end":18413,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19270,"byte_end":19273,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"get","qualname":"<Box<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the boxed value.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the boxed value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18974,"byte_end":19024,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19029,"byte_end":19032,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19037,"byte_end":19047,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19052,"byte_end":19055,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the pointed to contract storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19060,"byte_end":19121,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/ if this did not happen before.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19126,"byte_end":19160,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19165,"byte_end":19168,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19173,"byte_end":19185,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19190,"byte_end":19193,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19198,"byte_end":19242,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19247,"byte_end":19258,"line_start":99,"line_end":99,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19628,"byte_end":19635,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Box<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the boxed value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the boxed value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19328,"byte_end":19382,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19387,"byte_end":19390,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19395,"byte_end":19405,"line_start":106,"line_end":106,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19410,"byte_end":19413,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the pointed to contract storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19418,"byte_end":19479,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ if this did not happen before.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19484,"byte_end":19518,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19523,"byte_end":19526,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19531,"byte_end":19543,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19548,"byte_end":19551,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19556,"byte_end":19600,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":19605,"byte_end":19616,"line_start":114,"line_end":114,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4166},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28660,"byte_end":28666,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Deploy","qualname":"::alloc::init::ContractPhase::Deploy","value":"ContractPhase::Deploy","parent":{"krate":0,"index":4165},"children":[],"decl_id":null,"docs":" Initializes the global dynamic storage allocator from scratch.","sig":null,"attributes":[{"value":"/ Initializes the global dynamic storage allocator from scratch.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28455,"byte_end":28521,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28526,"byte_end":28529,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Upon initialization, it will be created from scratch as if the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28534,"byte_end":28600,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/ contract has been deployed for the first time.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28605,"byte_end":28655,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4168},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28958,"byte_end":28962,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Call","qualname":"::alloc::init::ContractPhase::Call","value":"ContractPhase::Call","parent":{"krate":0,"index":4165},"children":[],"decl_id":null,"docs":" Initializes the global dynamic storage allocator from storage.","sig":null,"attributes":[{"value":"/ Initializes the global dynamic storage allocator from storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28672,"byte_end":28738,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28743,"byte_end":28746,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Upon initialization, the dynamic storage allocator will be pulled","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28751,"byte_end":28820,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ from the contract storage with the assumption that a former","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28825,"byte_end":28888,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ contract deployment has already taken place in the past.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28893,"byte_end":28953,"line_start":44,"line_end":44,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":4165},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28435,"byte_end":28448,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"name":"ContractPhase","qualname":"::alloc::init::ContractPhase","value":"pub enum ContractPhase { Deploy, Call, }","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4168}],"decl_id":null,"docs":" The phase in which a contract execution can be.\n","sig":null,"attributes":[{"value":"/ The phase in which a contract execution can be.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":28329,"byte_end":28380,"line_start":32,"line_end":32,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":287},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5853,"byte_end":5858,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"alloc","qualname":"::alloc::alloc","value":"pub fn alloc() -> DynamicAllocation","parent":null,"children":[],"decl_id":null,"docs":" Returns a new dynamic storage allocation.\n","sig":null,"attributes":[{"value":"/ Returns a new dynamic storage allocation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5800,"byte_end":5845,"line_start":86,"line_end":86,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":288},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6102,"byte_end":6106,"line_start":95,"line_end":95,"column_start":8,"column_end":12},"name":"free","qualname":"::alloc::free","value":"pub fn free(DynamicAllocation)","parent":null,"children":[],"decl_id":null,"docs":" Frees the given dynamic storage allocation.","sig":null,"attributes":[{"value":"/ Frees the given dynamic storage allocation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5934,"byte_end":5981,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5982,"byte_end":5985,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This makes the given dynamic storage allocation available again","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":5986,"byte_end":6053,"line_start":93,"line_end":93,"column_start":1,"column_end":68}},{"value":"/ for new dynamic storage allocations.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6054,"byte_end":6094,"line_start":94,"line_end":94,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7171,"byte_end":7181,"line_start":117,"line_end":117,"column_start":8,"column_end":18},"name":"initialize","qualname":"::alloc::initialize","value":"pub fn initialize(ContractPhase)","parent":null,"children":[],"decl_id":null,"docs":" Tells the global dynamic storage allocator instance how it shall initialize.","sig":null,"attributes":[{"value":"/ Tells the global dynamic storage allocator instance how it shall initialize.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6205,"byte_end":6285,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6286,"byte_end":6289,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6290,"byte_end":6300,"line_start":101,"line_end":101,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6301,"byte_end":6304,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Normally users of ink! do not have to call this function directly as it is","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6305,"byte_end":6383,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ automatically being use in the correct order and way by the generated code.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6384,"byte_end":6463,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6464,"byte_end":6467,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ - The `phase` parameter describes for which execution phase the dynamic","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6468,"byte_end":6543,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/   storage allocator needs to be initialized since this is different","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6544,"byte_end":6615,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/   in contract instantiations and calls.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6616,"byte_end":6659,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ - This has to be issued before the first interaction with the global allocator.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6660,"byte_end":6743,"line_start":109,"line_end":109,"column_start":1,"column_end":84}},{"value":"/ - The actual instantiation will happen only upon the first interaction with","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6744,"byte_end":6823,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/   the global allocator, e.g. using the `alloc` or `free` calls. Until then,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6824,"byte_end":6903,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/   it remains uninitialized.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6904,"byte_end":6935,"line_start":112,"line_end":112,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6936,"byte_end":6939,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ If this function is not called before the first global allocator interaction","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":6940,"byte_end":7020,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ then the default initialization scheme is for contract instantiation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7021,"byte_end":7094,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/ However, this behavior might change and must not be relied upon.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7095,"byte_end":7163,"line_start":116,"line_end":116,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":291},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7744,"byte_end":7752,"line_start":133,"line_end":133,"column_start":8,"column_end":16},"name":"finalize","qualname":"::alloc::finalize","value":"pub fn finalize()","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the global dynamic storage allocator instance.","sig":null,"attributes":[{"value":"/ Finalizes the global dynamic storage allocator instance.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7238,"byte_end":7298,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7299,"byte_end":7302,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This pushes all the accumulated state from this contract execution back to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7303,"byte_end":7381,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ the contract storage to be used in the next contract execution for the same","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7382,"byte_end":7461,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ contract instance.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7462,"byte_end":7484,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7485,"byte_end":7488,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The global dynamic storage allocator must not be used after this!","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7489,"byte_end":7558,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7559,"byte_end":7562,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7563,"byte_end":7573,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7574,"byte_end":7577,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Normally users of ink! do not have to call this function directly as it is","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7578,"byte_end":7656,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ automatically being use in the correct order and way by the generated code.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/mod.rs","byte_start":7657,"byte_end":7736,"line_start":132,"line_end":132,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":292},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":630},{"krate":0,"index":739},{"krate":0,"index":1145},{"krate":0,"index":1671},{"krate":0,"index":1902},{"krate":0,"index":2211},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2463}],"decl_id":null,"docs":" High-level collections used to manage storage entities in the persisted\n contract storage.","sig":null,"attributes":[{"value":"/ High-level collections used to manage storage entities in the persisted","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":37946,"byte_end":38021,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38022,"byte_end":38043,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38044,"byte_end":38047,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Users should generally use these collections in their contracts directly","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38048,"byte_end":38124,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ or as building blocks for their collections and algorithms.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38125,"byte_end":38188,"line_start":19,"line_end":19,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":293},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":358},{"krate":0,"index":437},{"krate":0,"index":459},{"krate":0,"index":504},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":4339},{"krate":0,"index":4343},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":594},{"krate":0,"index":599},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":626}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"/ A priority queue implemented with a binary heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":39767,"byte_end":39819,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":39820,"byte_end":39823,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Insertion and popping the largest element have `O(log(n))` complexity.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":39824,"byte_end":39898,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ Checking the largest element is `O(1)`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":39899,"byte_end":39942,"line_start":18,"line_end":18,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4261},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":54467,"byte_end":54478,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"ChildrenVec","qualname":"::collections::binary_heap::children_vec::ChildrenVec","value":"ChildrenVec {  }","parent":null,"children":[{"krate":0,"index":4263},{"krate":0,"index":4264}],"decl_id":null,"docs":" Provides an interface for accessing elements in the `BinaryHeap`.","sig":null,"attributes":[{"value":"/ Provides an interface for accessing elements in the `BinaryHeap`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":54043,"byte_end":54112,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":54113,"byte_end":54116,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Elements of the heap are stored in a vector of `Children` objects, whereby","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":54117,"byte_end":54195,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ each `Children` object contains two elements. When operating on indices of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":54196,"byte_end":54274,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ the `BinaryHeap`, this interface transposes heap indices to the child inside","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":54275,"byte_end":54355,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ the `Children` object, in which the element is stored.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":54356,"byte_end":54414,"line_start":39,"line_end":39,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56257,"byte_end":56260,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<ChildrenVec<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage heap.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56194,"byte_end":56231,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56236,"byte_end":56245,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56486,"byte_end":56489,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"len","qualname":"<ChildrenVec<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the heap, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the heap, also referred to as its length.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56381,"byte_end":56460,"line_start":101,"line_end":101,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56465,"byte_end":56474,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56835,"byte_end":56843,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ChildrenVec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the heap contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the heap contains no elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56757,"byte_end":56809,"line_start":114,"line_end":114,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56814,"byte_end":56823,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57022,"byte_end":57025,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"get","qualname":"<ChildrenVec<T>>::get","value":"pub fn get(&Self, u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the indexed element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56896,"byte_end":56950,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56955,"byte_end":56958,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56963,"byte_end":57010,"line_start":122,"line_end":122,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57303,"byte_end":57310,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ChildrenVec<T>>::get_mut","value":"pub fn get_mut(&mut Self, u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the indexed element.\n The element in a `Children` is an `Option<T>`.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the indexed element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57118,"byte_end":57176,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ The element in a `Children` is an `Option<T>`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57181,"byte_end":57231,"line_start":128,"line_end":128,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57236,"byte_end":57239,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57244,"byte_end":57291,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57591,"byte_end":57595,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"swap","qualname":"<ChildrenVec<T>>::swap","value":"pub fn swap(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the elements at the given indices.","sig":null,"attributes":[{"value":"/ Swaps the elements at the given indices.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57452,"byte_end":57496,"line_start":136,"line_end":136,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57501,"byte_end":57504,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57509,"byte_end":57521,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57526,"byte_end":57529,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If one or both indices are out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":57534,"byte_end":57579,"line_start":140,"line_end":140,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58408,"byte_end":58419,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<ChildrenVec<T>>::swap_remove","value":"pub fn swap_remove(&mut Self, u32) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the element at `index` from the heap and returns it.","sig":null,"attributes":[{"value":"/ Removes the element at `index` from the heap and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58186,"byte_end":58250,"line_start":158,"line_end":158,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58255,"byte_end":58258,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The last element of the heap is put into the slot at `index`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58263,"byte_end":58328,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ Returns `None` and does not mutate the heap if it is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58333,"byte_end":58396,"line_start":161,"line_end":161,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58882,"byte_end":58886,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"iter","qualname":"<ChildrenVec<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the heap.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58593,"byte_end":58672,"line_start":170,"line_end":170,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58677,"byte_end":58680,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58685,"byte_end":58695,"line_start":172,"line_end":172,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58700,"byte_end":58703,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage heaps.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58708,"byte_end":58761,"line_start":174,"line_end":174,"column_start":5,"column_end":58}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58766,"byte_end":58841,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58846,"byte_end":58870,"line_start":176,"line_end":176,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59013,"byte_end":59018,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"first","qualname":"<ChildrenVec<T>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the first element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":58942,"byte_end":59001,"line_start":181,"line_end":181,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59211,"byte_end":59220,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<ChildrenVec<T>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the first element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59136,"byte_end":59199,"line_start":189,"line_end":189,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59639,"byte_end":59644,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"name":"clear","qualname":"<ChildrenVec<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from this heap.","sig":null,"attributes":[{"value":"/ Removes all elements from this heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59350,"byte_end":59390,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59395,"byte_end":59398,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59403,"byte_end":59413,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59418,"byte_end":59421,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Use this method to clear the heap instead of e.g. iterative `pop()`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59426,"byte_end":59498,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ This method performs significantly better and does not actually read","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59503,"byte_end":59575,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ any of the elements (whereas `pop()` does).","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59580,"byte_end":59627,"line_start":203,"line_end":203,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59850,"byte_end":59854,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"push","qualname":"<ChildrenVec<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of the heap.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of the heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":59791,"byte_end":59838,"line_start":212,"line_end":212,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4282},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":63318,"byte_end":63322,"line_start":312,"line_end":312,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::children_vec::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287}],"decl_id":null,"docs":" An iterator over shared references to the elements of the `BinaryHeap`.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of the `BinaryHeap`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":63201,"byte_end":63276,"line_start":310,"line_end":310,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":63691,"byte_end":63694,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(&'a ChildrenVec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator for the given heap elements.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator for the given heap elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":63624,"byte_end":63679,"line_start":328,"line_end":328,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4299},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67307,"byte_end":67314,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Reverse","qualname":"::collections::binary_heap::reverse::Reverse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper for [`core::cmp::Reverse`] for using a [`BinaryHeap`](`super::BinaryHeap`) as a\n min-heap.\n","sig":null,"attributes":[{"value":"/ Wrapper for [`core::cmp::Reverse`] for using a [`BinaryHeap`](`super::BinaryHeap`) as a","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67119,"byte_end":67210,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ min-heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67211,"byte_end":67224,"line_start":32,"line_end":32,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67466,"byte_end":67469,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Reverse<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new [`Reverse`] from the given value.\n","sig":null,"attributes":[{"value":"/ Construct a new [`Reverse`] from the given value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67401,"byte_end":67454,"line_start":40,"line_end":40,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67602,"byte_end":67607,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"value","qualname":"<Reverse<T>>::value","value":"pub fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Return a shared reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Return a shared reference to the inner value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67541,"byte_end":67590,"line_start":45,"line_end":45,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4331},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40613,"byte_end":40623,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"BinaryHeap","qualname":"::collections::binary_heap::BinaryHeap","value":"BinaryHeap {  }","parent":null,"children":[{"krate":0,"index":4333}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"/ A priority queue implemented with a binary heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40215,"byte_end":40267,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40268,"byte_end":40271,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40272,"byte_end":40282,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40283,"byte_end":40286,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The heap is a *max-heap* by default, i.e. the first element is the largest.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40287,"byte_end":40366,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ Either [`Reverse`] or a custom `Ord` implementation can be used to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40367,"byte_end":40437,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ make `BinaryHeap` a *min-heap*. This then makes `heap.pop()` return the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40438,"byte_end":40513,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ smallest value instead of the largest one.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40514,"byte_end":40560,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40850,"byte_end":40853,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BinaryHeap<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage heap.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40801,"byte_end":40838,"line_start":59,"line_end":59,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41035,"byte_end":41038,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"len","qualname":"<BinaryHeap<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the heap, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the heap, also referred to as its length.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40944,"byte_end":41023,"line_start":66,"line_end":66,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41158,"byte_end":41166,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinaryHeap<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the heap contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the heap contains no elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41094,"byte_end":41146,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41570,"byte_end":41574,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"iter","qualname":"<BinaryHeap<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the heap.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41287,"byte_end":41366,"line_start":81,"line_end":81,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41371,"byte_end":41374,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41379,"byte_end":41389,"line_start":83,"line_end":83,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41394,"byte_end":41397,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over large heaps.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41402,"byte_end":41449,"line_start":85,"line_end":85,"column_start":5,"column_end":52}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41454,"byte_end":41529,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41534,"byte_end":41558,"line_start":87,"line_end":87,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41765,"byte_end":41769,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinaryHeap<T>>::peek","value":"pub fn peek(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the greatest element of the heap","sig":null,"attributes":[{"value":"/ Returns a shared reference to the greatest element of the heap","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41635,"byte_end":41701,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41706,"byte_end":41709,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the heap is empty","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41714,"byte_end":41753,"line_start":94,"line_end":94,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42489,"byte_end":42497,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<BinaryHeap<T>>::peek_mut","value":"pub fn peek_mut(&mut Self) -> Option<PeekMut<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the greatest element of the heap","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the greatest element of the heap","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41834,"byte_end":41904,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41909,"byte_end":41912,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the heap is empty","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41917,"byte_end":41956,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41961,"byte_end":41964,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Note:","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41969,"byte_end":41980,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41985,"byte_end":41988,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If the `PeekMut` value is leaked, the heap may be in an inconsistent state.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41993,"byte_end":42072,"line_start":105,"line_end":105,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42077,"byte_end":42080,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42085,"byte_end":42098,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42103,"byte_end":42106,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42111,"byte_end":42118,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use ink_storage::collections::BinaryHeap;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42123,"byte_end":42168,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/ let mut heap = BinaryHeap::new();","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42173,"byte_end":42210,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/ assert!(heap.peek_mut().is_none());","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42215,"byte_end":42254,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42259,"byte_end":42262,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ heap.push(1);","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42267,"byte_end":42284,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/ heap.push(5);","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42289,"byte_end":42306,"line_start":115,"line_end":115,"column_start":5,"column_end":22}},{"value":"/ heap.push(2);","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42311,"byte_end":42328,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42333,"byte_end":42338,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/     let mut val = heap.peek_mut().unwrap();","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42343,"byte_end":42390,"line_start":118,"line_end":118,"column_start":5,"column_end":52}},{"value":"/     *val = 0;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42395,"byte_end":42412,"line_start":119,"line_end":119,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42417,"byte_end":42422,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(heap.peek(), Some(&2));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42427,"byte_end":42465,"line_start":121,"line_end":121,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":42470,"byte_end":42477,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43573,"byte_end":43576,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinaryHeap<T>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops greatest element from the heap and returns it","sig":null,"attributes":[{"value":"/ Pops greatest element from the heap and returns it","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43455,"byte_end":43509,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43514,"byte_end":43517,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the heap is empty","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43522,"byte_end":43561,"line_start":157,"line_end":157,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44054,"byte_end":44059,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"clear","qualname":"<BinaryHeap<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from this heap.","sig":null,"attributes":[{"value":"/ Removes all elements from this heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43765,"byte_end":43805,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43810,"byte_end":43813,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43818,"byte_end":43828,"line_start":167,"line_end":167,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43833,"byte_end":43836,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Use this method to clear the heap instead of e.g. iterative `pop()`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43841,"byte_end":43913,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ This method performs significantly better and does not actually read","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43918,"byte_end":43990,"line_start":170,"line_end":170,"column_start":5,"column_end":77}},{"value":"/ any of the elements (whereas `pop()` does).","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":43995,"byte_end":44042,"line_start":171,"line_end":171,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44626,"byte_end":44630,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"push","qualname":"<BinaryHeap<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given element to the binary heap.\n","sig":null,"attributes":[{"value":"/ Pushes the given element to the binary heap.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44566,"byte_end":44614,"line_start":194,"line_end":194,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44935,"byte_end":44942,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"PeekMut","qualname":"::collections::binary_heap::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"decl_id":null,"docs":" Structure wrapping a mutable reference to the greatest item on a\n [`BinaryHeap`].","sig":null,"attributes":[{"value":"/ Structure wrapping a mutable reference to the greatest item on a","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44762,"byte_end":44830,"line_start":202,"line_end":202,"column_start":1,"column_end":69}},{"value":"/ [`BinaryHeap`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44831,"byte_end":44850,"line_start":203,"line_end":203,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44851,"byte_end":44854,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`BinaryHeap::peek_mut`] method.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44855,"byte_end":44923,"line_start":205,"line_end":205,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":46278,"byte_end":46281,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"pop","qualname":"<PeekMut>::pop","value":"pub fn pop(PeekMut) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the peeked value from the heap and returns it.\n","sig":null,"attributes":[{"value":"/ Removes the peeked value from the heap and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":46208,"byte_end":46266,"line_start":259,"line_end":259,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":630},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bitstash","qualname":"::collections::bitstash","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":652},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":4420},{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":732}],"decl_id":null,"docs":" Storage bit stash data structure and utilities.","sig":null,"attributes":[{"value":"/ Storage bit stash data structure and utilities.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":72657,"byte_end":72708,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":72709,"byte_end":72712,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Allows to compactly and efficiently put and take bits in a compressed","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":72713,"byte_end":72786,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ and very efficient way.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":72787,"byte_end":72814,"line_start":18,"line_end":18,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4420},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":73336,"byte_end":73344,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"BitStash","qualname":"::collections::bitstash::BitStash","value":"BitStash {  }","parent":null,"children":[{"krate":0,"index":4421},{"krate":0,"index":4422}],"decl_id":null,"docs":" A stash for bits operating on the contract storage.","sig":null,"attributes":[{"value":"/ A stash for bits operating on the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":73110,"byte_end":73165,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":73166,"byte_end":73169,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Allows to efficiently put and take bits and","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":73170,"byte_end":73217,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ stores the underlying bits in an extremely compressed format.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":73218,"byte_end":73283,"line_start":41,"line_end":41,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":74292,"byte_end":74295,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<BitStash>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new storage bit stash.\n","sig":null,"attributes":[{"value":"/ Creates a new storage bit stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":74244,"byte_end":74280,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75738,"byte_end":75741,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"get","qualname":"<BitStash>::get","value":"pub fn get(&Self, Index) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit at the indexed slot is set (`1`).","sig":null,"attributes":[{"value":"/ Returns `true` if the bit at the indexed slot is set (`1`).","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75601,"byte_end":75664,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75669,"byte_end":75672,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75677,"byte_end":75726,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75968,"byte_end":75971,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"put","qualname":"<BitStash>::put","value":"pub fn put(&mut Self) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Puts another set bit into the storage bit stash.","sig":null,"attributes":[{"value":"/ Puts another set bit into the storage bit stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75821,"byte_end":75873,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75878,"byte_end":75881,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Returns the index to the slot where the set bit has been inserted.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":75886,"byte_end":75956,"line_start":111,"line_end":111,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":78155,"byte_end":78159,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"take","qualname":"<BitStash>::take","value":"pub fn take(&mut Self, Index) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Takes the bit from the given index and returns it.","sig":null,"attributes":[{"value":"/ Takes the bit from the given index and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":77868,"byte_end":77922,"line_start":157,"line_end":157,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":77927,"byte_end":77930,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the indexed bit was set (`1`).","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":77935,"byte_end":77987,"line_start":159,"line_end":159,"column_start":5,"column_end":57}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":77992,"byte_end":78041,"line_start":160,"line_end":160,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":78046,"byte_end":78049,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":78054,"byte_end":78064,"line_start":162,"line_end":162,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":78069,"byte_end":78072,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This frees up the indexed slot for putting in another set bit.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":78077,"byte_end":78143,"line_start":164,"line_end":164,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":739},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bitvec","qualname":"::collections::bitvec","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":764},{"krate":0,"index":838},{"krate":0,"index":870},{"krate":0,"index":905},{"krate":0,"index":998},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":4554},{"krate":0,"index":4557},{"krate":0,"index":1113}],"decl_id":null,"docs":" Storage bit vector data structure and utilities.","sig":null,"attributes":[{"value":"/ Storage bit vector data structure and utilities.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":86158,"byte_end":86210,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":86211,"byte_end":86214,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Allows to compactly and efficiently store and manipulate on single bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":86215,"byte_end":86291,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4434},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95443,"byte_end":95452,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"BitRefMut","qualname":"::collections::bitvec::bitref::BitRefMut","value":"BitRefMut {  }","parent":null,"children":[{"krate":0,"index":4436},{"krate":0,"index":4437}],"decl_id":null,"docs":" A mutable bit access for operating on a single bit within a 256-bit pack.\n","sig":null,"attributes":[{"value":"/ A mutable bit access for operating on a single bit within a 256-bit pack.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95337,"byte_end":95414,"line_start":22,"line_end":22,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96095,"byte_end":96098,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"get","qualname":"<BitRefMut>::get","value":"pub fn get(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the indexed bit.","sig":null,"attributes":[{"value":"/ Returns the value of the indexed bit.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95948,"byte_end":95989,"line_start":45,"line_end":45,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95994,"byte_end":95997,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96002,"byte_end":96012,"line_start":47,"line_end":47,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96017,"byte_end":96020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ - If 0: returns `false`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96025,"byte_end":96052,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/ - If 1: returns `true`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96057,"byte_end":96083,"line_start":50,"line_end":50,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96231,"byte_end":96237,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"set_to","qualname":"<BitRefMut>::set_to","value":"pub fn set_to(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the indexed bit to the given new value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the indexed bit to the given new value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96158,"byte_end":96219,"line_start":55,"line_end":55,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96375,"byte_end":96378,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"set","qualname":"<BitRefMut>::set","value":"pub fn set(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets the indexed bit to `1` (true).\n","sig":null,"attributes":[{"value":"/ Sets the indexed bit to `1` (true).","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96324,"byte_end":96363,"line_start":60,"line_end":60,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96488,"byte_end":96493,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"reset","qualname":"<BitRefMut>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the indexed bit to `0` (false).\n","sig":null,"attributes":[{"value":"/ Resets the indexed bit to `0` (false).","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96434,"byte_end":96476,"line_start":65,"line_end":65,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96589,"byte_end":96593,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"flip","qualname":"<BitRefMut>::flip","value":"pub fn flip(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Flips the indexed bit.\n","sig":null,"attributes":[{"value":"/ Flips the indexed bit.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96551,"byte_end":96577,"line_start":70,"line_end":70,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96717,"byte_end":96720,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"xor","qualname":"<BitRefMut>::xor","value":"pub fn xor(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Computes bitwise XOR for the indexed bit and `rhs`.\n","sig":null,"attributes":[{"value":"/ Computes bitwise XOR for the indexed bit and `rhs`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96650,"byte_end":96705,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96859,"byte_end":96862,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"and","qualname":"<BitRefMut>::and","value":"pub fn and(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Computes bitwise AND for the indexed bit and `rhs`.\n","sig":null,"attributes":[{"value":"/ Computes bitwise AND for the indexed bit and `rhs`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96792,"byte_end":96847,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":97000,"byte_end":97002,"line_start":86,"line_end":86,"column_start":12,"column_end":14},"name":"or","qualname":"<BitRefMut>::or","value":"pub fn or(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Computes bitwise OR for the indexed bit and `rhs`.\n","sig":null,"attributes":[{"value":"/ Computes bitwise OR for the indexed bit and `rhs`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":96934,"byte_end":96988,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4471},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":101605,"byte_end":101612,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"Bits256","qualname":"::collections::bitvec::bits256::Bits256","value":"Bits256 {  }","parent":null,"children":[{"krate":0,"index":4472}],"decl_id":null,"docs":" A chunk of 256 bits.\n","sig":null,"attributes":[{"value":"/ A chunk of 256 bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":101435,"byte_end":101459,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":105783,"byte_end":105786,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"get","qualname":"<Bits256>::get","value":"pub fn get(&Self, Index256) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value for the bit at the given index.\n","sig":null,"attributes":[{"value":"/ Returns the bit value for the bit at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":105714,"byte_end":105771,"line_start":198,"line_end":198,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":107558,"byte_end":107577,"line_start":253,"line_end":253,"column_start":12,"column_end":31},"name":"position_first_zero","qualname":"<Bits256>::position_first_zero","value":"pub fn position_first_zero(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the first zero bit if any.\n","sig":null,"attributes":[{"value":"/ Returns the position of the first zero bit if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":107492,"byte_end":107546,"line_start":252,"line_end":252,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4500},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112019,"byte_end":112027,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"ChunkRef","qualname":"::collections::bitvec::bitsref::ChunkRef","value":"ChunkRef {  }","parent":null,"children":[{"krate":0,"index":4502},{"krate":0,"index":4503}],"decl_id":null,"docs":" A reference to a sub-slice within a 256-bit chunk.","sig":null,"attributes":[{"value":"/ A reference to a sub-slice within a 256-bit chunk.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":111689,"byte_end":111743,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":111744,"byte_end":111747,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a reference wrapper around either a shared 256-bit chunk","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":111748,"byte_end":111816,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ or an exclusive 256-bit chunk. Also it prevents accesses to out of bounds","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":111817,"byte_end":111894,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":111895,"byte_end":111904,"line_start":28,"line_end":28,"column_start":1,"column_end":10}},{"value":"repr(C)","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":111935,"byte_end":111945,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112407,"byte_end":112410,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"len","qualname":"<ChunkRef<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the 256-bit chunk.","sig":null,"attributes":[{"value":"/ Returns the length of the 256-bit chunk.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112183,"byte_end":112227,"line_start":39,"line_end":39,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112232,"byte_end":112235,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112240,"byte_end":112250,"line_start":41,"line_end":41,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112255,"byte_end":112258,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This is the number of valid bits in the chunk of 256 bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112263,"byte_end":112325,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ The valid bits are consecutive and always start from index 0.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112330,"byte_end":112395,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112733,"byte_end":112752,"line_start":57,"line_end":57,"column_start":12,"column_end":31},"name":"position_first_zero","qualname":"<ChunkRef<&'a Bits256>>::position_first_zero","value":"pub fn position_first_zero(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the first valid zero bit if any.\n","sig":null,"attributes":[{"value":"/ Returns the position of the first valid zero bit if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112661,"byte_end":112721,"line_start":56,"line_end":56,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113091,"byte_end":113094,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"get","qualname":"<ChunkRef<&'a Bits256>>::get","value":"pub fn get(&Self, u8) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the indexed bit.","sig":null,"attributes":[{"value":"/ Returns the value of the indexed bit.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112944,"byte_end":112985,"line_start":65,"line_end":65,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112990,"byte_end":112993,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112998,"byte_end":113008,"line_start":67,"line_end":67,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113013,"byte_end":113016,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ - If 0: returns `false`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113021,"byte_end":113048,"line_start":69,"line_end":69,"column_start":5,"column_end":32}},{"value":"/ - If 1: returns `true`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113053,"byte_end":113079,"line_start":70,"line_end":70,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113712,"byte_end":113719,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ChunkRef<&'a mut Bits256>>::get_mut","value":"pub fn get_mut(&mut Self, u8) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns mutable access to a single bit if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Returns mutable access to a single bit if the index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113627,"byte_end":113700,"line_start":90,"line_end":90,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4512},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120266,"byte_end":120274,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"BitsIter","qualname":"::collections::bitvec::iter::BitsIter","value":"BitsIter {  }","parent":null,"children":[{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4517}],"decl_id":null,"docs":" Iterator over the bits of a storage bit vector.\n","sig":null,"attributes":[{"value":"/ Iterator over the bits of a storage bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120173,"byte_end":120224,"line_start":30,"line_end":30,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4526},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":122780,"byte_end":122791,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"BitsIterMut","qualname":"::collections::bitvec::iter::BitsIterMut","value":"BitsIterMut {  }","parent":null,"children":[{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4530},{"krate":0,"index":4531}],"decl_id":null,"docs":" Iterator over the bits of a storage bit vector.\n","sig":null,"attributes":[{"value":"/ Iterator over the bits of a storage bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":122700,"byte_end":122751,"line_start":114,"line_end":114,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4554},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87194,"byte_end":87200,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Bitvec","qualname":"::collections::bitvec::Bitvec","value":"Bitvec {  }","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556}],"decl_id":null,"docs":" A storage bit vector.","sig":null,"attributes":[{"value":"/ A storage bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87002,"byte_end":87027,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87028,"byte_end":87031,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87032,"byte_end":87042,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87043,"byte_end":87046,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Organizes its bits in chunks of 256 bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87047,"byte_end":87092,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ Allows to `push`, `pop`, inspect and manipulate the underlying bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87093,"byte_end":87165,"line_start":70,"line_end":70,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87444,"byte_end":87447,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Bitvec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty bit vector.\n","sig":null,"attributes":[{"value":"/ Creates a new empty bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87397,"byte_end":87432,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87626,"byte_end":87629,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"len","qualname":"<Bitvec>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the bit vector in bits.\n","sig":null,"attributes":[{"value":"/ Returns the length of the bit vector in bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87565,"byte_end":87614,"line_start":90,"line_end":90,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87733,"byte_end":87741,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bitvec>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bit vector is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the bit vector is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87675,"byte_end":87721,"line_start":95,"line_end":95,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":88007,"byte_end":88015,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Bitvec>::capacity","value":"pub fn capacity(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the bit vector in bits.","sig":null,"attributes":[{"value":"/ Returns the capacity of the bit vector in bits.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87794,"byte_end":87845,"line_start":100,"line_end":100,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87850,"byte_end":87853,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87858,"byte_end":87868,"line_start":102,"line_end":102,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87873,"byte_end":87876,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns a `u64` since it is always greater than or equal to `self.len()`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87881,"byte_end":87957,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ which itself returns a `u32`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87962,"byte_end":87995,"line_start":105,"line_end":105,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":88158,"byte_end":88162,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"bits","qualname":"<Bitvec>::bits","value":"pub fn bits(&Self) -> BitsIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the bits of the storage bit vector.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the bits of the storage bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":88082,"byte_end":88146,"line_start":110,"line_end":110,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":88307,"byte_end":88315,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"bits_mut","qualname":"<Bitvec>::bits_mut","value":"pub fn bits_mut(&mut Self) -> BitsIterMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable bits of the storage bit vector.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable bits of the storage bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":88223,"byte_end":88295,"line_start":115,"line_end":115,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":90141,"byte_end":90144,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"get","qualname":"<Bitvec>::get","value":"pub fn get(&Self, Index) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the bit at the given index if any.\n","sig":null,"attributes":[{"value":"/ Returns the value of the bit at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":90070,"byte_end":90129,"line_start":162,"line_end":162,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":90361,"byte_end":90368,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Bitvec>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable bit access to the bit at the given index if any.\n","sig":null,"attributes":[{"value":"/ Returns a mutable bit access to the bit at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":90279,"byte_end":90349,"line_start":168,"line_end":168,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":90552,"byte_end":90561,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"get_chunk","qualname":"<Bitvec>::get_chunk","value":"pub fn get_chunk(&Self, Index) -> Option<ChunkRef<&Bits256>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the 256-bit chunk for the bit at the given index.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the 256-bit chunk for the bit at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":90457,"byte_end":90540,"line_start":173,"line_end":173,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91029,"byte_end":91042,"line_start":186,"line_end":186,"column_start":12,"column_end":25},"name":"get_chunk_mut","qualname":"<Bitvec>::get_chunk_mut","value":"pub fn get_chunk_mut(&mut Self, Index) -> Option<ChunkRef<&mut Bits256>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the 256-bit chunk for the bit at the given index.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the 256-bit chunk for the bit at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":90930,"byte_end":91017,"line_start":185,"line_end":185,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91564,"byte_end":91569,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"first","qualname":"<Bitvec>::first","value":"pub fn first(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns the first bit of the bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91426,"byte_end":91470,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91475,"byte_end":91478,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91483,"byte_end":91493,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91498,"byte_end":91501,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91506,"byte_end":91552,"line_start":201,"line_end":201,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91851,"byte_end":91860,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Bitvec>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable bit access to the first bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns a mutable bit access to the first bit of the bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91689,"byte_end":91757,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91762,"byte_end":91765,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91770,"byte_end":91780,"line_start":211,"line_end":211,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91785,"byte_end":91788,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":91793,"byte_end":91839,"line_start":213,"line_end":213,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92137,"byte_end":92141,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"last","qualname":"<Bitvec>::last","value":"pub fn last(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns the last bit of the bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92000,"byte_end":92043,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92048,"byte_end":92051,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92056,"byte_end":92066,"line_start":223,"line_end":223,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92071,"byte_end":92074,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92079,"byte_end":92125,"line_start":225,"line_end":225,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92435,"byte_end":92443,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Bitvec>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<BitRefMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable bit access to the last bit of the bit vector.","sig":null,"attributes":[{"value":"/ Returns a mutable bit access to the last bit of the bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92274,"byte_end":92341,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92346,"byte_end":92349,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92354,"byte_end":92364,"line_start":235,"line_end":235,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92369,"byte_end":92372,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the bit vector is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92377,"byte_end":92423,"line_start":237,"line_end":237,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92979,"byte_end":92983,"line_start":259,"line_end":259,"column_start":12,"column_end":16},"name":"push","qualname":"<Bitvec>::push","value":"pub fn push(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given value onto the bit vector.","sig":null,"attributes":[{"value":"/ Pushes the given value onto the bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92739,"byte_end":92786,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92791,"byte_end":92794,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92799,"byte_end":92809,"line_start":252,"line_end":252,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92814,"byte_end":92817,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This increases the length of the bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92822,"byte_end":92870,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92875,"byte_end":92878,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92883,"byte_end":92895,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92900,"byte_end":92903,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ If the storage bit vector reached its maximum capacity.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":92908,"byte_end":92967,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94295,"byte_end":94298,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"pop","qualname":"<Bitvec>::pop","value":"pub fn pop(&mut Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last bit from the bit vector.","sig":null,"attributes":[{"value":"/ Pops the last bit from the bit vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94102,"byte_end":94144,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94149,"byte_end":94152,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Returns the popped bit as `bool`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94157,"byte_end":94194,"line_start":291,"line_end":291,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94199,"byte_end":94202,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94207,"byte_end":94217,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94222,"byte_end":94225,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This reduces the length of the bit vector by one.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":94230,"byte_end":94283,"line_start":295,"line_end":295,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1145},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hashmap","qualname":"::collections::hashmap","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1259},{"krate":0,"index":1431},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":4646},{"krate":0,"index":4652},{"krate":0,"index":4674},{"krate":0,"index":4678},{"krate":0,"index":4657},{"krate":0,"index":4660},{"krate":0,"index":4668},{"krate":0,"index":1582},{"krate":0,"index":1588},{"krate":0,"index":1594},{"krate":0,"index":1604},{"krate":0,"index":1616},{"krate":0,"index":1621},{"krate":0,"index":1639},{"krate":0,"index":1653},{"krate":0,"index":1660}],"decl_id":null,"docs":" A storage hash map that allows to associate keys with values.\n","sig":null,"attributes":[{"value":"/ A storage hash map that allows to associate keys with values.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":131730,"byte_end":131795,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4559},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":155131,"byte_end":155135,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hashmap::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4564},{"krate":0,"index":4565}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":155012,"byte_end":155089,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4583},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":157485,"byte_end":157492,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hashmap::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4588},{"krate":0,"index":4589}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":157379,"byte_end":157456,"line_start":127,"line_end":127,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4596},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":159964,"byte_end":159970,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"Values","qualname":"::collections::hashmap::iter::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":4601}],"decl_id":null,"docs":" An iterator over shared references to the values of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the values of a storage hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":159847,"byte_end":159922,"line_start":225,"line_end":225,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4619},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":161542,"byte_end":161551,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::collections::hashmap::iter::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":4624}],"decl_id":null,"docs":" An iterator over exclusive references to the values of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the values of a storage hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":161435,"byte_end":161513,"line_start":295,"line_end":295,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":4631},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163151,"byte_end":163155,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"name":"Keys","qualname":"::collections::hashmap::iter::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":4634}],"decl_id":null,"docs":" An iterator over references to the keys of a storage hash map.\n","sig":null,"attributes":[{"value":"/ An iterator over references to the keys of a storage hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163043,"byte_end":163109,"line_start":365,"line_end":365,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4646},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133421,"byte_end":133428,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::collections::hashmap::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":4650},{"krate":0,"index":4651}],"decl_id":null,"docs":" A hash map operating on the contract storage.","sig":null,"attributes":[{"value":"/ A hash map operating on the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132542,"byte_end":132591,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132592,"byte_end":132595,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Stores a mapping between keys and values.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132596,"byte_end":132641,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132642,"byte_end":132645,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132646,"byte_end":132656,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132657,"byte_end":132660,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unlike Rust's standard `HashMap` that uses the [`core::hash::Hash`] trait","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132661,"byte_end":132738,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ in order to hash its keys the storage hash map uses the [`scale::Encode`]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132739,"byte_end":132816,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ encoding in order to hash its keys using a built-in cryptographic","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132817,"byte_end":132886,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/ hash function provided by the chain runtime.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132887,"byte_end":132935,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132936,"byte_end":132939,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The main difference between the lower-level `LazyHashMap` and the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":132940,"byte_end":133009,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/ `storage::HashMap` is that the latter is aware of its associated keys and","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133010,"byte_end":133087,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ values and operates on those instances directly as opposed to `Option`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133088,"byte_end":133162,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ instances of them. Also it provides a more high-level and user focused","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133163,"byte_end":133237,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ API.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133238,"byte_end":133246,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133247,"byte_end":133250,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Users should generally prefer using this storage hash map over the low-level","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133251,"byte_end":133331,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ `LazyHashMap` for direct usage in their smart contracts.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":133332,"byte_end":133392,"line_start":81,"line_end":81,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1582},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134163,"byte_end":134176,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::collections::hashmap::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134108,"byte_end":134151,"line_start":108,"line_end":108,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134518,"byte_end":134529,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::collections::hashmap::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593}],"decl_id":null,"docs":" A vacant entry with previous and next vacant indices.\n","sig":null,"attributes":[{"value":"/ A vacant entry with previous and next vacant indices.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134449,"byte_end":134506,"line_start":120,"line_end":120,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1598},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135164,"byte_end":135170,"line_start":142,"line_end":142,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::collections::hashmap::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" A vacant entry that holds the index to the next and previous vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry that holds the index to the next and previous vacant entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135081,"byte_end":135159,"line_start":141,"line_end":141,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1601},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135247,"byte_end":135255,"line_start":144,"line_end":144,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::collections::hashmap::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135199,"byte_end":135242,"line_start":143,"line_end":143,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1594},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134989,"byte_end":134994,"line_start":136,"line_end":136,"column_start":10,"column_end":15},"name":"Entry","qualname":"::collections::hashmap::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> where K: Ord + Clone + PackedLayout,\n         V: PackedLayout {\n    Vacant(VacantEntry),\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1601}],"decl_id":null,"docs":" An entry within the stash.","sig":null,"attributes":[{"value":"/ An entry within the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134798,"byte_end":134828,"line_start":132,"line_end":132,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134829,"byte_end":134832,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The vacant entries within a storage stash form a doubly linked list of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134833,"byte_end":134907,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/ vacant entries that is used to quickly re-use their vacant storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":134908,"byte_end":134979,"line_start":135,"line_end":135,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135496,"byte_end":135499,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, H>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage hash map.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135443,"byte_end":135484,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135697,"byte_end":135700,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, H>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of key-value pairs stored in the hash map.\n","sig":null,"attributes":[{"value":"/ Returns the number of key-value pairs stored in the hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135620,"byte_end":135685,"line_start":162,"line_end":162,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135976,"byte_end":135984,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, H>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the hash map is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the hash map is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135920,"byte_end":135964,"line_start":173,"line_end":173,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136360,"byte_end":136364,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, H>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all key/value pairs\n of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all key/value pairs","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136042,"byte_end":136115,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ of the hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136120,"byte_end":136140,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136145,"byte_end":136148,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136153,"byte_end":136163,"line_start":181,"line_end":181,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136168,"byte_end":136171,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136176,"byte_end":136235,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136240,"byte_end":136317,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136322,"byte_end":136348,"line_start":185,"line_end":185,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136747,"byte_end":136755,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, H>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all key/value pairs\n of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all key/value pairs","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136426,"byte_end":136502,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ of the hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136507,"byte_end":136527,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136532,"byte_end":136535,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136540,"byte_end":136550,"line_start":193,"line_end":193,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136555,"byte_end":136558,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136563,"byte_end":136622,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136627,"byte_end":136704,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136709,"byte_end":136735,"line_start":197,"line_end":197,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137128,"byte_end":137134,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, H>>::values","value":"pub fn values(&Self) -> Values<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all values of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all values of the hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136827,"byte_end":136908,"line_start":202,"line_end":202,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136913,"byte_end":136916,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136921,"byte_end":136931,"line_start":204,"line_end":204,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136936,"byte_end":136939,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":136944,"byte_end":137003,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137008,"byte_end":137085,"line_start":207,"line_end":207,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137090,"byte_end":137116,"line_start":208,"line_end":208,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137501,"byte_end":137511,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, H>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all values of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all values of the hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137200,"byte_end":137281,"line_start":213,"line_end":213,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137286,"byte_end":137289,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137294,"byte_end":137304,"line_start":215,"line_end":215,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137309,"byte_end":137312,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137317,"byte_end":137376,"line_start":217,"line_end":217,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137381,"byte_end":137458,"line_start":218,"line_end":218,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137463,"byte_end":137489,"line_start":219,"line_end":219,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137886,"byte_end":137890,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, H>>::keys","value":"pub fn keys(&Self) -> Keys<, K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all keys of the hash map.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all keys of the hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137587,"byte_end":137666,"line_start":224,"line_end":224,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137671,"byte_end":137674,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137679,"byte_end":137689,"line_start":226,"line_end":226,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137694,"byte_end":137697,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage hash maps.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137702,"byte_end":137761,"line_start":228,"line_end":228,"column_start":5,"column_end":64}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137766,"byte_end":137843,"line_start":229,"line_end":229,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137848,"byte_end":137874,"line_start":230,"line_end":230,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139547,"byte_end":139553,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, H>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139094,"byte_end":139136,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139141,"byte_end":139144,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Returns the previous value associated with the same key if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139149,"byte_end":139216,"line_start":271,"line_end":271,"column_start":5,"column_end":72}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139221,"byte_end":139286,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139291,"byte_end":139294,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139299,"byte_end":139309,"line_start":274,"line_end":274,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139314,"byte_end":139317,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ - If the map did have this key present, the value is updated,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139322,"byte_end":139387,"line_start":276,"line_end":276,"column_start":5,"column_end":70}},{"value":"/   and the old value is returned. The key is not updated, though;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139392,"byte_end":139460,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/   this matters for types that can be `==` without being identical.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":139465,"byte_end":139535,"line_start":278,"line_end":278,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140465,"byte_end":140469,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"name":"take","qualname":"<HashMap<K, V, H>>::take","value":"pub fn take<Q>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>, Q: Ord +\nscale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Removes the key/value pair from the map associated with the given key.","sig":null,"attributes":[{"value":"/ Removes the key/value pair from the map associated with the given key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140148,"byte_end":140222,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140227,"byte_end":140230,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ - Returns the removed value if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140235,"byte_end":140274,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140279,"byte_end":140282,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140287,"byte_end":140297,"line_start":301,"line_end":301,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140302,"byte_end":140305,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140310,"byte_end":140369,"line_start":303,"line_end":303,"column_start":5,"column_end":64}},{"value":"/ but `Hash` and `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140374,"byte_end":140453,"line_start":304,"line_end":304,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141045,"byte_end":141048,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, H>>::get","value":"pub fn get<Q>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Ord +\nscale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value corresponding to the key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140808,"byte_end":140877,"line_start":317,"line_end":317,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140882,"byte_end":140885,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140890,"byte_end":140949,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/ but `Hash` and `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":140954,"byte_end":141033,"line_start":320,"line_end":320,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141477,"byte_end":141484,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, H>>::get_mut","value":"pub fn get_mut<Q>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141239,"byte_end":141309,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141314,"byte_end":141317,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141322,"byte_end":141381,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/ but `Hash` and `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141386,"byte_end":141465,"line_start":332,"line_end":332,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141779,"byte_end":141791,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, H>>::contains_key","value":"pub fn contains_key<Q>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Ord +\nPartialEq<K> + Eq + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there is an entry corresponding to the key in the map.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there is an entry corresponding to the key in the map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":141691,"byte_end":141767,"line_start":341,"line_end":341,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142981,"byte_end":142987,"line_start":368,"line_end":368,"column_start":12,"column_end":18},"name":"defrag","qualname":"<HashMap<K, V, H>>::defrag","value":"pub fn defrag(&mut Self, Option<u32>) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Defragments storage used by the storage hash map.","sig":null,"attributes":[{"value":"/ Defragments storage used by the storage hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142333,"byte_end":142386,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142391,"byte_end":142394,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns the number of storage cells freed this way.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142399,"byte_end":142454,"line_start":357,"line_end":357,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142459,"byte_end":142462,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ A `max_iterations` parameter of `None` means that there is no limit","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142467,"byte_end":142538,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ to the number of iterations performed. This is generally not advised.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142543,"byte_end":142616,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142621,"byte_end":142624,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142629,"byte_end":142639,"line_start":362,"line_end":362,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142644,"byte_end":142647,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This frees storage that is held but not necessary for the hash map to hold.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142652,"byte_end":142731,"line_start":364,"line_end":364,"column_start":5,"column_end":84}},{"value":"/ This operation might be expensive, especially for big `max_iteration`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142736,"byte_end":142809,"line_start":365,"line_end":365,"column_start":5,"column_end":78}},{"value":"/ parameters. The `max_iterations` parameter can be used to limit the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142814,"byte_end":142885,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/ expensiveness for this operation and instead free up storage incrementally.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":142890,"byte_end":142969,"line_start":367,"line_end":367,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":144192,"byte_end":144197,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, H>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":144098,"byte_end":144180,"line_start":390,"line_end":390,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":144913,"byte_end":144916,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":144857,"byte_end":144901,"line_start":415,"line_end":415,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145247,"byte_end":145257,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty, and returns\n a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty, and returns","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145100,"byte_end":145188,"line_start":423,"line_end":423,"column_start":5,"column_end":93}},{"value":"/ a reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145193,"byte_end":145235,"line_start":424,"line_end":424,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145610,"byte_end":145619,"line_start":434,"line_end":434,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145461,"byte_end":145543,"line_start":432,"line_end":432,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145548,"byte_end":145598,"line_start":433,"line_end":433,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146013,"byte_end":146027,"line_start":443,"line_end":443,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145834,"byte_end":145927,"line_start":441,"line_end":441,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":145932,"byte_end":146001,"line_start":442,"line_end":442,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146514,"byte_end":146532,"line_start":456,"line_end":456,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default\n function, which takes the key as its argument, and returns a mutable reference to\n the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146295,"byte_end":146380,"line_start":453,"line_end":453,"column_start":5,"column_end":90}},{"value":"/ function, which takes the key as its argument, and returns a mutable reference to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146385,"byte_end":146470,"line_start":454,"line_end":454,"column_start":5,"column_end":90}},{"value":"/ the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146475,"byte_end":146502,"line_start":455,"line_end":455,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146933,"byte_end":146943,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.\n","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146813,"byte_end":146881,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":146886,"byte_end":146921,"line_start":467,"line_end":467,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147695,"byte_end":147698,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147583,"byte_end":147683,"line_start":495,"line_end":495,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147799,"byte_end":147807,"line_start":501,"line_end":501,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.\n","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147757,"byte_end":147787,"line_start":500,"line_end":500,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147980,"byte_end":147986,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147869,"byte_end":147968,"line_start":505,"line_end":505,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148444,"byte_end":148447,"line_start":522,"line_end":522,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148387,"byte_end":148432,"line_start":521,"line_end":521,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148575,"byte_end":148587,"line_start":527,"line_end":527,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148506,"byte_end":148563,"line_start":526,"line_end":526,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148910,"byte_end":148913,"line_start":537,"line_end":537,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148851,"byte_end":148898,"line_start":536,"line_end":536,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149189,"byte_end":149196,"line_start":545,"line_end":545,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148979,"byte_end":149034,"line_start":541,"line_end":541,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149039,"byte_end":149042,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the destruction of the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149047,"byte_end":149138,"line_start":543,"line_end":543,"column_start":5,"column_end":96}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149143,"byte_end":149177,"line_start":544,"line_end":544,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149357,"byte_end":149363,"line_start":550,"line_end":550,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149278,"byte_end":149345,"line_start":549,"line_end":549,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149550,"byte_end":149556,"line_start":555,"line_end":555,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149485,"byte_end":149538,"line_start":554,"line_end":554,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149755,"byte_end":149763,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149611,"byte_end":149694,"line_start":559,"line_end":559,"column_start":5,"column_end":88}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":149699,"byte_end":149743,"line_start":560,"line_end":560,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1671},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"smallvec","qualname":"::collections::smallvec","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1728},{"krate":0,"index":1796},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":4721},{"krate":0,"index":4726},{"krate":0,"index":1861},{"krate":0,"index":1865},{"krate":0,"index":1869},{"krate":0,"index":1876},{"krate":0,"index":1886},{"krate":0,"index":1890}],"decl_id":null,"docs":" A small storage vector that allows to store a limited amount of elements.","sig":null,"attributes":[{"value":"/ A small storage vector that allows to store a limited amount of elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168542,"byte_end":168619,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168620,"byte_end":168623,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Prefer using [`SmallVec`] over [`Vec`][`crate::Vec`] if you know up front","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168624,"byte_end":168701,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ the maximum amount of unique elements that have to be stored in the vector","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168702,"byte_end":168780,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ at the same time, given the number is fairly low: e.g. not exceeding several","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168781,"byte_end":168861,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ hundreds of elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":168862,"byte_end":168887,"line_start":20,"line_end":20,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4683},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":180834,"byte_end":180838,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::smallvec::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689}],"decl_id":null,"docs":" An iterator over shared references to the elements of a small storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a small storage vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":180711,"byte_end":180792,"line_start":21,"line_end":21,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4708},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":183068,"byte_end":183075,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::smallvec::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714}],"decl_id":null,"docs":" An iterator over exclusive references to the elements of a small storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the elements of a small storage vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":182955,"byte_end":183039,"line_start":109,"line_end":109,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":4721},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169714,"byte_end":169722,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"SmallVec","qualname":"::collections::smallvec::SmallVec","value":"SmallVec {  }","parent":null,"children":[{"krate":0,"index":4724},{"krate":0,"index":4725}],"decl_id":null,"docs":" A contiguous growable array type.","sig":null,"attributes":[{"value":"/ A contiguous growable array type.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169136,"byte_end":169173,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169174,"byte_end":169177,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169178,"byte_end":169188,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169189,"byte_end":169192,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - The `storage::SmallVec` has a very similar API compared to a `storage::Vec`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169193,"byte_end":169275,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/   The major difference between both data structures is that the `SmallVec`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169276,"byte_end":169354,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/   can only contain up to a fixed amount of elements given by `N` whereas the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169355,"byte_end":169435,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/   `Vec` can contain up to `2^32` elements which is the maximum for 32-bit Wasm","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169436,"byte_end":169518,"line_start":51,"line_end":51,"column_start":1,"column_end":83}},{"value":"/   targets.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169519,"byte_end":169533,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ - The performance characteristics may be different from Rust's","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169534,"byte_end":169600,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/   `Vec` due to the internal differences.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169601,"byte_end":169645,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ - Allows to store up to N elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169646,"byte_end":169685,"line_start":55,"line_end":55,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171014,"byte_end":171017,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallVec<T, N>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty vector.\n","sig":null,"attributes":[{"value":"/ Creates a new empty vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":170971,"byte_end":171002,"line_start":106,"line_end":106,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171207,"byte_end":171215,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SmallVec<T, N>>::capacity","value":"pub fn capacity(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the small vector.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the small vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171136,"byte_end":171181,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171186,"byte_end":171195,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171380,"byte_end":171383,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"len","qualname":"<SmallVec<T, N>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its length.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171273,"byte_end":171354,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171359,"byte_end":171368,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171509,"byte_end":171517,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SmallVec<T, N>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171429,"byte_end":171483,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171488,"byte_end":171497,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171925,"byte_end":171929,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"iter","qualname":"<SmallVec<T, N>>::iter","value":"pub fn iter(&Self) -> Iter<, T, >","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171640,"byte_end":171707,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171712,"byte_end":171715,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171720,"byte_end":171730,"line_start":139,"line_end":139,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171735,"byte_end":171738,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171743,"byte_end":171800,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171805,"byte_end":171882,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171887,"byte_end":171913,"line_start":143,"line_end":143,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172276,"byte_end":172284,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SmallVec<T, N>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T, >","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all elements.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171988,"byte_end":172058,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172063,"byte_end":172066,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172071,"byte_end":172081,"line_start":150,"line_end":150,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172086,"byte_end":172089,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ - Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172094,"byte_end":172151,"line_start":152,"line_end":152,"column_start":5,"column_end":62}},{"value":"/ - Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172156,"byte_end":172233,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/   of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172238,"byte_end":172264,"line_start":154,"line_end":154,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172648,"byte_end":172653,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"first","qualname":"<SmallVec<T, N>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the first element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172577,"byte_end":172636,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172841,"byte_end":172845,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"last","qualname":"<SmallVec<T, N>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the last element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":172771,"byte_end":172829,"line_start":175,"line_end":175,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173139,"byte_end":173142,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"get","qualname":"<SmallVec<T, N>>::get","value":"pub fn get(&Self, u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the indexed element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173013,"byte_end":173067,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173072,"byte_end":173075,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173080,"byte_end":173127,"line_start":186,"line_end":186,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173407,"byte_end":173411,"line_start":198,"line_end":198,"column_start":12,"column_end":16},"name":"push","qualname":"<SmallVec<T, N>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of the vector.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of the vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173346,"byte_end":173395,"line_start":197,"line_end":197,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173875,"byte_end":173878,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"pop","qualname":"<SmallVec<T, N>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and returns it.\n Returns `None` if the vector is empty.\n","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173752,"byte_end":173809,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ Returns `None` if the vector is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173821,"byte_end":173863,"line_start":215,"line_end":215,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174438,"byte_end":174446,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"pop_drop","qualname":"<SmallVec<T, N>>::pop_drop","value":"pub fn pop_drop(&mut Self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and immediately drops it.","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and immediately drops it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174097,"byte_end":174164,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174169,"byte_end":174172,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174177,"byte_end":174252,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174257,"byte_end":174260,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174265,"byte_end":174275,"line_start":229,"line_end":229,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174280,"byte_end":174283,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This operation is a bit more efficient than [`SmallVec::pop`]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174288,"byte_end":174353,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ since it avoids reading from contract storage in some use cases.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174358,"byte_end":174426,"line_start":232,"line_end":232,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174755,"byte_end":174764,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<SmallVec<T, N>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the first element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174680,"byte_end":174743,"line_start":243,"line_end":243,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174968,"byte_end":174976,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<SmallVec<T, N>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the last element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":174894,"byte_end":174956,"line_start":251,"line_end":251,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175286,"byte_end":175293,"line_start":263,"line_end":263,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SmallVec<T, N>>::get_mut","value":"pub fn get_mut(&mut Self, u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the indexed element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175156,"byte_end":175214,"line_start":260,"line_end":260,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175219,"byte_end":175222,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175227,"byte_end":175274,"line_start":262,"line_end":262,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175583,"byte_end":175587,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"swap","qualname":"<SmallVec<T, N>>::swap","value":"pub fn swap(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the elements at the given indices.","sig":null,"attributes":[{"value":"/ Swaps the elements at the given indices.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175444,"byte_end":175488,"line_start":268,"line_end":268,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175493,"byte_end":175496,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175501,"byte_end":175513,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175518,"byte_end":175521,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ If one or both indices are out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175526,"byte_end":175571,"line_start":272,"line_end":272,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176112,"byte_end":176123,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<SmallVec<T, N>>::swap_remove","value":"pub fn swap_remove(&mut Self, u32) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175772,"byte_end":175835,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175840,"byte_end":175843,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175848,"byte_end":175912,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/ Returns `None` and does not mutate the vector if the index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":175917,"byte_end":175997,"line_start":284,"line_end":284,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176002,"byte_end":176005,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176010,"byte_end":176020,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176025,"byte_end":176028,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This operation does not preserve ordering but is constant time.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176033,"byte_end":176100,"line_start":288,"line_end":288,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176738,"byte_end":176754,"line_start":307,"line_end":307,"column_start":12,"column_end":28},"name":"swap_remove_drop","qualname":"<SmallVec<T, N>>::swap_remove_drop","value":"pub fn swap_remove_drop(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176295,"byte_end":176343,"line_start":297,"line_end":297,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176348,"byte_end":176351,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176356,"byte_end":176420,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176425,"byte_end":176500,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176505,"byte_end":176508,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176513,"byte_end":176523,"line_start":302,"line_end":302,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176528,"byte_end":176531,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This operation should be preferred over [`Vec::swap_remove`] if there is","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176536,"byte_end":176612,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/ no need to return the removed element since it avoids a contract storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176617,"byte_end":176693,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ read for some use cases.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":176698,"byte_end":176726,"line_start":306,"line_end":306,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":1902},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stash","qualname":"::collections::stash","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1966},{"krate":0,"index":2042},{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":4777},{"krate":0,"index":4781},{"krate":0,"index":4797},{"krate":0,"index":4801},{"krate":0,"index":4784},{"krate":0,"index":4786},{"krate":0,"index":4792},{"krate":0,"index":4821},{"krate":0,"index":4824},{"krate":0,"index":4805},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4810},{"krate":0,"index":4816},{"krate":0,"index":4846},{"krate":0,"index":4854},{"krate":0,"index":4828},{"krate":0,"index":4831},{"krate":0,"index":4839},{"krate":0,"index":2163},{"krate":0,"index":2169},{"krate":0,"index":2182},{"krate":0,"index":2188},{"krate":0,"index":2191}],"decl_id":null,"docs":" A storage stash allowing to store indexed elements efficiently.\n","sig":null,"attributes":[{"value":"/ A storage stash allowing to store indexed elements efficiently.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":188658,"byte_end":188725,"line_start":15,"line_end":15,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4731},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":214499,"byte_end":214503,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::stash::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage stash.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":214383,"byte_end":214457,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4749},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":216922,"byte_end":216929,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::stash::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755}],"decl_id":null,"docs":" An iterator over exclusive references to the elements of a storage stash.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the elements of a storage stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":216816,"byte_end":216893,"line_start":123,"line_end":123,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4760},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220190,"byte_end":220197,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"Entries","qualname":"::collections::stash::iter::Entries","value":"Entries {  }","parent":null,"children":[{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4765}],"decl_id":null,"docs":" An iterator over shared references to the entries of a storage stash.","sig":null,"attributes":[{"value":"/ An iterator over shared references to the entries of a storage stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":219981,"byte_end":220054,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220055,"byte_end":220058,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220059,"byte_end":220069,"line_start":243,"line_end":243,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220070,"byte_end":220073,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ This is an internal API and mainly used for testing the storage stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220074,"byte_end":220148,"line_start":245,"line_end":245,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4777},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":189317,"byte_end":189322,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"Stash","qualname":"::collections::stash::Stash","value":"Stash {  }","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780}],"decl_id":null,"docs":" A stash data structure operating on contract storage.","sig":null,"attributes":[{"value":"/ A stash data structure operating on contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":189010,"byte_end":189067,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":189068,"byte_end":189071,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This allows to store information similar to a vector but in unordered","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":189072,"byte_end":189145,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ fashion which enables constant time random deletion of elements. This allows","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":189146,"byte_end":189226,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ for efficient attachment of data to some numeric indices.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":189227,"byte_end":189288,"line_start":43,"line_end":43,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4821},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190466,"byte_end":190477,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::collections::stash::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4823}],"decl_id":null,"docs":" A vacant entry with previous and next vacant indices.\n","sig":null,"attributes":[{"value":"/ A vacant entry with previous and next vacant indices.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190278,"byte_end":190335,"line_start":77,"line_end":77,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4848},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190978,"byte_end":190984,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::collections::stash::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":4846},"children":[],"decl_id":null,"docs":" A vacant entry that holds the index to the next and previous vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry that holds the index to the next and previous vacant entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190895,"byte_end":190973,"line_start":94,"line_end":94,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4851},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191050,"byte_end":191058,"line_start":97,"line_end":97,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::collections::stash::Entry::Occupied","value":"Entry::Occupied(T)","parent":{"krate":0,"index":4846},"children":[],"decl_id":null,"docs":" An occupied entry that hold the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that hold the value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191003,"byte_end":191045,"line_start":96,"line_end":96,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":4846},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190880,"byte_end":190885,"line_start":93,"line_end":93,"column_start":10,"column_end":15},"name":"Entry","qualname":"::collections::stash::Entry","value":"pub enum Entry<T> { Vacant(VacantEntry), Occupied(T), }","parent":null,"children":[{"krate":0,"index":4848},{"krate":0,"index":4851}],"decl_id":null,"docs":" An entry within the stash.","sig":null,"attributes":[{"value":"/ An entry within the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190583,"byte_end":190613,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190614,"byte_end":190617,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ The vacant entries within a storage stash form a doubly linked list of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190618,"byte_end":190692,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ vacant entries that is used to quickly re-use their vacant storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":190693,"byte_end":190764,"line_start":90,"line_end":90,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191145,"byte_end":191156,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_occupied","qualname":"<Entry<T>>::is_occupied","value":"pub fn is_occupied(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry is occupied.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry is occupied.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191089,"byte_end":191133,"line_start":101,"line_end":101,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191330,"byte_end":191339,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"is_vacant","qualname":"<Entry<T>>::is_vacant","value":"pub fn is_vacant(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry is vacant.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry is vacant.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191276,"byte_end":191318,"line_start":109,"line_end":109,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192054,"byte_end":192057,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<Stash<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty stash.\n","sig":null,"attributes":[{"value":"/ Creates a new empty stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192012,"byte_end":192042,"line_start":135,"line_end":135,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192358,"byte_end":192361,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<Stash<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements stored in the stash.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements stored in the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192291,"byte_end":192346,"line_start":147,"line_end":147,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192478,"byte_end":192486,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Stash<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the stash contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stash contains no elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192413,"byte_end":192466,"line_start":152,"line_end":152,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192761,"byte_end":192769,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Stash<T>>::capacity","value":"pub fn capacity(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entries the stash can hold without\n allocating another storage cell.","sig":null,"attributes":[{"value":"/ Returns the number of entries the stash can hold without","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192539,"byte_end":192599,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/ allocating another storage cell.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192604,"byte_end":192640,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192645,"byte_end":192648,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192653,"byte_end":192663,"line_start":160,"line_end":160,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192668,"byte_end":192671,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This is the total number of occupied and vacant entries of the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192676,"byte_end":192749,"line_start":162,"line_end":162,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193160,"byte_end":193171,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"entries_key","qualname":"<Stash<T>>::entries_key","value":"pub fn entries_key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying key to the cells.","sig":null,"attributes":[{"value":"/ Returns the underlying key to the cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":192976,"byte_end":193020,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193025,"byte_end":193028,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193033,"byte_end":193043,"line_start":174,"line_end":174,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193048,"byte_end":193051,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is a low-level utility getter and should","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193056,"byte_end":193105,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/ normally not be required by users.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193110,"byte_end":193148,"line_start":177,"line_end":177,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193527,"byte_end":193531,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<Stash<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the stash.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193235,"byte_end":193315,"line_start":182,"line_end":182,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193320,"byte_end":193323,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193328,"byte_end":193338,"line_start":184,"line_end":184,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193343,"byte_end":193346,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage stashes.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193351,"byte_end":193406,"line_start":186,"line_end":186,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193411,"byte_end":193486,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193491,"byte_end":193515,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193882,"byte_end":193890,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Stash<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all elements of the stash.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all elements of the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193587,"byte_end":193670,"line_start":193,"line_end":193,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193675,"byte_end":193678,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193683,"byte_end":193693,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193698,"byte_end":193701,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage stashes.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193706,"byte_end":193761,"line_start":197,"line_end":197,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193766,"byte_end":193841,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193846,"byte_end":193870,"line_start":199,"line_end":199,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":194047,"byte_end":194054,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"entries","qualname":"<Stash<T>>::entries","value":"pub fn entries(&Self) -> Entries<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all entries of the stash.\n","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all entries of the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":193956,"byte_end":194035,"line_start":204,"line_end":204,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":194648,"byte_end":194651,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"get","qualname":"<Stash<T>>::get","value":"pub fn get(&Self, Index) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the element at the given index.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the element at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":194571,"byte_end":194636,"line_start":228,"line_end":228,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":195107,"byte_end":195114,"line_start":243,"line_end":243,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Stash<T>>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the element at the given index.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the element at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":195026,"byte_end":195095,"line_start":242,"line_end":242,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":202191,"byte_end":202194,"line_start":419,"line_end":419,"column_start":12,"column_end":15},"name":"put","qualname":"<Stash<T>>::put","value":"pub fn put(&mut Self, T) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Put the element into the stash at the next vacant position.","sig":null,"attributes":[{"value":"/ Put the element into the stash at the next vacant position.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":202045,"byte_end":202108,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":202113,"byte_end":202116,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Returns the stash index that the element was put into.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":202121,"byte_end":202179,"line_start":418,"line_end":418,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":203433,"byte_end":203437,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"take","qualname":"<Stash<T>>::take","value":"pub fn take(&mut Self, Index) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the element stored at the given index if any.\n","sig":null,"attributes":[{"value":"/ Takes the element stored at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":203366,"byte_end":203421,"line_start":447,"line_end":447,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205821,"byte_end":205836,"line_start":499,"line_end":499,"column_start":19,"column_end":34},"name":"remove_occupied","qualname":"<Stash<T>>::remove_occupied","value":"pub unsafe fn remove_occupied(&mut Self, Index) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes the element stored at the given index if any.","sig":null,"attributes":[{"value":"/ Removes the element stored at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":204990,"byte_end":205047,"line_start":483,"line_end":483,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205052,"byte_end":205055,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ This method acts similar to the take API and even still returns an Option.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205060,"byte_end":205138,"line_start":485,"line_end":485,"column_start":5,"column_end":83}},{"value":"/ However, it guarantees to make no contract storage reads to the indexed","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205143,"byte_end":205218,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ element and will only write to its internal low-level lazy cache that the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205223,"byte_end":205300,"line_start":487,"line_end":487,"column_start":5,"column_end":82}},{"value":"/ element at the given index is going to be removed at the end of the contract","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205305,"byte_end":205385,"line_start":488,"line_end":488,"column_start":5,"column_end":85}},{"value":"/ execution.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205390,"byte_end":205404,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205409,"byte_end":205412,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Calling this method with an index out of bounds for the returns `None` and","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205417,"byte_end":205495,"line_start":491,"line_end":491,"column_start":5,"column_end":83}},{"value":"/ does not `remove` the element, otherwise it returns `Some(())`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205500,"byte_end":205567,"line_start":492,"line_end":492,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205572,"byte_end":205575,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205580,"byte_end":205592,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205597,"byte_end":205600,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `at` refers to an occupied index. Behavior is","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205605,"byte_end":205682,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ unspecified if `at` refers to a vacant index and could seriously damage the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205687,"byte_end":205766,"line_start":497,"line_end":497,"column_start":5,"column_end":84}},{"value":"/ contract storage integrity.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":205771,"byte_end":205802,"line_start":498,"line_end":498,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207906,"byte_end":207912,"line_start":542,"line_end":542,"column_start":12,"column_end":18},"name":"defrag","qualname":"<Stash<T>>::defrag","value":"pub fn defrag<C>(&mut Self, Option<u32>, C) -> u32 where\nC: FnMut(Index, Index, &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Defragments the underlying storage to minimize footprint.","sig":null,"attributes":[{"value":"/ Defragments the underlying storage to minimize footprint.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":206953,"byte_end":207014,"line_start":520,"line_end":520,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207019,"byte_end":207022,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Returns the number of storage cells freed this way.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207027,"byte_end":207082,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207087,"byte_end":207090,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This might invalidate indices stored outside the stash.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207095,"byte_end":207154,"line_start":524,"line_end":524,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207159,"byte_end":207162,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Callback","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207167,"byte_end":207181,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207186,"byte_end":207189,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ In order to keep those indices up-to-date the caller can provide","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207194,"byte_end":207262,"line_start":528,"line_end":528,"column_start":5,"column_end":73}},{"value":"/ a callback function that is called for every moved entry","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207267,"byte_end":207327,"line_start":529,"line_end":529,"column_start":5,"column_end":65}},{"value":"/ with a shared reference to the entries value and the old as well","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207332,"byte_end":207400,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/ as the new index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207405,"byte_end":207426,"line_start":531,"line_end":531,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207431,"byte_end":207434,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207439,"byte_end":207449,"line_start":533,"line_end":533,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207454,"byte_end":207457,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ - If `max_iterations` is `Some` concrete value it is used in order to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207462,"byte_end":207535,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/   bound the number of iterations and won't try to defrag until the stash","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207540,"byte_end":207616,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/   is optimally compacted.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207621,"byte_end":207650,"line_start":537,"line_end":537,"column_start":5,"column_end":34}},{"value":"/ - Users are advised to call this method using `Some` concrete","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207655,"byte_end":207720,"line_start":538,"line_end":538,"column_start":5,"column_end":70}},{"value":"/   value to keep gas costs within certain bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207725,"byte_end":207777,"line_start":539,"line_end":539,"column_start":5,"column_end":57}},{"value":"/ - The call to the given callback takes place before the reinsertion","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207782,"byte_end":207853,"line_start":540,"line_end":540,"column_start":5,"column_end":76}},{"value":"/   of the shifted occupied entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":207858,"byte_end":207894,"line_start":541,"line_end":541,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":2211},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::collections::vec","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2269},{"krate":0,"index":2328},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2388},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":4886},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4903},{"krate":0,"index":4905},{"krate":0,"index":2394},{"krate":0,"index":2397},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2414},{"krate":0,"index":2428}],"decl_id":null,"docs":" A storage vector used to store elements in a contiguous sequenced order.","sig":null,"attributes":[{"value":"/ A storage vector used to store elements in a contiguous sequenced order.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":226818,"byte_end":226894,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":226895,"byte_end":226898,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is by default the go-to collection for most smart contracts if there","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":226899,"byte_end":226976,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ are no special requirements to the storage data structure.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":226977,"byte_end":227039,"line_start":18,"line_end":18,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4859},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":246604,"byte_end":246608,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864}],"decl_id":null,"docs":" An iterator over shared references to the elements of a storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over shared references to the elements of a storage vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":246487,"byte_end":246562,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4876},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248738,"byte_end":248745,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881}],"decl_id":null,"docs":" An iterator over exclusive references to the elements of a storage vector.\n","sig":null,"attributes":[{"value":"/ An iterator over exclusive references to the elements of a storage vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248631,"byte_end":248709,"line_start":109,"line_end":109,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":4886},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227940,"byte_end":227943,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"Vec","qualname":"::collections::vec::Vec","value":"Vec {  }","parent":null,"children":[{"krate":0,"index":4888},{"krate":0,"index":4889}],"decl_id":null,"docs":" A contiguous growable array type, written `Vec<T>` but pronounced \"vector\".","sig":null,"attributes":[{"value":"/ A contiguous growable array type, written `Vec<T>` but pronounced \"vector\".","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227310,"byte_end":227389,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227390,"byte_end":227393,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227394,"byte_end":227404,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227405,"byte_end":227408,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Despite the similarity to Rust's `Vec` type this storage `Vec` has many","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227409,"byte_end":227484,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ differences in its internal data layout. While it stores its data in contiguous","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227485,"byte_end":227568,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/ storage slots this does not mean that the data is actually densely stored","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227569,"byte_end":227646,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ in memory.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227647,"byte_end":227661,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227662,"byte_end":227665,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Also its technical performance characteristics may be different from Rust's","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227666,"byte_end":227745,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ `Vec` due to the differences stated above.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227746,"byte_end":227792,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227793,"byte_end":227796,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Allows to store up to `2^32` elements and is guaranteed to not reallocate","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227797,"byte_end":227874,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ upon pushing new elements to it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":227875,"byte_end":227911,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4893},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228239,"byte_end":228255,"line_start":69,"line_end":69,"column_start":12,"column_end":28},"name":"IndexOutOfBounds","qualname":"::collections::vec::IndexOutOfBounds","value":"","parent":null,"children":[],"decl_id":null,"docs":" The index is out of the bounds of this vector.\n","sig":null,"attributes":[{"value":"/ The index is out of the bounds of this vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228128,"byte_end":228178,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228469,"byte_end":228472,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Vec<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty storage vector.\n","sig":null,"attributes":[{"value":"/ Creates a new empty storage vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228418,"byte_end":228457,"line_start":84,"line_end":84,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228685,"byte_end":228688,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"len","qualname":"<Vec<T>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to as its length.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to as its length.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228592,"byte_end":228673,"line_start":92,"line_end":92,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228800,"byte_end":228808,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Vec<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228734,"byte_end":228788,"line_start":97,"line_end":97,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230028,"byte_end":230032,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"iter","qualname":"<Vec<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding shared references to all elements of the vector.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding shared references to all elements of the vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229735,"byte_end":229816,"line_start":133,"line_end":133,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229821,"byte_end":229824,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229829,"byte_end":229839,"line_start":135,"line_end":135,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229844,"byte_end":229847,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229852,"byte_end":229907,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229912,"byte_end":229987,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229992,"byte_end":230016,"line_start":139,"line_end":139,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230384,"byte_end":230392,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Vec<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding exclusive references to all elements of the vector.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding exclusive references to all elements of the vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230088,"byte_end":230172,"line_start":144,"line_end":144,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230177,"byte_end":230180,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230185,"byte_end":230195,"line_start":146,"line_end":146,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230200,"byte_end":230203,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Avoid unbounded iteration over big storage vectors.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230208,"byte_end":230263,"line_start":148,"line_end":148,"column_start":5,"column_end":60}},{"value":"/ Prefer using methods like `Iterator::take` in order to limit the number","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230268,"byte_end":230343,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ of yielded elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230348,"byte_end":230372,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230749,"byte_end":230754,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"first","qualname":"<Vec<T>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the first element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230678,"byte_end":230737,"line_start":163,"line_end":163,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230942,"byte_end":230946,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"last","qualname":"<Vec<T>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the last element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":230872,"byte_end":230930,"line_start":171,"line_end":171,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231240,"byte_end":231243,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"get","qualname":"<Vec<T>>::get","value":"pub fn get(&Self, u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the indexed element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231114,"byte_end":231168,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231173,"byte_end":231176,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231181,"byte_end":231228,"line_start":182,"line_end":182,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231484,"byte_end":231488,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"push","qualname":"<Vec<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of the vector.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of the vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231423,"byte_end":231472,"line_start":193,"line_end":193,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233155,"byte_end":233168,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"binary_search","qualname":"<Vec<T>>::binary_search","value":"pub fn binary_search(&Self, &T) -> Result<u32, u32> where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Binary searches this sorted vector for a given element.","sig":null,"attributes":[{"value":"/ Binary searches this sorted vector for a given element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231766,"byte_end":231825,"line_start":204,"line_end":204,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231830,"byte_end":231833,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If the value is found then [`Result::Ok`] is returned, containing the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231838,"byte_end":231911,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ index of the matching element. If there are multiple matches, then any","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231916,"byte_end":231990,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ one of the matches could be returned. If the value is not found then","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231995,"byte_end":232067,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ [`Result::Err`] is returned, containing the index where a matching","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232072,"byte_end":232142,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ element could be inserted while maintaining sorted order.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232147,"byte_end":232208,"line_start":210,"line_end":210,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232213,"byte_end":232216,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ See also [`binary_search_by`], [`binary_search_by_key`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232221,"byte_end":232281,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232286,"byte_end":232289,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`binary_search_by`]: Vec::binary_search_by","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232294,"byte_end":232341,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/ [`binary_search_by_key`]: Vec::binary_search_by_key","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232346,"byte_end":232401,"line_start":215,"line_end":215,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232406,"byte_end":232409,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232414,"byte_end":232428,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232433,"byte_end":232436,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Looks up a series of four elements. The first is found, with a","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232441,"byte_end":232507,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/ uniquely determined position; the second and third are not","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232512,"byte_end":232574,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/ found; the fourth could match any position in `[1, 4]`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232579,"byte_end":232638,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232643,"byte_end":232646,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232651,"byte_end":232658,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use ink_storage::Vec as StorageVec;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232663,"byte_end":232702,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232707,"byte_end":232710,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let s: StorageVec<i32> = [0, 1, 1, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232715,"byte_end":232787,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"/     .into_iter()","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232792,"byte_end":232812,"line_start":227,"line_end":227,"column_start":5,"column_end":25}},{"value":"/     .copied()","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232817,"byte_end":232834,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232839,"byte_end":232858,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232863,"byte_end":232866,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.binary_search(&13),  Ok(9));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232871,"byte_end":232916,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(s.binary_search(&4),   Err(7));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232921,"byte_end":232967,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(s.binary_search(&100), Err(13));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":232972,"byte_end":233019,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/ let r = s.binary_search(&1);","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233024,"byte_end":233056,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/ assert!(match r { Ok(1..=4) => true, _ => false, });","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233061,"byte_end":233117,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233122,"byte_end":233129,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233134,"byte_end":233143,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":235365,"byte_end":235381,"line_start":291,"line_end":291,"column_start":12,"column_end":28},"name":"binary_search_by","qualname":"<Vec<T>>::binary_search_by","value":"pub fn binary_search_by<'a, F>(&'a Self, F) -> Result<u32, u32> where\nF: FnMut(&'a T) -> core::cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Binary searches this sorted vector with a comparator function.","sig":null,"attributes":[{"value":"/ Binary searches this sorted vector with a comparator function.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233290,"byte_end":233356,"line_start":245,"line_end":245,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233361,"byte_end":233364,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The comparator function should implement an order consistent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233369,"byte_end":233433,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ with the sort order of the underlying vector, returning an","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233438,"byte_end":233500,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ order code that indicates whether its argument is `Less`,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233505,"byte_end":233566,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ `Equal` or `Greater` the desired target.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233571,"byte_end":233615,"line_start":250,"line_end":250,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233620,"byte_end":233623,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ If the value is found then [`Result::Ok`] is returned, containing the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233628,"byte_end":233701,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ index of the matching element. If there are multiple matches, then any","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233706,"byte_end":233780,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ one of the matches could be returned. If the value is not found then","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233785,"byte_end":233857,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ [`Result::Err`] is returned, containing the index where a matching","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233862,"byte_end":233932,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/ element could be inserted while maintaining sorted order.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":233937,"byte_end":233998,"line_start":256,"line_end":256,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234003,"byte_end":234006,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ See also [`binary_search`], [`binary_search_by_key`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234011,"byte_end":234068,"line_start":258,"line_end":258,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234073,"byte_end":234076,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`binary_search`]: Vec::binary_search","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234081,"byte_end":234122,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/ [`binary_search_by_key`]: Vec::binary_search_by_key","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234127,"byte_end":234182,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234187,"byte_end":234190,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234195,"byte_end":234209,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234214,"byte_end":234217,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Looks up a series of four elements. The first is found, with a","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234222,"byte_end":234288,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/ uniquely determined position; the second and third are not","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234293,"byte_end":234355,"line_start":266,"line_end":266,"column_start":5,"column_end":67}},{"value":"/ found; the fourth could match any position in `[1, 4]`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234360,"byte_end":234419,"line_start":267,"line_end":267,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234424,"byte_end":234427,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234432,"byte_end":234439,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use ink_storage::Vec as StorageVec;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234444,"byte_end":234483,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234488,"byte_end":234491,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let s: StorageVec<i32> = [0, 1, 1, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234496,"byte_end":234568,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/     .into_iter()","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234573,"byte_end":234593,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/     .copied()","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234598,"byte_end":234615,"line_start":274,"line_end":274,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234620,"byte_end":234639,"line_start":275,"line_end":275,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234644,"byte_end":234647,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let seek = 13;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234652,"byte_end":234670,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(s.binary_search_by(|probe| probe.cmp(&seek)), Ok(9));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234675,"byte_end":234743,"line_start":278,"line_end":278,"column_start":5,"column_end":73}},{"value":"/ let seek = 4;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234748,"byte_end":234765,"line_start":279,"line_end":279,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(s.binary_search_by(|probe| probe.cmp(&seek)), Err(7));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234770,"byte_end":234839,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/ let seek = 100;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234844,"byte_end":234863,"line_start":281,"line_end":281,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(s.binary_search_by(|probe| probe.cmp(&seek)), Err(13));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234868,"byte_end":234938,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ let seek = 1;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234943,"byte_end":234960,"line_start":283,"line_end":283,"column_start":5,"column_end":22}},{"value":"/ let r = s.binary_search_by(|probe| probe.cmp(&seek));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":234965,"byte_end":235022,"line_start":284,"line_end":284,"column_start":5,"column_end":62}},{"value":"/ assert!(match r { Ok(1..=4) => true, _ => false, });","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":235027,"byte_end":235083,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":235088,"byte_end":235095,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":235344,"byte_end":235353,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238076,"byte_end":238096,"line_start":372,"line_end":372,"column_start":12,"column_end":32},"name":"binary_search_by_key","qualname":"<Vec<T>>::binary_search_by_key","value":"pub fn binary_search_by_key<'a, B, F>(&'a Self, &B, F) -> Result<u32, u32>\nwhere F: FnMut(&'a T) -> B, B: Ord","parent":null,"children":[],"decl_id":null,"docs":" Binary searches this sorted vector with a key extraction function.","sig":null,"attributes":[{"value":"/ Binary searches this sorted vector with a key extraction function.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236329,"byte_end":236399,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236404,"byte_end":236407,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ If the value is found then [`Result::Ok`] is returned, containing the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236412,"byte_end":236485,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ index of the matching element. If there are multiple matches, then any","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236490,"byte_end":236564,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ one of the matches could be returned. If the value is not found then","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236569,"byte_end":236641,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ [`Result::Err`] is returned, containing the index where a matching","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236646,"byte_end":236716,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ element could be inserted while maintaining sorted order.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236721,"byte_end":236782,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236787,"byte_end":236790,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ See also [`binary_search`], [`binary_search_by`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236795,"byte_end":236848,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236853,"byte_end":236856,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`binary_search`]: Vec::binary_search","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236861,"byte_end":236902,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ [`binary_search_by`]: Vec::binary_search_by","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236907,"byte_end":236954,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236959,"byte_end":236962,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236967,"byte_end":236981,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236986,"byte_end":236989,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Looks up a series of four elements in a vector of pairs sorted by","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":236994,"byte_end":237063,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/ their second elements. The first is found, with a uniquely","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237068,"byte_end":237130,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/ determined position; the second and third are not found; the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237135,"byte_end":237199,"line_start":340,"line_end":340,"column_start":5,"column_end":69}},{"value":"/ fourth could match any position in `[1, 4]`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237204,"byte_end":237252,"line_start":341,"line_end":341,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237257,"byte_end":237260,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237265,"byte_end":237272,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use ink_storage::Vec as StorageVec;","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237277,"byte_end":237316,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237321,"byte_end":237324,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let s: StorageVec<(i32, i32)> = [","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237329,"byte_end":237366,"line_start":346,"line_end":346,"column_start":5,"column_end":42}},{"value":"/     (0, 0),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237371,"byte_end":237386,"line_start":347,"line_end":347,"column_start":5,"column_end":20}},{"value":"/     (2, 1),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237391,"byte_end":237406,"line_start":348,"line_end":348,"column_start":5,"column_end":20}},{"value":"/     (4, 1),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237411,"byte_end":237426,"line_start":349,"line_end":349,"column_start":5,"column_end":20}},{"value":"/     (5, 1),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237431,"byte_end":237446,"line_start":350,"line_end":350,"column_start":5,"column_end":20}},{"value":"/     (3, 1),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237451,"byte_end":237466,"line_start":351,"line_end":351,"column_start":5,"column_end":20}},{"value":"/     (1, 2),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237471,"byte_end":237486,"line_start":352,"line_end":352,"column_start":5,"column_end":20}},{"value":"/     (2, 3),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237491,"byte_end":237506,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/     (4, 5),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237511,"byte_end":237526,"line_start":354,"line_end":354,"column_start":5,"column_end":20}},{"value":"/     (5, 8),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237531,"byte_end":237546,"line_start":355,"line_end":355,"column_start":5,"column_end":20}},{"value":"/     (3, 13),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237551,"byte_end":237567,"line_start":356,"line_end":356,"column_start":5,"column_end":21}},{"value":"/     (1, 21),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237572,"byte_end":237588,"line_start":357,"line_end":357,"column_start":5,"column_end":21}},{"value":"/     (2, 34),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237593,"byte_end":237609,"line_start":358,"line_end":358,"column_start":5,"column_end":21}},{"value":"/     (4, 55),","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237614,"byte_end":237630,"line_start":359,"line_end":359,"column_start":5,"column_end":21}},{"value":"/ ]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237635,"byte_end":237640,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ .into_iter()","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237645,"byte_end":237661,"line_start":361,"line_end":361,"column_start":5,"column_end":21}},{"value":"/ .copied()","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237666,"byte_end":237679,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ .collect();","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237684,"byte_end":237699,"line_start":363,"line_end":363,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237704,"byte_end":237707,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.binary_search_by_key(&13, |&(a, b)| b),  Ok(9));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237712,"byte_end":237777,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(s.binary_search_by_key(&4, |&(a, b)| b),   Err(7));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237782,"byte_end":237848,"line_start":366,"line_end":366,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(s.binary_search_by_key(&100, |&(a, b)| b), Err(13));","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237853,"byte_end":237920,"line_start":367,"line_end":367,"column_start":5,"column_end":72}},{"value":"/ let r = s.binary_search_by_key(&1, |&(a, b)| b);","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237925,"byte_end":237977,"line_start":368,"line_end":368,"column_start":5,"column_end":57}},{"value":"/ assert!(match r { Ok(1..=4) => true, _ => false, });","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":237982,"byte_end":238038,"line_start":369,"line_end":369,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238043,"byte_end":238050,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238055,"byte_end":238064,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238443,"byte_end":238446,"line_start":388,"line_end":388,"column_start":12,"column_end":15},"name":"pop","qualname":"<Vec<T>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and returns it.\n Returns `None` if the vector is empty.\n","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238320,"byte_end":238377,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ Returns `None` if the vector is empty.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238389,"byte_end":238431,"line_start":387,"line_end":387,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239001,"byte_end":239009,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"pop_drop","qualname":"<Vec<T>>::pop_drop","value":"pub fn pop_drop(&mut Self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Pops the last element from the vector and immediately drops it.","sig":null,"attributes":[{"value":"/ Pops the last element from the vector and immediately drops it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238665,"byte_end":238732,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238737,"byte_end":238740,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238745,"byte_end":238820,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238825,"byte_end":238828,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238833,"byte_end":238843,"line_start":401,"line_end":401,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238848,"byte_end":238851,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This operation is a bit more efficient than [`Vec::pop`]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238856,"byte_end":238916,"line_start":403,"line_end":403,"column_start":5,"column_end":65}},{"value":"/ since it avoids reading from contract storage in some use cases.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238921,"byte_end":238989,"line_start":404,"line_end":404,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239318,"byte_end":239327,"line_start":416,"line_end":416,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Vec<T>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the first element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the first element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239243,"byte_end":239306,"line_start":415,"line_end":415,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239531,"byte_end":239539,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Vec<T>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the last element if any.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the last element if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239457,"byte_end":239519,"line_start":423,"line_end":423,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239849,"byte_end":239856,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Vec<T>>::get_mut","value":"pub fn get_mut(&mut Self, u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the indexed element.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the indexed element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239719,"byte_end":239777,"line_start":432,"line_end":432,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239782,"byte_end":239785,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `index` is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":239790,"byte_end":239837,"line_start":434,"line_end":434,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240146,"byte_end":240150,"line_start":445,"line_end":445,"column_start":12,"column_end":16},"name":"swap","qualname":"<Vec<T>>::swap","value":"pub fn swap(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the elements at the given indices.","sig":null,"attributes":[{"value":"/ Swaps the elements at the given indices.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240007,"byte_end":240051,"line_start":440,"line_end":440,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240056,"byte_end":240059,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240064,"byte_end":240076,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240081,"byte_end":240084,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If one or both indices are out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240089,"byte_end":240134,"line_start":444,"line_end":444,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240675,"byte_end":240686,"line_start":461,"line_end":461,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<Vec<T>>::swap_remove","value":"pub fn swap_remove(&mut Self, u32) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240335,"byte_end":240398,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240403,"byte_end":240406,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240411,"byte_end":240475,"line_start":455,"line_end":455,"column_start":5,"column_end":69}},{"value":"/ Returns `None` and does not mutate the vector if the index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240480,"byte_end":240560,"line_start":456,"line_end":456,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240565,"byte_end":240568,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240573,"byte_end":240583,"line_start":458,"line_end":458,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240588,"byte_end":240591,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This operation does not preserve ordering but is constant time.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240596,"byte_end":240663,"line_start":460,"line_end":460,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241301,"byte_end":241317,"line_start":479,"line_end":479,"column_start":12,"column_end":28},"name":"swap_remove_drop","qualname":"<Vec<T>>::swap_remove_drop","value":"pub fn swap_remove_drop(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes the indexed element from the vector.","sig":null,"attributes":[{"value":"/ Removes the indexed element from the vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240858,"byte_end":240906,"line_start":469,"line_end":469,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240911,"byte_end":240914,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The last element of the vector is put into the indexed slot.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240919,"byte_end":240983,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/ Returns `Some(())` if an element has been removed and `None` otherwise.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":240988,"byte_end":241063,"line_start":472,"line_end":472,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241068,"byte_end":241071,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241076,"byte_end":241086,"line_start":474,"line_end":474,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241091,"byte_end":241094,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This operation should be preferred over [`Vec::swap_remove`] if there is","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241099,"byte_end":241175,"line_start":476,"line_end":476,"column_start":5,"column_end":81}},{"value":"/ no need to return the removed element since it avoids a contract storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241180,"byte_end":241256,"line_start":477,"line_end":477,"column_start":5,"column_end":81}},{"value":"/ read for some use cases.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241261,"byte_end":241289,"line_start":478,"line_end":478,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241922,"byte_end":241925,"line_start":497,"line_end":497,"column_start":12,"column_end":15},"name":"set","qualname":"<Vec<T>>::set","value":"pub fn set(&mut Self, u32, T) -> Result<(), IndexOutOfBounds>","parent":null,"children":[],"decl_id":null,"docs":" Sets the elements at the given index to the new value.","sig":null,"attributes":[{"value":"/ Sets the elements at the given index to the new value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241640,"byte_end":241698,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241703,"byte_end":241706,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Won't return the old element back to the caller.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241711,"byte_end":241763,"line_start":493,"line_end":493,"column_start":5,"column_end":57}},{"value":"/ Prefer this operation over other method of overriding an element","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241768,"byte_end":241836,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/ in the storage vector since this is more efficient.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241841,"byte_end":241896,"line_start":495,"line_end":495,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":241901,"byte_end":241910,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242464,"byte_end":242469,"line_start":512,"line_end":512,"column_start":12,"column_end":17},"name":"clear","qualname":"<Vec<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from this vector.","sig":null,"attributes":[{"value":"/ Removes all elements from this vector.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242171,"byte_end":242213,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242218,"byte_end":242221,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242226,"byte_end":242236,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242241,"byte_end":242244,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Use this method to clear the vector instead of e.g. iterative `pop()`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242249,"byte_end":242323,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ This method performs significantly better and does not actually read","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242328,"byte_end":242400,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ any of the elements (whereas `pop()` does).","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":242405,"byte_end":242452,"line_start":511,"line_end":511,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2467},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lazy","qualname":"::lazy","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2745},{"krate":0,"index":2780},{"krate":0,"index":2877},{"krate":0,"index":3050},{"krate":0,"index":3141},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3287},{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3300},{"krate":0,"index":4986},{"krate":0,"index":4989},{"krate":0,"index":3303},{"krate":0,"index":3313},{"krate":0,"index":3319},{"krate":0,"index":3323},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3334},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":3352},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3372}],"decl_id":null,"docs":" Low-level collections and data structures to manage storage entities in the\n persisted contract storage.","sig":null,"attributes":[{"value":"/ Low-level collections and data structures to manage storage entities in the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254320,"byte_end":254399,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ persisted contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254400,"byte_end":254431,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254432,"byte_end":254435,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Users should generally avoid using these collections directly in their","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254436,"byte_end":254510,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ contracts and should instead adhere to the high-level collections found","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254511,"byte_end":254586,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ in [`collections`][`crate::collections`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254587,"byte_end":254632,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ The low-level collections are mainly used as building blocks for internals","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254633,"byte_end":254711,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ of other higher-level storage collections.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254712,"byte_end":254758,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254759,"byte_end":254762,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These low-level collections are not aware of the elements they manage thus","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254763,"byte_end":254841,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ extra care has to be taken when operating directly on them.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254842,"byte_end":254905,"line_start":25,"line_end":25,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2468},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lazy_hmap","qualname":"::lazy::lazy_hmap","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2554},{"krate":0,"index":2561},{"krate":0,"index":2570},{"krate":0,"index":2574},{"krate":0,"index":2580},{"krate":0,"index":2586},{"krate":0,"index":2596},{"krate":0,"index":2602},{"krate":0,"index":2607},{"krate":0,"index":2612},{"krate":0,"index":2644},{"krate":0,"index":2652},{"krate":0,"index":2657},{"krate":0,"index":2663},{"krate":0,"index":2669},{"krate":0,"index":2679},{"krate":0,"index":2685},{"krate":0,"index":2694},{"krate":0,"index":2714},{"krate":0,"index":2727},{"krate":0,"index":2734}],"decl_id":null,"docs":" A lazy storage mapping that stores entries under their SCALE encoded key hashes.\n","sig":null,"attributes":[{"value":"/ A lazy storage mapping that stores entries under their SCALE encoded key hashes.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":261488,"byte_end":261572,"line_start":15,"line_end":15,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":2551},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262462,"byte_end":262470,"line_start":64,"line_end":64,"column_start":10,"column_end":18},"name":"EntryMap","qualname":"::lazy::lazy_hmap::EntryMap","value":"BTreeMap<K, Box<StorageEntry<V>>>","parent":null,"children":[],"decl_id":null,"docs":" The map for the contract storage entries.","sig":null,"attributes":[{"value":"/ The map for the contract storage entries.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262221,"byte_end":262266,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262267,"byte_end":262270,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262271,"byte_end":262281,"line_start":59,"line_end":59,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262282,"byte_end":262285,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ We keep the whole entry in a `Box<T>` in order to prevent pointer","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262286,"byte_end":262355,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ invalidation upon updating the cache through `&self` methods as in","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262356,"byte_end":262426,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ [`LazyHashMap::get`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262427,"byte_end":262452,"line_start":63,"line_end":63,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":263002,"byte_end":263013,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"LazyHashMap","qualname":"::lazy::lazy_hmap::LazyHashMap","value":"LazyHashMap {  }","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560}],"decl_id":null,"docs":" A lazy storage mapping that stores entries under their SCALE encoded key hashes.","sig":null,"attributes":[{"value":"/ A lazy storage mapping that stores entries under their SCALE encoded key hashes.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262515,"byte_end":262599,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262600,"byte_end":262603,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262604,"byte_end":262614,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262615,"byte_end":262618,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This is mainly used as low-level storage primitives by other high-level","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262619,"byte_end":262694,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ storage primitives in order to manage the contract storage for a whole","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262695,"byte_end":262769,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ mapping of storage cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262770,"byte_end":262799,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262800,"byte_end":262803,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This storage data structure might store its entries anywhere in the contract","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262804,"byte_end":262884,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ storage. It is the users responsibility to keep track of the entries if it","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262885,"byte_end":262963,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ is necessary to do so.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":262964,"byte_end":262990,"line_start":76,"line_end":76,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2574},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":265044,"byte_end":265057,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::lazy::lazy_hmap::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2579}],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":264989,"byte_end":265032,"line_start":118,"line_end":118,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2580},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":265431,"byte_end":265442,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::lazy::lazy_hmap::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2585}],"decl_id":null,"docs":" A vacant entry with previous and next vacant indices.\n","sig":null,"attributes":[{"value":"/ A vacant entry with previous and next vacant indices.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":265362,"byte_end":265419,"line_start":130,"line_end":130,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2590},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266234,"byte_end":266240,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::lazy::lazy_hmap::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" A vacant entry that holds the index to the next and previous vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry that holds the index to the next and previous vacant entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266151,"byte_end":266229,"line_start":153,"line_end":153,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2593},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266317,"byte_end":266325,"line_start":156,"line_end":156,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::lazy::lazy_hmap::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" An occupied entry that holds the value.\n","sig":null,"attributes":[{"value":"/ An occupied entry that holds the value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266269,"byte_end":266312,"line_start":155,"line_end":155,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2586},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266059,"byte_end":266064,"line_start":148,"line_end":148,"column_start":10,"column_end":15},"name":"Entry","qualname":"::lazy::lazy_hmap::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> where K: Ord + Clone + PackedLayout,\n         V: PackedLayout {\n    Vacant(VacantEntry),\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2593}],"decl_id":null,"docs":" An entry within the `LazyHashMap`.\n","sig":null,"attributes":[{"value":"/ An entry within the `LazyHashMap`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266011,"byte_end":266049,"line_start":147,"line_end":147,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271501,"byte_end":271504,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyHashMap<K, V, H>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty lazy hash map.","sig":null,"attributes":[{"value":"/ Creates a new empty lazy hash map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271253,"byte_end":271291,"line_start":344,"line_end":344,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271296,"byte_end":271299,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271304,"byte_end":271314,"line_start":346,"line_end":346,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271319,"byte_end":271322,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ A lazy map created this way cannot be used to load from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271327,"byte_end":271408,"line_start":348,"line_end":348,"column_start":5,"column_end":86}},{"value":"/ All operations that directly or indirectly load from storage will panic.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271413,"byte_end":271489,"line_start":349,"line_end":349,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":272378,"byte_end":272381,"line_start":376,"line_end":376,"column_start":12,"column_end":15},"name":"key","qualname":"<LazyHashMap<K, V, H>>::key","value":"pub fn key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key of the lazy map if any.\n","sig":null,"attributes":[{"value":"/ Returns the offset key of the lazy map if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":272316,"byte_end":272366,"line_start":375,"line_end":375,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273452,"byte_end":273455,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"put","qualname":"<LazyHashMap<K, V, H>>::put","value":"pub fn put(&mut Self, K, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value under the given key.","sig":null,"attributes":[{"value":"/ Puts the new value under the given key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":272924,"byte_end":272967,"line_start":396,"line_end":396,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":272972,"byte_end":272975,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":272980,"byte_end":272990,"line_start":398,"line_end":398,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":272995,"byte_end":272998,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyHashMap::put`]`(None)` in order to remove an element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273003,"byte_end":273072,"line_start":400,"line_end":400,"column_start":5,"column_end":74}},{"value":"/ - Prefer this method over [`LazyHashMap::put_get`] if you are not interested","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273077,"byte_end":273157,"line_start":401,"line_end":401,"column_start":5,"column_end":85}},{"value":"/   in the old value of the same cell index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273162,"byte_end":273208,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273213,"byte_end":273216,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273221,"byte_end":273233,"line_start":404,"line_end":404,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273238,"byte_end":273241,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ - If the lazy hash map is in an invalid state that forbids interaction","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273246,"byte_end":273320,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/   with the underlying contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273325,"byte_end":273368,"line_start":407,"line_end":407,"column_start":5,"column_end":48}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273373,"byte_end":273440,"line_start":408,"line_end":408,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273900,"byte_end":273905,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"entry","qualname":"<LazyHashMap<K, V, H>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273806,"byte_end":273888,"line_start":424,"line_end":424,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":282305,"byte_end":282320,"line_start":629,"line_end":629,"column_start":12,"column_end":27},"name":"clear_packed_at","qualname":"<LazyHashMap<K, V, H>>::clear_packed_at","value":"pub fn clear_packed_at<Q>(&Self, &Q) where K: Borrow<Q>, V: PackedLayout,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying storage of the entry at the given index.","sig":null,"attributes":[{"value":"/ Clears the underlying storage of the entry at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":281820,"byte_end":281886,"line_start":619,"line_end":619,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":281891,"byte_end":281894,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":281899,"byte_end":281911,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":281916,"byte_end":281919,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ For performance reasons this does not synchronize the lazy index map's","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":281924,"byte_end":281998,"line_start":623,"line_end":623,"column_start":5,"column_end":79}},{"value":"/ memory-side cache which invalidates future accesses the cleared entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":282003,"byte_end":282077,"line_start":624,"line_end":624,"column_start":5,"column_end":79}},{"value":"/ Care should be taken when using this API.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":282082,"byte_end":282127,"line_start":625,"line_end":625,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":282132,"byte_end":282135,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The general use of this API is to streamline `Drop` implementations of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":282140,"byte_end":282214,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ high-level abstractions that build upon this low-level data structure.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":282219,"byte_end":282293,"line_start":628,"line_end":628,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283524,"byte_end":283527,"line_start":655,"line_end":655,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyHashMap<K, V, H>>::get","value":"pub fn get<Q>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Ord +\nscale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value associated with the given key if any.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value associated with the given key if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283253,"byte_end":283334,"line_start":649,"line_end":649,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283339,"byte_end":283342,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283347,"byte_end":283359,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283364,"byte_end":283367,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283372,"byte_end":283444,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283449,"byte_end":283512,"line_start":654,"line_end":654,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284217,"byte_end":284224,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyHashMap<K, V, H>>::get_mut","value":"pub fn get_mut<Q>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the value associated with the given key if any.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the value associated with the given key if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":283942,"byte_end":284027,"line_start":666,"line_end":666,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284032,"byte_end":284035,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284040,"byte_end":284052,"line_start":668,"line_end":668,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284057,"byte_end":284060,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284065,"byte_end":284137,"line_start":670,"line_end":670,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284142,"byte_end":284205,"line_start":671,"line_end":671,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284850,"byte_end":284857,"line_start":691,"line_end":691,"column_start":12,"column_end":19},"name":"put_get","qualname":"<LazyHashMap<K, V, H>>::put_get","value":"pub fn put_get<Q>(&mut Self, &Q, Option<V>) -> Option<V> where K: Borrow<Q>,\nQ: Ord + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value under the given key and returns the old value if any.","sig":null,"attributes":[{"value":"/ Puts the new value under the given key and returns the old value if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284425,"byte_end":284501,"line_start":680,"line_end":680,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284506,"byte_end":284509,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284514,"byte_end":284524,"line_start":682,"line_end":682,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284529,"byte_end":284532,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyHashMap::put_get`]`(None)` in order to remove an element","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284537,"byte_end":284609,"line_start":684,"line_end":684,"column_start":5,"column_end":77}},{"value":"/   and retrieve the old element back.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284614,"byte_end":284654,"line_start":685,"line_end":685,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284659,"byte_end":284662,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284667,"byte_end":284679,"line_start":687,"line_end":687,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284684,"byte_end":284687,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ - If the lazy hashmap is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284692,"byte_end":284766,"line_start":689,"line_end":689,"column_start":5,"column_end":79}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":284771,"byte_end":284838,"line_start":690,"line_end":690,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285404,"byte_end":285408,"line_start":707,"line_end":707,"column_start":12,"column_end":16},"name":"swap","qualname":"<LazyHashMap<K, V, H>>::swap","value":"pub fn swap<Q1, Q2>(&mut Self, &Q1, &Q2) where K: Borrow<Q1> + Borrow<Q2>,\nQ1: Ord + PartialEq<Q2> + scale::Encode + ToOwned<Owned = K>, Q2: Ord +\nPartialEq<Q1> + scale::Encode + ToOwned<Owned = K>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the values at entries with associated keys `x` and `y`.","sig":null,"attributes":[{"value":"/ Swaps the values at entries with associated keys `x` and `y`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285067,"byte_end":285132,"line_start":699,"line_end":699,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285137,"byte_end":285140,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ This operation tries to be as efficient as possible and reuse allocations.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285145,"byte_end":285223,"line_start":701,"line_end":701,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285228,"byte_end":285231,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285236,"byte_end":285248,"line_start":703,"line_end":703,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285253,"byte_end":285256,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ - If the lazy hashmap is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285261,"byte_end":285335,"line_start":705,"line_end":705,"column_start":5,"column_end":79}},{"value":"/ - If the decoding of one of the elements failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":285340,"byte_end":285392,"line_start":706,"line_end":706,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":286959,"byte_end":286962,"line_start":745,"line_end":745,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":286903,"byte_end":286947,"line_start":744,"line_end":744,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287265,"byte_end":287275,"line_start":754,"line_end":754,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty, and returns\n a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty, and returns","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287118,"byte_end":287206,"line_start":752,"line_end":752,"column_start":5,"column_end":93}},{"value":"/ a reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287211,"byte_end":287253,"line_start":753,"line_end":753,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287604,"byte_end":287613,"line_start":763,"line_end":763,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287455,"byte_end":287537,"line_start":761,"line_end":761,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287542,"byte_end":287592,"line_start":762,"line_end":762,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287983,"byte_end":287997,"line_start":772,"line_end":772,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287804,"byte_end":287897,"line_start":770,"line_end":770,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":287902,"byte_end":287971,"line_start":771,"line_end":771,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":288452,"byte_end":288470,"line_start":785,"line_end":785,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default\n function, which takes the key as its argument, and returns a mutable reference to\n the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":288233,"byte_end":288318,"line_start":782,"line_end":782,"column_start":5,"column_end":90}},{"value":"/ function, which takes the key as its argument, and returns a mutable reference to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":288323,"byte_end":288408,"line_start":783,"line_end":783,"column_start":5,"column_end":90}},{"value":"/ the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":288413,"byte_end":288440,"line_start":784,"line_end":784,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":288904,"byte_end":288914,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.\n","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":288784,"byte_end":288852,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":288857,"byte_end":288892,"line_start":799,"line_end":799,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289500,"byte_end":289503,"line_start":823,"line_end":823,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value through the `VacantEntry`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289388,"byte_end":289488,"line_start":822,"line_end":822,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289590,"byte_end":289598,"line_start":828,"line_end":828,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.\n","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289548,"byte_end":289578,"line_start":827,"line_end":827,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289751,"byte_end":289757,"line_start":833,"line_end":833,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `VacantEntry`s key, and returns a mutable reference to it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289640,"byte_end":289739,"line_start":832,"line_end":832,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":290609,"byte_end":290612,"line_start":861,"line_end":861,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":290552,"byte_end":290597,"line_start":860,"line_end":860,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":290726,"byte_end":290738,"line_start":866,"line_end":866,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":290657,"byte_end":290714,"line_start":865,"line_end":865,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":291429,"byte_end":291432,"line_start":886,"line_end":886,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":291370,"byte_end":291417,"line_start":885,"line_end":885,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":292225,"byte_end":292232,"line_start":908,"line_end":908,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":292015,"byte_end":292070,"line_start":904,"line_end":904,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":292075,"byte_end":292078,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the destruction of the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":292083,"byte_end":292174,"line_start":906,"line_end":906,"column_start":5,"column_end":96}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":292179,"byte_end":292213,"line_start":907,"line_end":907,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":292918,"byte_end":292924,"line_start":927,"line_end":927,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":292839,"byte_end":292906,"line_start":926,"line_end":926,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":293689,"byte_end":293695,"line_start":945,"line_end":945,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":293624,"byte_end":293677,"line_start":944,"line_end":944,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":293894,"byte_end":293902,"line_start":951,"line_end":951,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":293750,"byte_end":293833,"line_start":949,"line_end":949,"column_start":5,"column_end":88}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":293838,"byte_end":293882,"line_start":950,"line_end":950,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4924},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":313752,"byte_end":313764,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"StorageEntry","qualname":"::lazy::entry::StorageEntry","value":"StorageEntry {  }","parent":null,"children":[{"krate":0,"index":4926},{"krate":0,"index":4927}],"decl_id":null,"docs":" The entry of a single cached value of a lazy storage data structure.\n","sig":null,"attributes":[{"value":"/ The entry of a single cached value of a lazy storage data structure.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":313619,"byte_end":313691,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":314998,"byte_end":315005,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"Mutated","qualname":"::lazy::entry::EntryState::Mutated","value":"EntryState::Mutated","parent":{"krate":0,"index":4948},"children":[],"decl_id":null,"docs":" The entry's value must be synchronized with the contract storage.\n","sig":null,"attributes":[{"value":"/ The entry's value must be synchronized with the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":314924,"byte_end":314993,"line_start":76,"line_end":76,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4951},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315084,"byte_end":315093,"line_start":79,"line_end":79,"column_start":5,"column_end":14},"name":"Preserved","qualname":"::lazy::entry::EntryState::Preserved","value":"EntryState::Preserved","parent":{"krate":0,"index":4948},"children":[],"decl_id":null,"docs":" The entry's value preserved the value from the contract storage.\n","sig":null,"attributes":[{"value":"/ The entry's value preserved the value from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315011,"byte_end":315079,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":4948},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":314907,"byte_end":314917,"line_start":75,"line_end":75,"column_start":10,"column_end":20},"name":"EntryState","qualname":"::lazy::entry::EntryState","value":"pub enum EntryState { Mutated, Preserved, }","parent":null,"children":[{"krate":0,"index":4949},{"krate":0,"index":4951}],"decl_id":null,"docs":" The state of the entry.\n","sig":null,"attributes":[{"value":"/ The state of the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":314808,"byte_end":314835,"line_start":73,"line_end":73,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315181,"byte_end":315191,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_mutated","qualname":"<EntryState>::is_mutated","value":"pub fn is_mutated(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry state is mutated.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry state is mutated.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315120,"byte_end":315169,"line_start":83,"line_end":83,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315398,"byte_end":315410,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"is_preserved","qualname":"<EntryState>::is_preserved","value":"pub fn is_preserved(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the entry state is preserved.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the entry state is preserved.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315335,"byte_end":315386,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317736,"byte_end":317752,"line_start":187,"line_end":187,"column_start":12,"column_end":28},"name":"pull_spread_root","qualname":"<StorageEntry<T>>::pull_spread_root","value":"pub fn pull_spread_root(&Key) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pulls the entity from the underlying associated storage as a `SpreadLayout`\n storage layout representation.","sig":null,"attributes":[{"value":"/ Pulls the entity from the underlying associated storage as a `SpreadLayout`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317418,"byte_end":317497,"line_start":180,"line_end":180,"column_start":5,"column_end":84}},{"value":"/ storage layout representation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317502,"byte_end":317536,"line_start":181,"line_end":181,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317541,"byte_end":317544,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317549,"byte_end":317559,"line_start":183,"line_end":183,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317564,"byte_end":317567,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317572,"byte_end":317645,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyCell`][`crate::lazy::LazyCell`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317650,"byte_end":317724,"line_start":186,"line_end":186,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318182,"byte_end":318198,"line_start":198,"line_end":198,"column_start":12,"column_end":28},"name":"push_spread_root","qualname":"<StorageEntry<T>>::push_spread_root","value":"pub fn push_spread_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the underlying associated data to the contract storage using\n the `SpreadLayout` storage layout.","sig":null,"attributes":[{"value":"/ Pushes the underlying associated data to the contract storage using","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317868,"byte_end":317939,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ the `SpreadLayout` storage layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317944,"byte_end":317982,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317987,"byte_end":317990,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317995,"byte_end":318005,"line_start":194,"line_end":194,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318010,"byte_end":318013,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318018,"byte_end":318091,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyCell`][`crate::lazy::LazyCell`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318096,"byte_end":318170,"line_start":197,"line_end":197,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318711,"byte_end":318728,"line_start":211,"line_end":211,"column_start":12,"column_end":29},"name":"clear_spread_root","qualname":"<StorageEntry<T>>::clear_spread_root","value":"pub fn clear_spread_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying associated storage as `SpreadLayout` storage layout representation.","sig":null,"attributes":[{"value":"/ Clears the underlying associated storage as `SpreadLayout` storage layout representation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318418,"byte_end":318511,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318516,"byte_end":318519,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318524,"byte_end":318534,"line_start":207,"line_end":207,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318539,"byte_end":318542,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318547,"byte_end":318620,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyCell`][`crate::lazy::LazyCell`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318625,"byte_end":318699,"line_start":210,"line_end":210,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319237,"byte_end":319253,"line_start":227,"line_end":227,"column_start":12,"column_end":28},"name":"pull_packed_root","qualname":"<StorageEntry<T>>::pull_packed_root","value":"pub fn pull_packed_root(&Key) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pulls the entity from the underlying associated storage as packed representation.","sig":null,"attributes":[{"value":"/ Pulls the entity from the underlying associated storage as packed representation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318893,"byte_end":318978,"line_start":220,"line_end":220,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318983,"byte_end":318986,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318991,"byte_end":319001,"line_start":222,"line_end":222,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319006,"byte_end":319009,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319014,"byte_end":319087,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyIndexMap`][`crate::lazy::LazyIndexMap`] or","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319092,"byte_end":319176,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ [`LazyArray`][`crate::lazy::LazyArray`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319181,"byte_end":319225,"line_start":226,"line_end":226,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319698,"byte_end":319714,"line_start":238,"line_end":238,"column_start":12,"column_end":28},"name":"push_packed_root","qualname":"<StorageEntry<T>>::push_packed_root","value":"pub fn push_packed_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Pushes the underlying associated storage as packed representation.","sig":null,"attributes":[{"value":"/ Pushes the underlying associated storage as packed representation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319369,"byte_end":319439,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319444,"byte_end":319447,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319452,"byte_end":319462,"line_start":233,"line_end":233,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319467,"byte_end":319470,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319475,"byte_end":319548,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyIndexMap`][`crate::lazy::LazyIndexMap`]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319553,"byte_end":319634,"line_start":236,"line_end":236,"column_start":5,"column_end":86}},{"value":"/ or [`LazyArray`][`crate::lazy::LazyArray`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319639,"byte_end":319686,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320263,"byte_end":320280,"line_start":252,"line_end":252,"column_start":12,"column_end":29},"name":"clear_packed_root","qualname":"<StorageEntry<T>>::clear_packed_root","value":"pub fn clear_packed_root(&Self, &Key)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying associated storage as packed representation.","sig":null,"attributes":[{"value":"/ Clears the underlying associated storage as packed representation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":319934,"byte_end":320004,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320009,"byte_end":320012,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320017,"byte_end":320027,"line_start":247,"line_end":247,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320032,"byte_end":320035,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Mainly used by lazy storage abstractions that only allow operating on","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320040,"byte_end":320113,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ packed storage entities such as [`LazyIndexMap`][`crate::lazy::LazyIndexMap`]","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320118,"byte_end":320199,"line_start":250,"line_end":250,"column_start":5,"column_end":86}},{"value":"/ or [`LazyArray`][`crate::lazy::LazyArray`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320204,"byte_end":320251,"line_start":251,"line_end":251,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320470,"byte_end":320473,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"new","qualname":"<StorageEntry<T>>::new","value":"pub fn new(Option<T>, EntryState) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new entry with the value and state.\n","sig":null,"attributes":[{"value":"/ Creates a new entry with the value and state.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320409,"byte_end":320458,"line_start":258,"line_end":258,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320696,"byte_end":320709,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"replace_state","qualname":"<StorageEntry<T>>::replace_state","value":"pub fn replace_state(&Self, EntryState) -> EntryState","parent":null,"children":[],"decl_id":null,"docs":" Replaces the current entry state with the new state and returns it.\n","sig":null,"attributes":[{"value":"/ Replaces the current entry state with the new state and returns it.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320613,"byte_end":320684,"line_start":266,"line_end":266,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321067,"byte_end":321072,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"value","qualname":"<StorageEntry<T>>::value","value":"pub fn value(&Self) -> &Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value of the entry.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value of the entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320998,"byte_end":321055,"line_start":274,"line_end":274,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321373,"byte_end":321382,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<StorageEntry<T>>::value_mut","value":"pub fn value_mut(&mut Self) -> &mut Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the entry value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the entry value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321127,"byte_end":321181,"line_start":279,"line_end":279,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321186,"byte_end":321189,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321194,"byte_end":321204,"line_start":281,"line_end":281,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321209,"byte_end":321212,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This changes the `mutate` state of the entry if the entry was occupied","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321217,"byte_end":321291,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ since the caller could potentially change the returned value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321296,"byte_end":321361,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321592,"byte_end":321602,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"into_value","qualname":"<StorageEntry<T>>::into_value","value":"pub fn into_value(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into its value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321542,"byte_end":321580,"line_start":292,"line_end":292,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321898,"byte_end":321901,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"put","qualname":"<StorageEntry<T>>::put","value":"pub fn put(&mut Self, Option<T>) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value into the entry and returns the old value.","sig":null,"attributes":[{"value":"/ Puts the new value into the entry and returns the old value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321654,"byte_end":321718,"line_start":297,"line_end":297,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321723,"byte_end":321726,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321731,"byte_end":321741,"line_start":299,"line_end":299,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321746,"byte_end":321749,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This changes the `mutate` state of the entry to `true` as long as at","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321754,"byte_end":321826,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ least one of `old_value` and `new_value` is `Some`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":321831,"byte_end":321886,"line_start":302,"line_end":302,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2924},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323777,"byte_end":323786,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"LazyArray","qualname":"::lazy::lazy_array::LazyArray","value":"LazyArray {  }","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928}],"decl_id":null,"docs":" A lazy storage array that spans over N storage cells.","sig":null,"attributes":[{"value":"/ A lazy storage array that spans over N storage cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323195,"byte_end":323252,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323253,"byte_end":323256,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Storage data structure to emulate storage arrays: `[T; N]`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323257,"byte_end":323320,"line_start":41,"line_end":41,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323321,"byte_end":323324,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323325,"byte_end":323335,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323336,"byte_end":323339,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Computes operations on the underlying N storage cells in a lazy fashion.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323340,"byte_end":323416,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ Due to the size constraints the `LazyArray` is generally more efficient","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323417,"byte_end":323492,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ than the [`LazyMap`](`super::LazyIndexMap`) for most use cases with limited elements.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323493,"byte_end":323582,"line_start":47,"line_end":47,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323583,"byte_end":323586,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This is mainly used as low-level storage primitives by other high-level","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323587,"byte_end":323662,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ storage primitives in order to manage the contract storage for a whole","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323663,"byte_end":323737,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ chunk of storage cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":323738,"byte_end":323765,"line_start":51,"line_end":51,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330566,"byte_end":330581,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"clear_packed_at","qualname":"<LazyArray<T, N>>::clear_packed_at","value":"pub fn clear_packed_at(&Self, Index)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying storage of the entry at the given index.","sig":null,"attributes":[{"value":"/ Clears the underlying storage of the entry at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330085,"byte_end":330151,"line_start":280,"line_end":280,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330156,"byte_end":330159,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330164,"byte_end":330176,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330181,"byte_end":330184,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ For performance reasons this does not synchronize the lazy array's","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330189,"byte_end":330259,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ memory-side cache which invalidates future accesses the cleared entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330264,"byte_end":330338,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ Care should be taken when using this API.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330343,"byte_end":330388,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330393,"byte_end":330396,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The general use of this API is to streamline `Drop` implementations of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330401,"byte_end":330475,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ high-level abstractions that build upon this low-level data structure.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330480,"byte_end":330554,"line_start":289,"line_end":289,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331801,"byte_end":331804,"line_start":319,"line_end":319,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyArray<T, N>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty lazy array.","sig":null,"attributes":[{"value":"/ Creates a new empty lazy array.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331554,"byte_end":331589,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331594,"byte_end":331597,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331602,"byte_end":331612,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331617,"byte_end":331620,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ A lazy array created this way cannot be used to load from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331625,"byte_end":331708,"line_start":317,"line_end":317,"column_start":5,"column_end":88}},{"value":"/ All operations that directly or indirectly load from storage will panic.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331713,"byte_end":331789,"line_start":318,"line_end":318,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":332524,"byte_end":332532,"line_start":343,"line_end":343,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LazyArray<T, N>>::capacity","value":"pub fn capacity(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the constant capacity of the lazy array.\n","sig":null,"attributes":[{"value":"/ Returns the constant capacity of the lazy array.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":332446,"byte_end":332498,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":332503,"byte_end":332512,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":332657,"byte_end":332660,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"key","qualname":"<LazyArray<T, N>>::key","value":"pub fn key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key of the lazy array if any.\n","sig":null,"attributes":[{"value":"/ Returns the offset key of the lazy array if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":332593,"byte_end":332645,"line_start":347,"line_end":347,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333190,"byte_end":333193,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"put","qualname":"<LazyArray<T, N>>::put","value":"pub fn put(&mut Self, Index, Option<T>)","parent":null,"children":[],"decl_id":null,"docs":" Puts a new value into the given indexed slot.","sig":null,"attributes":[{"value":"/ Puts a new value into the given indexed slot.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333033,"byte_end":333082,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333087,"byte_end":333090,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333095,"byte_end":333105,"line_start":364,"line_end":364,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333110,"byte_end":333113,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Use [`LazyArray::put_get`]`(None)` to remove an element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333118,"byte_end":333178,"line_start":366,"line_end":366,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":334345,"byte_end":334351,"line_start":403,"line_end":403,"column_start":12,"column_end":18},"name":"key_at","qualname":"<LazyArray<T, N>>::key_at","value":"pub fn key_at(&Self, Index) -> Option<Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key for the given index if not out of bounds.\n","sig":null,"attributes":[{"value":"/ Returns the offset key for the given index if not out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":334265,"byte_end":334333,"line_start":402,"line_end":402,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336457,"byte_end":336460,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyArray<T, N>>::get","value":"pub fn get(&Self, Index) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the element at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336201,"byte_end":336273,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336278,"byte_end":336281,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336286,"byte_end":336296,"line_start":457,"line_end":457,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336301,"byte_end":336304,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This operation eventually loads from contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336309,"byte_end":336367,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336372,"byte_end":336375,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336380,"byte_end":336392,"line_start":461,"line_end":461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336397,"byte_end":336400,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ If the given index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336405,"byte_end":336445,"line_start":463,"line_end":463,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336865,"byte_end":336872,"line_start":479,"line_end":479,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyArray<T, N>>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the element at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336605,"byte_end":336681,"line_start":470,"line_end":470,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336686,"byte_end":336689,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336694,"byte_end":336704,"line_start":472,"line_end":472,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336709,"byte_end":336712,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This operation eventually loads from contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336717,"byte_end":336775,"line_start":474,"line_end":474,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336780,"byte_end":336783,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336788,"byte_end":336800,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336805,"byte_end":336808,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ If the given index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336813,"byte_end":336853,"line_start":478,"line_end":478,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337396,"byte_end":337403,"line_start":494,"line_end":494,"column_start":12,"column_end":19},"name":"put_get","qualname":"<LazyArray<T, N>>::put_get","value":"pub fn put_get(&mut Self, Index, Option<T>) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value into the indexed slot and returns the old value if any.","sig":null,"attributes":[{"value":"/ Puts the new value into the indexed slot and returns the old value if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":336985,"byte_end":337063,"line_start":483,"line_end":483,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337068,"byte_end":337071,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337076,"byte_end":337086,"line_start":485,"line_end":485,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337091,"byte_end":337094,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ - This operation eventually loads from contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337099,"byte_end":337159,"line_start":487,"line_end":487,"column_start":5,"column_end":65}},{"value":"/ - Prefer [`LazyArray::put`] if you are not interested in the old value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337164,"byte_end":337239,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/ - Use [`LazyArray::put_get`]`(None)` to remove an element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337244,"byte_end":337306,"line_start":489,"line_end":489,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337311,"byte_end":337314,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337319,"byte_end":337331,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337336,"byte_end":337339,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ If the given index is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337344,"byte_end":337384,"line_start":493,"line_end":493,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337762,"byte_end":337766,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"swap","qualname":"<LazyArray<T, N>>::swap","value":"pub fn swap(&mut Self, Index, Index)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the values at indices x and y.","sig":null,"attributes":[{"value":"/ Swaps the values at indices x and y.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337529,"byte_end":337569,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337574,"byte_end":337577,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337582,"byte_end":337592,"line_start":500,"line_end":500,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337597,"byte_end":337600,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This operation eventually loads from contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337605,"byte_end":337663,"line_start":502,"line_end":502,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337668,"byte_end":337671,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337676,"byte_end":337688,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337693,"byte_end":337696,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ If any of the given indices is out of bounds.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":337701,"byte_end":337750,"line_start":506,"line_end":506,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3090},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352848,"byte_end":352856,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"LazyCell","qualname":"::lazy::lazy_cell::LazyCell","value":"LazyCell {  }","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093}],"decl_id":null,"docs":" A lazy storage entity.","sig":null,"attributes":[{"value":"/ A lazy storage entity.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352649,"byte_end":352675,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352676,"byte_end":352679,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This loads its value from storage upon first use.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352680,"byte_end":352733,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352734,"byte_end":352737,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352738,"byte_end":352748,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352749,"byte_end":352752,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Use this if the storage field does not need to be loaded in some or most cases.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":352753,"byte_end":352836,"line_start":40,"line_end":40,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359172,"byte_end":359175,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyCell<T>>::new","value":"pub fn new(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an already populated lazy storage cell.","sig":null,"attributes":[{"value":"/ Creates an already populated lazy storage cell.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":358960,"byte_end":359011,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359016,"byte_end":359019,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359024,"byte_end":359034,"line_start":232,"line_end":232,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359039,"byte_end":359042,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Since this already has a value it will never actually load from","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359047,"byte_end":359114,"line_start":234,"line_end":234,"column_start":5,"column_end":72}},{"value":"/ the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359119,"byte_end":359144,"line_start":235,"line_end":235,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359149,"byte_end":359160,"line_start":236,"line_end":236,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359553,"byte_end":359557,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"lazy","qualname":"<LazyCell<T>>::lazy","value":"pub fn lazy(Key) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a lazy storage cell for the given key.","sig":null,"attributes":[{"value":"/ Creates a lazy storage cell for the given key.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359351,"byte_end":359401,"line_start":244,"line_end":244,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359406,"byte_end":359409,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359414,"byte_end":359424,"line_start":246,"line_end":246,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359429,"byte_end":359432,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This will actually lazily load from the associated storage cell","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359437,"byte_end":359504,"line_start":248,"line_end":248,"column_start":5,"column_end":72}},{"value":"/ upon access.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359509,"byte_end":359525,"line_start":249,"line_end":249,"column_start":5,"column_end":21}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":359530,"byte_end":359541,"line_start":250,"line_end":250,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362720,"byte_end":362723,"line_start":336,"line_end":336,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the value.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362458,"byte_end":362502,"line_start":326,"line_end":326,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362507,"byte_end":362510,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362515,"byte_end":362525,"line_start":328,"line_end":328,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362530,"byte_end":362533,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This eventually lazily loads the value from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362538,"byte_end":362607,"line_start":330,"line_end":330,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362612,"byte_end":362615,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362620,"byte_end":362632,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362637,"byte_end":362640,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ If decoding the loaded value to `T` failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362645,"byte_end":362692,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362697,"byte_end":362708,"line_start":335,"line_end":335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363065,"byte_end":363072,"line_start":350,"line_end":350,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362799,"byte_end":362847,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362852,"byte_end":362855,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362860,"byte_end":362870,"line_start":342,"line_end":342,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362875,"byte_end":362878,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This eventually lazily loads the value from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362883,"byte_end":362952,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362957,"byte_end":362960,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362965,"byte_end":362977,"line_start":346,"line_end":346,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362982,"byte_end":362985,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ If decoding the loaded value to `T` failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":362990,"byte_end":363037,"line_start":348,"line_end":348,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363042,"byte_end":363053,"line_start":349,"line_end":349,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363575,"byte_end":363578,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"set","qualname":"<LazyCell<T>>::set","value":"pub fn set(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value in this cell to `value`, without executing any reads.","sig":null,"attributes":[{"value":"/ Sets the value in this cell to `value`, without executing any reads.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363164,"byte_end":363236,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363241,"byte_end":363244,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363249,"byte_end":363259,"line_start":356,"line_end":356,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363264,"byte_end":363267,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ No reads from contract storage will be executed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363272,"byte_end":363324,"line_start":358,"line_end":358,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363329,"byte_end":363332,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This method should be preferred over dereferencing or `get_mut`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363337,"byte_end":363404,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/ in case the returned value is of no interest to the caller.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363409,"byte_end":363472,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363477,"byte_end":363480,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363485,"byte_end":363497,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363502,"byte_end":363505,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ If accessing the inner value fails.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363510,"byte_end":363549,"line_start":365,"line_end":365,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":363554,"byte_end":363563,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3192},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":387016,"byte_end":387028,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"LazyIndexMap","qualname":"::lazy::lazy_imap::LazyIndexMap","value":"LazyIndexMap {  }","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195}],"decl_id":null,"docs":" A lazy storage chunk that spans over a whole chunk of storage cells.","sig":null,"attributes":[{"value":"/ A lazy storage chunk that spans over a whole chunk of storage cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386654,"byte_end":386726,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386727,"byte_end":386730,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386731,"byte_end":386741,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386742,"byte_end":386745,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This is mainly used as low-level storage primitives by other high-level","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386746,"byte_end":386821,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ storage primitives in order to manage the contract storage for a whole","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386822,"byte_end":386896,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ chunk of storage cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386897,"byte_end":386924,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386925,"byte_end":386928,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ A chunk of storage cells is a contiguous range of `2^32` storage cells.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":386929,"byte_end":387004,"line_start":50,"line_end":50,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389749,"byte_end":389752,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<LazyIndexMap<V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty lazy map.","sig":null,"attributes":[{"value":"/ Creates a new empty lazy map.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389506,"byte_end":389539,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389544,"byte_end":389547,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389552,"byte_end":389562,"line_start":141,"line_end":141,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389567,"byte_end":389570,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ A lazy map created this way cannot be used to load from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389575,"byte_end":389656,"line_start":143,"line_end":143,"column_start":5,"column_end":86}},{"value":"/ All operations that directly or indirectly load from storage will panic.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389661,"byte_end":389737,"line_start":144,"line_end":144,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":390487,"byte_end":390490,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"key","qualname":"<LazyIndexMap<V>>::key","value":"pub fn key(&Self) -> Option<&Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key of the lazy map if any.\n","sig":null,"attributes":[{"value":"/ Returns the offset key of the lazy map if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":390425,"byte_end":390475,"line_start":167,"line_end":167,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391348,"byte_end":391351,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"put","qualname":"<LazyIndexMap<V>>::put","value":"pub fn put(&mut Self, Index, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value at the given index.","sig":null,"attributes":[{"value":"/ Puts the new value at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":390869,"byte_end":390911,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":390916,"byte_end":390919,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":390924,"byte_end":390934,"line_start":184,"line_end":184,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":390939,"byte_end":390942,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyIndexMap::put`]`(None)` in order to remove an element.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":390947,"byte_end":391017,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ - Prefer this method over [`LazyIndexMap::put_get`] if you are not interested","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391022,"byte_end":391103,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/   in the old value of the same cell index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391108,"byte_end":391154,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391159,"byte_end":391162,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391167,"byte_end":391179,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391184,"byte_end":391187,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391192,"byte_end":391264,"line_start":192,"line_end":192,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":391269,"byte_end":391336,"line_start":193,"line_end":193,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":394070,"byte_end":394085,"line_start":280,"line_end":280,"column_start":12,"column_end":27},"name":"clear_packed_at","qualname":"<LazyIndexMap<V>>::clear_packed_at","value":"pub fn clear_packed_at(&Self, Index)","parent":null,"children":[],"decl_id":null,"docs":" Clears the underlying storage of the entry at the given index.","sig":null,"attributes":[{"value":"/ Clears the underlying storage of the entry at the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393585,"byte_end":393651,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393656,"byte_end":393659,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393664,"byte_end":393676,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393681,"byte_end":393684,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ For performance reasons this does not synchronize the lazy index map's","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393689,"byte_end":393763,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ memory-side cache which invalidates future accesses the cleared entry.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393768,"byte_end":393842,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ Care should be taken when using this API.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393847,"byte_end":393892,"line_start":276,"line_end":276,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393897,"byte_end":393900,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The general use of this API is to streamline `Drop` implementations of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393905,"byte_end":393979,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ high-level abstractions that build upon this low-level data structure.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393984,"byte_end":394058,"line_start":279,"line_end":279,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":395017,"byte_end":395023,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"key_at","qualname":"<LazyIndexMap<V>>::key_at","value":"pub fn key_at(&Self, Index) -> Option<Key>","parent":null,"children":[],"decl_id":null,"docs":" Returns an offset key for the given index.\n","sig":null,"attributes":[{"value":"/ Returns an offset key for the given index.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":394959,"byte_end":395005,"line_start":300,"line_end":300,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398494,"byte_end":398497,"line_start":382,"line_end":382,"column_start":12,"column_end":15},"name":"get","qualname":"<LazyIndexMap<V>>::get","value":"pub fn get(&Self, Index) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the element at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398232,"byte_end":398304,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398309,"byte_end":398312,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398317,"byte_end":398329,"line_start":378,"line_end":378,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398334,"byte_end":398337,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398342,"byte_end":398414,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398419,"byte_end":398482,"line_start":381,"line_end":381,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399089,"byte_end":399096,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LazyIndexMap<V>>::get_mut","value":"pub fn get_mut(&mut Self, Index) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the element at the given index if any.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the element at the given index if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398823,"byte_end":398899,"line_start":389,"line_end":389,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398904,"byte_end":398907,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398912,"byte_end":398924,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398929,"byte_end":398932,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":398937,"byte_end":399009,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399014,"byte_end":399077,"line_start":394,"line_end":394,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399631,"byte_end":399638,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"put_get","qualname":"<LazyIndexMap<V>>::put_get","value":"pub fn put_get(&mut Self, Index, Option<V>) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Puts the new value at the given index and returns the old value if any.","sig":null,"attributes":[{"value":"/ Puts the new value at the given index and returns the old value if any.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399208,"byte_end":399283,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399288,"byte_end":399291,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399296,"byte_end":399306,"line_start":401,"line_end":401,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399311,"byte_end":399314,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ - Use [`LazyIndexMap::put_get`]`(None)` in order to remove an element","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399319,"byte_end":399392,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/   and retrieve the old element back.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399397,"byte_end":399437,"line_start":404,"line_end":404,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399442,"byte_end":399445,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399450,"byte_end":399462,"line_start":406,"line_end":406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399467,"byte_end":399470,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399475,"byte_end":399547,"line_start":408,"line_end":408,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of the old element at the given index failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399552,"byte_end":399619,"line_start":409,"line_end":409,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":400077,"byte_end":400081,"line_start":422,"line_end":422,"column_start":12,"column_end":16},"name":"swap","qualname":"<LazyIndexMap<V>>::swap","value":"pub fn swap(&mut Self, Index, Index)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the values at indices `x` and `y`.","sig":null,"attributes":[{"value":"/ Swaps the values at indices `x` and `y`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399763,"byte_end":399807,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399812,"byte_end":399815,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This operation tries to be as efficient as possible and reuse allocations.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399820,"byte_end":399898,"line_start":416,"line_end":416,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399903,"byte_end":399906,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399911,"byte_end":399923,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399928,"byte_end":399931,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ - If the lazy chunk is in an invalid state that forbids interaction.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":399936,"byte_end":400008,"line_start":420,"line_end":420,"column_start":5,"column_end":77}},{"value":"/ - If the decoding of one of the elements failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":400013,"byte_end":400065,"line_start":421,"line_end":421,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4986},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255569,"byte_end":255573,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4988}],"decl_id":null,"docs":" A lazy storage entity.","sig":null,"attributes":[{"value":"/ A lazy storage entity.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255353,"byte_end":255379,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255380,"byte_end":255383,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This loads its value from storage upon first use.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255384,"byte_end":255437,"line_start":58,"line_end":58,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255438,"byte_end":255441,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255442,"byte_end":255452,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255453,"byte_end":255456,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Use this if the storage field does not need to be loaded in some or most cases.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255457,"byte_end":255540,"line_start":62,"line_end":62,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256575,"byte_end":256578,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Lazy<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an eagerly populated lazy storage value.\n","sig":null,"attributes":[{"value":"/ Creates an eagerly populated lazy storage value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256495,"byte_end":256547,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256552,"byte_end":256563,"line_start":112,"line_end":112,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257208,"byte_end":257211,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"get","qualname":"<Lazy<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the lazily loaded value.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the lazily loaded value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256923,"byte_end":256981,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256986,"byte_end":256989,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256994,"byte_end":257004,"line_start":134,"line_end":134,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257009,"byte_end":257012,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the contract storage if this did not happen before.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257017,"byte_end":257098,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257103,"byte_end":257106,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257111,"byte_end":257123,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257128,"byte_end":257131,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257136,"byte_end":257180,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257185,"byte_end":257196,"line_start":141,"line_end":141,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257598,"byte_end":257605,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lazy<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the lazily loaded value.","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the lazily loaded value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257309,"byte_end":257371,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257376,"byte_end":257379,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257384,"byte_end":257394,"line_start":148,"line_end":148,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257399,"byte_end":257402,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This loads the value from the contract storage if this did not happen before.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257407,"byte_end":257488,"line_start":150,"line_end":150,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257493,"byte_end":257496,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257501,"byte_end":257513,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257518,"byte_end":257521,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If loading from contract storage failed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257526,"byte_end":257570,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"must_use","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257575,"byte_end":257586,"line_start":155,"line_end":155,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258113,"byte_end":258116,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"set","qualname":"<Lazy<T>>::set","value":"pub fn set(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value to `value`, without executing any reads.","sig":null,"attributes":[{"value":"/ Sets the value to `value`, without executing any reads.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257715,"byte_end":257774,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257779,"byte_end":257782,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257787,"byte_end":257797,"line_start":162,"line_end":162,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257802,"byte_end":257805,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ No reads from contract storage will be executed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257810,"byte_end":257862,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257867,"byte_end":257870,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method should be preferred over dereferencing or `get_mut`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257875,"byte_end":257942,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/ in case the returned value is of no interest to the caller.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":257947,"byte_end":258010,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258015,"byte_end":258018,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258023,"byte_end":258035,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258040,"byte_end":258043,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If accessing the inner value fails.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258048,"byte_end":258087,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258092,"byte_end":258101,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4992},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415729,"byte_end":415735,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Memory","qualname":"::memory::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":4994}],"decl_id":null,"docs":" An instance that is solely stored within the contract's memory.","sig":null,"attributes":[{"value":"/ An instance that is solely stored within the contract's memory.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415202,"byte_end":415269,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415270,"byte_end":415273,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This will never be stored to or loaded from contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415274,"byte_end":415339,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415340,"byte_end":415343,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415344,"byte_end":415354,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415355,"byte_end":415358,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Use instances of this type in order to have some shared state between","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415359,"byte_end":415432,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ contract messages and functions.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415433,"byte_end":415469,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ Its usage is comparable to the Solidity's `memory` instances.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415470,"byte_end":415535,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/ Pulling an instance of this type from the contract storage will always","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415536,"byte_end":415610,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ yield a default constructed value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":415611,"byte_end":415649,"line_start":46,"line_end":46,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416581,"byte_end":416584,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Memory<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new memory instance.\n","sig":null,"attributes":[{"value":"/ Creates a new memory instance.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416535,"byte_end":416569,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416699,"byte_end":416702,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"get","qualname":"<Memory<T>>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner `T`.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner `T`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416639,"byte_end":416687,"line_start":91,"line_end":91,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416823,"byte_end":416830,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Memory<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the inner `T`.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the inner `T`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416759,"byte_end":416811,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5024},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424870,"byte_end":424874,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"Pack","qualname":"::pack::Pack","value":"Pack {  }","parent":null,"children":[{"krate":0,"index":5026},{"krate":0,"index":5027}],"decl_id":null,"docs":" Packs the inner `T` so that it only occupies a single contract storage cell.","sig":null,"attributes":[{"value":"/ Packs the inner `T` so that it only occupies a single contract storage cell.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423214,"byte_end":423294,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423295,"byte_end":423298,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423299,"byte_end":423309,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423310,"byte_end":423313,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is an important modular building stone in order to manage contract","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423314,"byte_end":423389,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ storage occupation. By default, types try to distribute themselves onto","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423390,"byte_end":423465,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ their respective contract storage area. However, upon packing them into","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423466,"byte_end":423541,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ `Pack<T>` they will be compressed to only ever make use of a single","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423542,"byte_end":423613,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ contract storage cell. Sometimes this can be advantageous for performance","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423614,"byte_end":423691,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ reasons.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423692,"byte_end":423704,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423705,"byte_end":423708,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423709,"byte_end":423720,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423721,"byte_end":423724,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - A `Pack<i32>` instance is equivalent to `i32` in its storage occupation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423725,"byte_end":423803,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ - A `Pack<(i32, i32)>` instance will occupy a single cell compared to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423804,"byte_end":423877,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/   `(i32, i32)` which occupies a cell per `i32`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423878,"byte_end":423929,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"/ - A `Lazy<Pack<[u8; 8]>>` lazily loads a `Pack<[u8; 8]>` which occupies","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":423930,"byte_end":424005,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/   a single cell whereas a `[u8; 8]` array would occupy 8 cells in total,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424006,"byte_end":424082,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/   one for each `u8`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424083,"byte_end":424107,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ - Rust collections will never use more than a single cell. So","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424108,"byte_end":424173,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/   `Pack<LinkedList<T>>` and `LinkedList<T>` will occupy the same amount of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424174,"byte_end":424252,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/   cells, namely 1.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424253,"byte_end":424275,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ - Packs can be packed. So for example a","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424276,"byte_end":424319,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/   `Pack<(Pack<(i32, i32)>, Pack<[u8; 8]>)` uses just one cell instead of","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424320,"byte_end":424396,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/   two cells which is the case for `(Pack<(i32, i32)>, Pack<[u8; 8]>)`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424397,"byte_end":424471,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ - Not all `storage` types can be packed. Only those that are implementing","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424472,"byte_end":424549,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/   the `PackedLayout` trait. For example `storage::Vec<T>` does not implement","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424550,"byte_end":424630,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/   this trait and thus cannot be packed.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424631,"byte_end":424674,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424675,"byte_end":424678,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a general advice pack values together that are frequently used together.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424679,"byte_end":424758,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ Also pack many very small elements (e.g. `u8`, `bool`, `u16`) together.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":424759,"byte_end":424834,"line_start":57,"line_end":57,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426089,"byte_end":426092,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Pack<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new packed value.\n","sig":null,"attributes":[{"value":"/ Creates a new packed value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426046,"byte_end":426077,"line_start":112,"line_end":112,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426261,"byte_end":426269,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"as_inner","qualname":"<Pack<T>>::as_inner","value":"pub fn as_inner(&Pack<T>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the packed value.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the packed value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426198,"byte_end":426249,"line_start":120,"line_end":120,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426392,"byte_end":426404,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"as_inner_mut","qualname":"<Pack<T>>::as_inner_mut","value":"pub fn as_inner_mut(&mut Pack<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an exclusive reference to the packed value.\n","sig":null,"attributes":[{"value":"/ Returns an exclusive reference to the packed value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426325,"byte_end":426380,"line_start":125,"line_end":125,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3595},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3826},{"krate":0,"index":3842},{"krate":0,"index":3870},{"krate":0,"index":3881},{"krate":0,"index":3892},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":4039},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4063},{"krate":0,"index":4066},{"krate":0,"index":4069},{"krate":0,"index":4072},{"krate":0,"index":4074},{"krate":0,"index":4076},{"krate":0,"index":4078},{"krate":0,"index":4080},{"krate":0,"index":4082}],"decl_id":null,"docs":" Traits and interfaces to operate with storage entities.","sig":null,"attributes":[{"value":"/ Traits and interfaces to operate with storage entities.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":437868,"byte_end":437927,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":437928,"byte_end":437931,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Generally a type is said to be a storage entity if it implements the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":437932,"byte_end":438004,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ `SpreadLayout` trait. This defines certain constants and routines in order","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438005,"byte_end":438083,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ to tell a smart contract how to load and store instances of this type","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438084,"byte_end":438157,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ from and to the contract's storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438158,"byte_end":438197,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438198,"byte_end":438201,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `PackedLayout` trait can then be implemented on top of the `SpreadLayout`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438202,"byte_end":438283,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ for types that further allow to be stored in the contract storage in a more","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438284,"byte_end":438363,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ compressed format to a single storage cell.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":438364,"byte_end":438411,"line_start":24,"line_end":24,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":3820},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446539,"byte_end":446558,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"forward_pull_packed","qualname":"::traits::impls::forward_pull_packed","value":"pub fn forward_pull_packed<T>(&mut KeyPtr) -> T where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pulls an instance of type `T` in packed fashion from the contract storage.","sig":null,"attributes":[{"value":"/ Pulls an instance of type `T` in packed fashion from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446150,"byte_end":446228,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446229,"byte_end":446232,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Loads the instance from the storage location identified by `ptr`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446233,"byte_end":446302,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ The storage entity is expected to be decodable in its packed form.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446303,"byte_end":446373,"line_start":110,"line_end":110,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446374,"byte_end":446377,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446378,"byte_end":446388,"line_start":112,"line_end":112,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446389,"byte_end":446392,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Use this utility function to use a packed pull operation for the type","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446393,"byte_end":446466,"line_start":114,"line_end":114,"column_start":1,"column_end":74}},{"value":"/ instead of a spread storage layout pull operation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446467,"byte_end":446521,"line_start":115,"line_end":115,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446522,"byte_end":446531,"line_start":116,"line_end":116,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3822},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447051,"byte_end":447070,"line_start":134,"line_end":134,"column_start":8,"column_end":27},"name":"forward_push_packed","qualname":"::traits::impls::forward_push_packed","value":"pub fn forward_push_packed<T>(&T, &mut KeyPtr) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pushes an instance of type `T` in packed fashion to the contract storage.","sig":null,"attributes":[{"value":"/ Pushes an instance of type `T` in packed fashion to the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446664,"byte_end":446741,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446742,"byte_end":446745,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Stores the instance to the storage location identified by `ptr`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446746,"byte_end":446814,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ The storage entity is expected to be encodable in its packed form.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446815,"byte_end":446885,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446886,"byte_end":446889,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446890,"byte_end":446900,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446901,"byte_end":446904,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Use this utility function to use a packed push operation for the type","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446905,"byte_end":446978,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"/ instead of a spread storage layout push operation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":446979,"byte_end":447033,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447034,"byte_end":447043,"line_start":133,"line_end":133,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3824},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447590,"byte_end":447610,"line_start":151,"line_end":151,"column_start":8,"column_end":28},"name":"forward_clear_packed","qualname":"::traits::impls::forward_clear_packed","value":"pub fn forward_clear_packed<T>(&T, &mut KeyPtr) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Clears an instance of type `T` in packed fashion from the contract storage.","sig":null,"attributes":[{"value":"/ Clears an instance of type `T` in packed fashion from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447191,"byte_end":447270,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447271,"byte_end":447274,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Clears the instance from the storage location identified by `ptr`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447275,"byte_end":447345,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ The cleared storage entity is expected to be encoded in its packed form.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447346,"byte_end":447422,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447423,"byte_end":447426,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447427,"byte_end":447437,"line_start":146,"line_end":146,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447438,"byte_end":447441,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Use this utility function to use a packed clear operation for the type","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447442,"byte_end":447516,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ instead of a spread storage layout clear operation.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447517,"byte_end":447572,"line_start":149,"line_end":149,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/mod.rs","byte_start":447573,"byte_end":447582,"line_start":150,"line_end":150,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":3836},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/keyptr.rs","byte_start":469645,"byte_end":469654,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"ExtKeyPtr","qualname":"::traits::keyptr::ExtKeyPtr","value":"ExtKeyPtr","parent":null,"children":[{"krate":0,"index":3837}],"decl_id":null,"docs":" Extension trait to make `KeyPtr` simpler to use for `T: SpreadLayout` types.\n","sig":null,"attributes":[{"value":"/ Extension trait to make `KeyPtr` simpler to use for `T: SpreadLayout` types.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/keyptr.rs","byte_start":469554,"byte_end":469634,"line_start":19,"line_end":19,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/keyptr.rs","byte_start":469805,"byte_end":469813,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"next_for","qualname":"::traits::keyptr::ExtKeyPtr::next_for","value":"pub fn next_for<T>(&mut Self) -> &Key where T: SpreadLayout","parent":{"krate":0,"index":3836},"children":[],"decl_id":null,"docs":" Advances the key pointer by the same amount of the footprint of the\n generic type parameter of `T` and returns the old value.\n","sig":null,"attributes":[{"value":"/ Advances the key pointer by the same amount of the footprint of the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/keyptr.rs","byte_start":469661,"byte_end":469732,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ generic type parameter of `T` and returns the old value.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/keyptr.rs","byte_start":469737,"byte_end":469797,"line_start":22,"line_end":22,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":3877},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":475863,"byte_end":475875,"line_start":19,"line_end":19,"column_start":11,"column_end":23},"name":"PackedLayout","qualname":"::traits::packed::PackedLayout","value":"PackedLayout: SpreadLayout + scale::Encode + scale::Decode","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880}],"decl_id":null,"docs":" Types that can be stored to and loaded from a single contract storage cell.\n","sig":null,"attributes":[{"value":"/ Types that can be stored to and loaded from a single contract storage cell.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":475773,"byte_end":475852,"line_start":18,"line_end":18,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476265,"byte_end":476276,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"pull_packed","qualname":"::traits::packed::PackedLayout::pull_packed","value":"pub fn pull_packed(&mut Self, &Key)","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" Indicates to `self` that is has just been pulled from the storage.","sig":null,"attributes":[{"value":"/ Indicates to `self` that is has just been pulled from the storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":475928,"byte_end":475998,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476003,"byte_end":476006,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476011,"byte_end":476021,"line_start":22,"line_end":22,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476026,"byte_end":476029,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Most types will have to implement a simple forwarding to their fields.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476034,"byte_end":476108,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ However, some types such as [`storage::Box`](`crate::Box`)","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476113,"byte_end":476175,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/ are required to perform some special handling upon receiving this signal.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476180,"byte_end":476257,"line_start":26,"line_end":26,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476645,"byte_end":476656,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"push_packed","qualname":"::traits::packed::PackedLayout::push_packed","value":"pub fn push_packed(&Self, &Key)","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" Indicates to `self` that it is about to be pushed to contract storage.","sig":null,"attributes":[{"value":"/ Indicates to `self` that it is about to be pushed to contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476304,"byte_end":476378,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476383,"byte_end":476386,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476391,"byte_end":476401,"line_start":31,"line_end":31,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476406,"byte_end":476409,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Most types will have to implement a simple forwarding to their fields.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476414,"byte_end":476488,"line_start":33,"line_end":33,"column_start":5,"column_end":79}},{"value":"/ However, some types such as [`storage::Box`](`crate::Box`)","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476493,"byte_end":476555,"line_start":34,"line_end":34,"column_start":5,"column_end":67}},{"value":"/ are required to perform some special handling upon receiving this signal.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476560,"byte_end":476637,"line_start":35,"line_end":35,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":477024,"byte_end":477036,"line_start":45,"line_end":45,"column_start":8,"column_end":20},"name":"clear_packed","qualname":"::traits::packed::PackedLayout::clear_packed","value":"pub fn clear_packed(&Self, &Key)","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" Indicates to `self` that it is about to be cleared from contract storage.","sig":null,"attributes":[{"value":"/ Indicates to `self` that it is about to be cleared from contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476680,"byte_end":476757,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476762,"byte_end":476765,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476770,"byte_end":476780,"line_start":40,"line_end":40,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476785,"byte_end":476788,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Most types will have to implement a simple forwarding to their fields.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476793,"byte_end":476867,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ However, some types such as [`storage::Box`](`crate::Box`)","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476872,"byte_end":476934,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ are required to perform some special handling upon receiving this signal.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":476939,"byte_end":477016,"line_start":44,"line_end":44,"column_start":5,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":3885},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478001,"byte_end":478028,"line_start":22,"line_end":22,"column_start":11,"column_end":38},"name":"FOOTPRINT_CLEANUP_THRESHOLD","qualname":"::traits::spread::FOOTPRINT_CLEANUP_THRESHOLD","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" This constant is used by some types to make sure that cleaning up\n behind them won't become way too expensive. Since we are missing\n Substrate's storage bulk removal feature we cannot do better than\n this at the moment.\n The number is arbitrarily chosen. Might need adjustments later.\n","sig":null,"attributes":[{"value":"/ This constant is used by some types to make sure that cleaning up","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":477690,"byte_end":477759,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ behind them won't become way too expensive. Since we are missing","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":477760,"byte_end":477828,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ Substrate's storage bulk removal feature we cannot do better than","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":477829,"byte_end":477898,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ this at the moment.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":477899,"byte_end":477922,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/ The number is arbitrarily chosen. Might need adjustments later.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":477923,"byte_end":477990,"line_start":21,"line_end":21,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3886},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478121,"byte_end":478133,"line_start":25,"line_end":25,"column_start":11,"column_end":23},"name":"SpreadLayout","qualname":"::traits::spread::SpreadLayout","value":"SpreadLayout","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891}],"decl_id":null,"docs":" Types that can be stored to and loaded from the contract storage.\n","sig":null,"attributes":[{"value":"/ Types that can be stored to and loaded from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478041,"byte_end":478110,"line_start":24,"line_end":24,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":3887},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478709,"byte_end":478718,"line_start":38,"line_end":38,"column_start":11,"column_end":20},"name":"FOOTPRINT","qualname":"::traits::spread::SpreadLayout::FOOTPRINT","value":"u64","parent":{"krate":0,"index":3886},"children":[],"decl_id":null,"docs":" The footprint of the type.","sig":null,"attributes":[{"value":"/ The footprint of the type.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478140,"byte_end":478170,"line_start":26,"line_end":26,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478175,"byte_end":478178,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This is the number of adjunctive cells the type requires in order to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478183,"byte_end":478255,"line_start":28,"line_end":28,"column_start":5,"column_end":77}},{"value":"/ be stored in the contract storage with spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478260,"byte_end":478317,"line_start":29,"line_end":29,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478322,"byte_end":478325,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478330,"byte_end":478344,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478349,"byte_end":478352,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ An instance of type `i32` requires one storage cell, so its footprint is","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478357,"byte_end":478433,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ 1. An instance of type `(i32, i32)` requires 2 storage cells since a","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478438,"byte_end":478510,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ tuple or any other combined data structure always associates disjunctive","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478515,"byte_end":478591,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ cells for its sub types. The same applies to arrays, e.g. `[i32; 5]`","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478596,"byte_end":478668,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ has a footprint of 5.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478673,"byte_end":478698,"line_start":37,"line_end":37,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":3888},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479589,"byte_end":479611,"line_start":54,"line_end":54,"column_start":11,"column_end":33},"name":"REQUIRES_DEEP_CLEAN_UP","qualname":"::traits::spread::SpreadLayout::REQUIRES_DEEP_CLEAN_UP","value":"bool","parent":{"krate":0,"index":3886},"children":[],"decl_id":null,"docs":" Indicates whether a type requires deep clean-up of its state meaning that\n a clean-up routine has to decode an entity into an instance in order to\n eventually recurse upon its tear-down.\n This is not required for the majority of primitive data types such as `i32`,\n however types such as `storage::Box` that might want to forward the clean-up\n procedure to their inner `T` require a deep clean-up.","sig":null,"attributes":[{"value":"/ Indicates whether a type requires deep clean-up of its state meaning that","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478730,"byte_end":478807,"line_start":40,"line_end":40,"column_start":5,"column_end":82}},{"value":"/ a clean-up routine has to decode an entity into an instance in order to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478812,"byte_end":478887,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ eventually recurse upon its tear-down.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478892,"byte_end":478934,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/ This is not required for the majority of primitive data types such as `i32`,","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":478939,"byte_end":479019,"line_start":43,"line_end":43,"column_start":5,"column_end":85}},{"value":"/ however types such as `storage::Box` that might want to forward the clean-up","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479024,"byte_end":479104,"line_start":44,"line_end":44,"column_start":5,"column_end":85}},{"value":"/ procedure to their inner `T` require a deep clean-up.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479109,"byte_end":479166,"line_start":45,"line_end":45,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479171,"byte_end":479174,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479179,"byte_end":479189,"line_start":47,"line_end":47,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479194,"byte_end":479197,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The default is set to `true` in order to have correctness by default since","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479202,"byte_end":479280,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ no type invariants break if a deep clean-up is performed on a type that does","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479285,"byte_end":479365,"line_start":50,"line_end":50,"column_start":5,"column_end":85}},{"value":"/ not need it but performing a shallow clean-up for a type that requires a","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479370,"byte_end":479446,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ deep clean-up would break invariants.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479451,"byte_end":479492,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/ This is solely a setting to improve performance upon clean-up for some types.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479497,"byte_end":479578,"line_start":53,"line_end":53,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479992,"byte_end":480003,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"pull_spread","qualname":"::traits::spread::SpreadLayout::pull_spread","value":"pub fn pull_spread(&mut KeyPtr) -> Self","parent":{"krate":0,"index":3886},"children":[],"decl_id":null,"docs":" Pulls an instance of `Self` from the contract storage.","sig":null,"attributes":[{"value":"/ Pulls an instance of `Self` from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479631,"byte_end":479689,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479694,"byte_end":479697,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The key pointer denotes the position where the instance is being pulled","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479702,"byte_end":479777,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ from within the contract storage","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479782,"byte_end":479818,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479823,"byte_end":479826,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479831,"byte_end":479841,"line_start":61,"line_end":61,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479846,"byte_end":479849,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method of pulling is depth-first: Sub-types are pulled first and","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479854,"byte_end":479927,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ construct the super-type through this procedure.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":479932,"byte_end":479984,"line_start":64,"line_end":64,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480437,"byte_end":480448,"line_start":77,"line_end":77,"column_start":8,"column_end":19},"name":"push_spread","qualname":"::traits::spread::SpreadLayout::push_spread","value":"pub fn push_spread(&Self, &mut KeyPtr)","parent":{"krate":0,"index":3886},"children":[],"decl_id":null,"docs":" Pushes an instance of `Self` to the contract storage.","sig":null,"attributes":[{"value":"/ Pushes an instance of `Self` to the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480036,"byte_end":480093,"line_start":67,"line_end":67,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480098,"byte_end":480101,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ - Tries to spread `Self` to as many storage cells as possible.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480106,"byte_end":480172,"line_start":69,"line_end":69,"column_start":5,"column_end":71}},{"value":"/ - The key pointer denotes the position where the instance is being pushed","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480177,"byte_end":480254,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/ to the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480259,"byte_end":480287,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480292,"byte_end":480295,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480300,"byte_end":480310,"line_start":73,"line_end":73,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480315,"byte_end":480318,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method of pushing is depth-first: Sub-types are pushed before","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480323,"byte_end":480393,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ their parent or super type.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480398,"byte_end":480429,"line_start":76,"line_end":76,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480934,"byte_end":480946,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"clear_spread","qualname":"::traits::spread::SpreadLayout::clear_spread","value":"pub fn clear_spread(&Self, &mut KeyPtr)","parent":{"krate":0,"index":3886},"children":[],"decl_id":null,"docs":" Clears an instance of `Self` from the contract storage.","sig":null,"attributes":[{"value":"/ Clears an instance of `Self` from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480480,"byte_end":480539,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480544,"byte_end":480547,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ - Tries to clean `Self` from contract storage as if `self` was stored","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480552,"byte_end":480625,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/   in it using spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480630,"byte_end":480662,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/ - The key pointer denotes the position where the instance is being cleared","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480667,"byte_end":480745,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/   from the contract storage.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480750,"byte_end":480782,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480787,"byte_end":480790,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480795,"byte_end":480805,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480810,"byte_end":480813,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This method of clearing is depth-first: Sub-types are cleared before","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480818,"byte_end":480890,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ their parent or super type.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/spread.rs","byte_start":480895,"byte_end":480926,"line_start":89,"line_end":89,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":3998},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":481846,"byte_end":481859,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"StorageLayout","qualname":"::traits::layout::StorageLayout","value":"StorageLayout","parent":null,"children":[{"krate":0,"index":3999}],"decl_id":null,"docs":" Implemented by types that have a storage layout.\n","sig":null,"attributes":[{"value":"/ Implemented by types that have a storage layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":481783,"byte_end":481835,"line_start":31,"line_end":31,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482046,"byte_end":482052,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"layout","qualname":"::traits::layout::StorageLayout::layout","value":"pub fn layout(&mut KeyPtr) -> Layout","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Returns the static storage layout of `Self`.","sig":null,"attributes":[{"value":"/ Returns the static storage layout of `Self`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":481866,"byte_end":481914,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":481919,"byte_end":481922,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The given key pointer is guiding the allocation of static fields onto","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":481927,"byte_end":482000,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ the contract storage regions.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482005,"byte_end":482038,"line_start":36,"line_end":36,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":4000},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482173,"byte_end":482191,"line_start":41,"line_end":41,"column_start":11,"column_end":29},"name":"LayoutCryptoHasher","qualname":"::traits::layout::LayoutCryptoHasher","value":"LayoutCryptoHasher","parent":null,"children":[{"krate":0,"index":4001}],"decl_id":null,"docs":" Types implementing this trait are supported layouting crypto hashers.\n","sig":null,"attributes":[{"value":"/ Types implementing this trait are supported layouting crypto hashers.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482089,"byte_end":482162,"line_start":40,"line_end":40,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482254,"byte_end":482267,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"crypto_hasher","qualname":"::traits::layout::LayoutCryptoHasher::crypto_hasher","value":"pub fn crypto_hasher() -> CryptoHasher","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":" Returns the layout crypto hasher for `Self`.\n","sig":null,"attributes":[{"value":"/ Returns the layout crypto hasher for `Self`.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482198,"byte_end":482246,"line_start":42,"line_end":42,"column_start":5,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":4072},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439645,"byte_end":439661,"line_start":81,"line_end":81,"column_start":8,"column_end":24},"name":"pull_spread_root","qualname":"::traits::pull_spread_root","value":"pub fn pull_spread_root<T>(&Key) -> T where T: SpreadLayout","parent":null,"children":[],"decl_id":null,"docs":" Pulls an instance of type `T` from the contract storage using spread layout.","sig":null,"attributes":[{"value":"/ Pulls an instance of type `T` from the contract storage using spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439176,"byte_end":439256,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439257,"byte_end":439260,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439261,"byte_end":439332,"line_start":72,"line_end":72,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pulled from.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439333,"byte_end":439379,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439380,"byte_end":439383,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439384,"byte_end":439394,"line_start":75,"line_end":75,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439395,"byte_end":439398,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439399,"byte_end":439472,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/   the contract storage using spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439473,"byte_end":439520,"line_start":78,"line_end":78,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439521,"byte_end":439596,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`SpreadLayout`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439597,"byte_end":439637,"line_start":80,"line_end":80,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4074},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440266,"byte_end":440283,"line_start":100,"line_end":100,"column_start":8,"column_end":25},"name":"clear_spread_root","qualname":"::traits::clear_spread_root","value":"pub fn clear_spread_root<T>(&T, &Key) where T: SpreadLayout","parent":null,"children":[],"decl_id":null,"docs":" Clears the entity from the contract storage using spread layout.","sig":null,"attributes":[{"value":"/ Clears the entity from the contract storage using spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439808,"byte_end":439876,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439877,"byte_end":439880,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439881,"byte_end":439952,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being cleared from.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":439953,"byte_end":440000,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440001,"byte_end":440004,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440005,"byte_end":440015,"line_start":94,"line_end":94,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440016,"byte_end":440019,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440020,"byte_end":440093,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/   the contract storage using spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440094,"byte_end":440141,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440142,"byte_end":440217,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`SpreadLayout`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440218,"byte_end":440258,"line_start":99,"line_end":99,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4076},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440874,"byte_end":440890,"line_start":119,"line_end":119,"column_start":8,"column_end":24},"name":"push_spread_root","qualname":"::traits::push_spread_root","value":"pub fn push_spread_root<T>(&T, &Key) where T: SpreadLayout","parent":null,"children":[],"decl_id":null,"docs":" Pushes the entity to the contract storage using spread layout.","sig":null,"attributes":[{"value":"/ Pushes the entity to the contract storage using spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440447,"byte_end":440513,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440514,"byte_end":440517,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440518,"byte_end":440589,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pushed to.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440590,"byte_end":440634,"line_start":111,"line_end":111,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440635,"byte_end":440638,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440639,"byte_end":440649,"line_start":113,"line_end":113,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440650,"byte_end":440653,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ - The routine will push the given entity to the contract storage using","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440654,"byte_end":440728,"line_start":115,"line_end":115,"column_start":1,"column_end":75}},{"value":"/   spread layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440729,"byte_end":440749,"line_start":116,"line_end":116,"column_start":1,"column_end":21}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440750,"byte_end":440825,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`SpreadLayout`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":440826,"byte_end":440866,"line_start":118,"line_end":118,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4078},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441522,"byte_end":441538,"line_start":138,"line_end":138,"column_start":8,"column_end":24},"name":"pull_packed_root","qualname":"::traits::pull_packed_root","value":"pub fn pull_packed_root<T>(&Key) -> T where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pulls an instance of type `T` from the contract storage using packed layout.","sig":null,"attributes":[{"value":"/ Pulls an instance of type `T` from the contract storage using packed layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441053,"byte_end":441133,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441134,"byte_end":441137,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441138,"byte_end":441209,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pulled from.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441210,"byte_end":441256,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441257,"byte_end":441260,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441261,"byte_end":441271,"line_start":132,"line_end":132,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441272,"byte_end":441275,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441276,"byte_end":441349,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/   the contract storage using packed layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441350,"byte_end":441397,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441398,"byte_end":441473,"line_start":136,"line_end":136,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`PackedLayout`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441474,"byte_end":441514,"line_start":137,"line_end":137,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4080},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442263,"byte_end":442279,"line_start":160,"line_end":160,"column_start":8,"column_end":24},"name":"push_packed_root","qualname":"::traits::push_packed_root","value":"pub fn push_packed_root<T>(&T, &Key) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Pushes the entity to the contract storage using packed layout.","sig":null,"attributes":[{"value":"/ Pushes the entity to the contract storage using packed layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441836,"byte_end":441902,"line_start":149,"line_end":149,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441903,"byte_end":441906,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441907,"byte_end":441978,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being pushed to.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":441979,"byte_end":442023,"line_start":152,"line_end":152,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442024,"byte_end":442027,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442028,"byte_end":442038,"line_start":154,"line_end":154,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442039,"byte_end":442042,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ - The routine will push the given entity to the contract storage using","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442043,"byte_end":442117,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/   packed layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442118,"byte_end":442138,"line_start":157,"line_end":157,"column_start":1,"column_end":21}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442139,"byte_end":442214,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`PackedLayout`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442215,"byte_end":442255,"line_start":159,"line_end":159,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4082},"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442910,"byte_end":442927,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"clear_packed_root","qualname":"::traits::clear_packed_root","value":"pub fn clear_packed_root<T>(&T, &Key) where T: PackedLayout","parent":null,"children":[],"decl_id":null,"docs":" Clears the entity from the contract storage using packed layout.","sig":null,"attributes":[{"value":"/ Clears the entity from the contract storage using packed layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442452,"byte_end":442520,"line_start":168,"line_end":168,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442521,"byte_end":442524,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ The root key denotes the offset into the contract storage where the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442525,"byte_end":442596,"line_start":170,"line_end":170,"column_start":1,"column_end":72}},{"value":"/ instance of type `T` is being cleared from.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442597,"byte_end":442644,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442645,"byte_end":442648,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442649,"byte_end":442659,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442660,"byte_end":442663,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ - The routine assumes that the instance has previously been stored to","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442664,"byte_end":442737,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/   the contract storage using packed layout.","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442738,"byte_end":442785,"line_start":176,"line_end":176,"column_start":1,"column_end":48}},{"value":"/ - Users should prefer using this function directly instead of using the","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442786,"byte_end":442861,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/   trait methods on [`PackedLayout`].","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/mod.rs","byte_start":442862,"byte_end":442902,"line_start":178,"line_end":178,"column_start":1,"column_end":41}}]}],"impls":[{"id":4,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":9518,"byte_end":9522,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":10163,"byte_end":10167,"line_start":75,"line_end":75,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":10404,"byte_end":10408,"line_start":86,"line_end":86,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":10815,"byte_end":10832,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":11719,"byte_end":11732,"line_start":123,"line_end":123,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","byte_start":14677,"byte_end":14693,"line_start":41,"line_end":41,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","byte_start":14968,"byte_end":14984,"line_start":51,"line_end":51,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","byte_start":15423,"byte_end":15439,"line_start":69,"line_end":69,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20425,"byte_end":20435,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20642,"byte_end":20652,"line_start":31,"line_end":31,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20842,"byte_end":20852,"line_start":40,"line_end":40,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20921,"byte_end":20931,"line_start":42,"line_end":42,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":21633,"byte_end":21643,"line_start":63,"line_end":63,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":21854,"byte_end":21864,"line_start":72,"line_end":72,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22085,"byte_end":22095,"line_start":81,"line_end":81,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22293,"byte_end":22303,"line_start":90,"line_end":90,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22440,"byte_end":22450,"line_start":99,"line_end":99,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22606,"byte_end":22616,"line_start":108,"line_end":108,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22763,"byte_end":22773,"line_start":117,"line_end":117,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22919,"byte_end":22929,"line_start":126,"line_end":126,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":23094,"byte_end":23104,"line_start":137,"line_end":137,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":24344,"byte_end":24354,"line_start":39,"line_end":39,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":24639,"byte_end":24649,"line_start":50,"line_end":50,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":25712,"byte_end":25722,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":26111,"byte_end":26121,"line_start":96,"line_end":96,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":26719,"byte_end":26729,"line_start":117,"line_end":117,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":26980,"byte_end":26990,"line_start":128,"line_end":128,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18342,"byte_end":18345,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18934,"byte_end":18937,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":29813,"byte_end":29834,"line_start":69,"line_end":69,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":30071,"byte_end":30092,"line_start":78,"line_end":78,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":49570,"byte_end":49578,"line_start":90,"line_end":90,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":50706,"byte_end":50714,"line_start":130,"line_end":130,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":51011,"byte_end":51019,"line_start":142,"line_end":142,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":51461,"byte_end":51469,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":55127,"byte_end":55136,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":55953,"byte_end":55965,"line_start":81,"line_end":81,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56140,"byte_end":56151,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":62535,"byte_end":62546,"line_start":287,"line_end":287,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":63573,"byte_end":63577,"line_start":324,"line_end":324,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":64016,"byte_end":64020,"line_start":343,"line_end":343,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/impls.rs","byte_start":65471,"byte_end":65481,"line_start":22,"line_end":22,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/impls.rs","byte_start":65710,"byte_end":65720,"line_start":36,"line_end":36,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67351,"byte_end":67358,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67677,"byte_end":67684,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":68130,"byte_end":68137,"line_start":70,"line_end":70,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":68523,"byte_end":68530,"line_start":87,"line_end":87,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":69126,"byte_end":69133,"line_start":112,"line_end":112,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/storage.rs","byte_start":70377,"byte_end":70387,"line_start":37,"line_end":37,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/storage.rs","byte_start":71067,"byte_end":71078,"line_start":65,"line_end":65,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/storage.rs","byte_start":71568,"byte_end":71578,"line_start":81,"line_end":81,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40748,"byte_end":40758,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41234,"byte_end":41244,"line_start":77,"line_end":77,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44120,"byte_end":44130,"line_start":177,"line_end":177,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":45451,"byte_end":45458,"line_start":219,"line_end":219,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":45633,"byte_end":45640,"line_start":230,"line_end":230,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":45906,"byte_end":45913,"line_start":243,"line_end":243,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":46154,"byte_end":46161,"line_start":255,"line_end":255,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":80178,"byte_end":80187,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":80331,"byte_end":80340,"line_start":40,"line_end":40,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":80630,"byte_end":80638,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":81211,"byte_end":81220,"line_start":68,"line_end":68,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":83837,"byte_end":83845,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":84324,"byte_end":84333,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":84736,"byte_end":84745,"line_start":77,"line_end":77,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":84898,"byte_end":84906,"line_start":83,"line_end":83,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":74229,"byte_end":74237,"line_start":61,"line_end":61,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95616,"byte_end":95625,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95732,"byte_end":95741,"line_start":37,"line_end":37,"column_start":17,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95759,"byte_end":95768,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":101658,"byte_end":101665,"line_start":30,"line_end":30,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":101940,"byte_end":101944,"line_start":46,"line_end":46,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":102210,"byte_end":102214,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":102245,"byte_end":102249,"line_start":62,"line_end":62,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":102922,"byte_end":102926,"line_start":90,"line_end":90,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":103491,"byte_end":103498,"line_start":114,"line_end":114,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":103990,"byte_end":103997,"line_start":133,"line_end":133,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":104028,"byte_end":104035,"line_start":135,"line_end":135,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":104712,"byte_end":104719,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":105109,"byte_end":105116,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112165,"byte_end":112173,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112462,"byte_end":112470,"line_start":50,"line_end":50,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113414,"byte_end":113422,"line_start":84,"line_end":84,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":114117,"byte_end":114125,"line_start":104,"line_end":104,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118061,"byte_end":118074,"line_start":21,"line_end":21,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118152,"byte_end":118165,"line_start":27,"line_end":27,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118338,"byte_end":118351,"line_start":36,"line_end":36,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118378,"byte_end":118391,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118566,"byte_end":118579,"line_start":46,"line_end":46,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118757,"byte_end":118770,"line_start":54,"line_end":54,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118970,"byte_end":118983,"line_start":62,"line_end":62,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120437,"byte_end":120445,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120796,"byte_end":120804,"line_start":51,"line_end":51,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120835,"byte_end":120843,"line_start":53,"line_end":53,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":121895,"byte_end":121903,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":122963,"byte_end":122974,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":123333,"byte_end":123344,"line_start":135,"line_end":135,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":123375,"byte_end":123386,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":124451,"byte_end":124462,"line_start":173,"line_end":173,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":125566,"byte_end":125577,"line_start":207,"line_end":207,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":125854,"byte_end":125865,"line_start":217,"line_end":217,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":126422,"byte_end":126433,"line_start":240,"line_end":240,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":126861,"byte_end":126872,"line_start":256,"line_end":256,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":127189,"byte_end":127203,"line_start":267,"line_end":267,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":127488,"byte_end":127502,"line_start":277,"line_end":277,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":127999,"byte_end":128013,"line_start":297,"line_end":297,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":128347,"byte_end":128361,"line_start":310,"line_end":310,"column_start":32,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":129525,"byte_end":129538,"line_start":45,"line_end":45,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":129949,"byte_end":129956,"line_start":58,"line_end":58,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":130359,"byte_end":130366,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":130519,"byte_end":130532,"line_start":81,"line_end":81,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87384,"byte_end":87390,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1134},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":150827,"byte_end":150841,"line_start":40,"line_end":40,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":151062,"byte_end":151076,"line_start":52,"line_end":52,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":151308,"byte_end":151322,"line_start":64,"line_end":64,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":151697,"byte_end":151711,"line_start":79,"line_end":79,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":152758,"byte_end":152772,"line_start":122,"line_end":122,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":153128,"byte_end":153142,"line_start":139,"line_end":139,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":153488,"byte_end":153502,"line_start":156,"line_end":156,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":153955,"byte_end":153969,"line_start":173,"line_end":173,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":155371,"byte_end":155375,"line_start":43,"line_end":43,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":155807,"byte_end":155811,"line_start":61,"line_end":61,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":156383,"byte_end":156387,"line_start":82,"line_end":82,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":156898,"byte_end":156902,"line_start":105,"line_end":105,"column_start":41,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":157089,"byte_end":157093,"line_start":114,"line_end":114,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":157732,"byte_end":157739,"line_start":139,"line_end":139,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":158179,"byte_end":158186,"line_start":157,"line_end":157,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":158838,"byte_end":158845,"line_start":180,"line_end":180,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":159360,"byte_end":159367,"line_start":203,"line_end":203,"column_start":41,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":159554,"byte_end":159561,"line_start":212,"line_end":212,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":160101,"byte_end":160107,"line_start":235,"line_end":235,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":160504,"byte_end":160510,"line_start":252,"line_end":252,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":160976,"byte_end":160982,"line_start":274,"line_end":274,"column_start":41,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":161169,"byte_end":161175,"line_start":283,"line_end":283,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":161685,"byte_end":161694,"line_start":305,"line_end":305,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":162099,"byte_end":162108,"line_start":322,"line_end":322,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":162578,"byte_end":162587,"line_start":344,"line_end":344,"column_start":41,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":162774,"byte_end":162783,"line_start":353,"line_end":353,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163261,"byte_end":163265,"line_start":375,"line_end":375,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163661,"byte_end":163665,"line_start":392,"line_end":392,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163993,"byte_end":163997,"line_start":411,"line_end":411,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":164067,"byte_end":164071,"line_start":413,"line_end":413,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":165569,"byte_end":165583,"line_start":54,"line_end":54,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":166294,"byte_end":166304,"line_start":76,"line_end":76,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":166778,"byte_end":166788,"line_start":96,"line_end":96,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":167173,"byte_end":167187,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135299,"byte_end":135306,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137958,"byte_end":137965,"line_start":236,"line_end":236,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":138945,"byte_end":138952,"line_start":262,"line_end":262,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":144728,"byte_end":144733,"line_start":410,"line_end":410,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147493,"byte_end":147504,"line_start":490,"line_end":490,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148295,"byte_end":148308,"line_start":516,"line_end":516,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":177845,"byte_end":177853,"line_start":25,"line_end":25,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":178000,"byte_end":178008,"line_start":34,"line_end":34,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":178469,"byte_end":178477,"line_start":54,"line_end":54,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179149,"byte_end":179157,"line_start":84,"line_end":84,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179399,"byte_end":179407,"line_start":98,"line_end":98,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179666,"byte_end":179674,"line_start":112,"line_end":112,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179955,"byte_end":179963,"line_start":124,"line_end":124,"column_start":43,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":181111,"byte_end":181115,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":181560,"byte_end":181564,"line_start":54,"line_end":54,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":182333,"byte_end":182337,"line_start":85,"line_end":85,"column_start":51,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":182426,"byte_end":182430,"line_start":87,"line_end":87,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":183352,"byte_end":183359,"line_start":123,"line_end":123,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":183818,"byte_end":183825,"line_start":143,"line_end":143,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":184544,"byte_end":184551,"line_start":161,"line_end":161,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":185324,"byte_end":185331,"line_start":192,"line_end":192,"column_start":51,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":185420,"byte_end":185427,"line_start":194,"line_end":194,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/storage.rs","byte_start":186940,"byte_end":186948,"line_start":35,"line_end":35,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/storage.rs","byte_start":187434,"byte_end":187442,"line_start":51,"line_end":51,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169947,"byte_end":169955,"line_start":67,"line_end":67,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":170071,"byte_end":170079,"line_start":76,"line_end":76,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":170923,"byte_end":170931,"line_start":102,"line_end":102,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171592,"byte_end":171600,"line_start":133,"line_end":133,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173298,"byte_end":173306,"line_start":193,"line_end":193,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173704,"byte_end":173712,"line_start":209,"line_end":209,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211064,"byte_end":211076,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211191,"byte_end":211203,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211308,"byte_end":211320,"line_start":46,"line_end":46,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211692,"byte_end":211704,"line_start":62,"line_end":62,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":212052,"byte_end":212064,"line_start":77,"line_end":77,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":212828,"byte_end":212840,"line_start":114,"line_end":114,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":213063,"byte_end":213075,"line_start":128,"line_end":128,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":213319,"byte_end":213331,"line_start":142,"line_end":142,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":213593,"byte_end":213605,"line_start":154,"line_end":154,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":214908,"byte_end":214912,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":215379,"byte_end":215383,"line_start":64,"line_end":64,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":216190,"byte_end":216194,"line_start":98,"line_end":98,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":216264,"byte_end":216268,"line_start":100,"line_end":100,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":217338,"byte_end":217345,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":217826,"byte_end":217833,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":218535,"byte_end":218542,"line_start":182,"line_end":182,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":219351,"byte_end":219358,"line_start":216,"line_end":216,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":219428,"byte_end":219435,"line_start":218,"line_end":218,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220433,"byte_end":220440,"line_start":259,"line_end":259,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220751,"byte_end":220758,"line_start":274,"line_end":274,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":221408,"byte_end":221415,"line_start":301,"line_end":301,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":221485,"byte_end":221492,"line_start":303,"line_end":303,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":223227,"byte_end":223233,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":223458,"byte_end":223470,"line_start":58,"line_end":58,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":223947,"byte_end":223953,"line_start":74,"line_end":74,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":224356,"byte_end":224362,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":224518,"byte_end":224523,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":224997,"byte_end":225002,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":225542,"byte_end":225554,"line_start":140,"line_end":140,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191074,"byte_end":191079,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191970,"byte_end":191975,"line_start":131,"line_end":131,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":194529,"byte_end":194534,"line_start":224,"line_end":224,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":195507,"byte_end":195512,"line_start":257,"line_end":257,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":196836,"byte_end":196841,"line_start":290,"line_end":290,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2205},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":243515,"byte_end":243525,"line_start":28,"line_end":28,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":243654,"byte_end":243664,"line_start":37,"line_end":37,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":244106,"byte_end":244116,"line_start":57,"line_end":57,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":244973,"byte_end":244983,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":245206,"byte_end":245216,"line_start":113,"line_end":113,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":245458,"byte_end":245468,"line_start":127,"line_end":127,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":245730,"byte_end":245740,"line_start":139,"line_end":139,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":246848,"byte_end":246852,"line_start":35,"line_end":35,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":247277,"byte_end":247281,"line_start":54,"line_end":54,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248031,"byte_end":248035,"line_start":85,"line_end":85,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248105,"byte_end":248109,"line_start":87,"line_end":87,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248989,"byte_end":248996,"line_start":123,"line_end":123,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":249435,"byte_end":249442,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":250142,"byte_end":250149,"line_start":161,"line_end":161,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":250903,"byte_end":250910,"line_start":192,"line_end":192,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":250980,"byte_end":250987,"line_start":194,"line_end":194,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/storage.rs","byte_start":252578,"byte_end":252588,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/storage.rs","byte_start":253061,"byte_end":253071,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228278,"byte_end":228281,"line_start":71,"line_end":71,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228378,"byte_end":228381,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228867,"byte_end":228870,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229695,"byte_end":229698,"line_start":129,"line_end":129,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231383,"byte_end":231386,"line_start":189,"line_end":189,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238280,"byte_end":238283,"line_start":381,"line_end":381,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266444,"byte_end":266457,"line_start":161,"line_end":161,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266661,"byte_end":266672,"line_start":171,"line_end":171,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":268286,"byte_end":268297,"line_start":235,"line_end":235,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":269019,"byte_end":269030,"line_start":258,"line_end":258,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":270365,"byte_end":270376,"line_start":297,"line_end":297,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":270501,"byte_end":270512,"line_start":306,"line_end":306,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2661}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":270863,"byte_end":270874,"line_start":323,"line_end":323,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271208,"byte_end":271219,"line_start":340,"line_end":340,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273658,"byte_end":273669,"line_start":417,"line_end":417,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":277029,"byte_end":277040,"line_start":491,"line_end":491,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":278147,"byte_end":278158,"line_start":532,"line_end":532,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":286774,"byte_end":286779,"line_start":739,"line_end":739,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289298,"byte_end":289309,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":290460,"byte_end":290473,"line_start":855,"line_end":855,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":310735,"byte_end":310744,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311066,"byte_end":311075,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311244,"byte_end":311253,"line_start":56,"line_end":56,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311345,"byte_end":311354,"line_start":62,"line_end":62,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311471,"byte_end":311480,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":314184,"byte_end":314196,"line_start":47,"line_end":47,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2830}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315103,"byte_end":315113,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315488,"byte_end":315500,"line_start":97,"line_end":97,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":316075,"byte_end":316087,"line_start":119,"line_end":119,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":316690,"byte_end":316702,"line_start":144,"line_end":144,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":316974,"byte_end":316986,"line_start":156,"line_end":156,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317369,"byte_end":317381,"line_start":176,"line_end":176,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318844,"byte_end":318856,"line_start":216,"line_end":216,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320387,"byte_end":320399,"line_start":257,"line_end":257,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":324714,"byte_end":324723,"line_start":78,"line_end":78,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":325318,"byte_end":325333,"line_start":100,"line_end":100,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":325722,"byte_end":325731,"line_start":116,"line_end":116,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":327331,"byte_end":327342,"line_start":179,"line_end":179,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2976}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":327533,"byte_end":327544,"line_start":187,"line_end":187,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2984},{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":327932,"byte_end":327943,"line_start":206,"line_end":206,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328106,"byte_end":328117,"line_start":212,"line_end":212,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328153,"byte_end":328163,"line_start":214,"line_end":214,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328379,"byte_end":328389,"line_start":223,"line_end":223,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328478,"byte_end":328488,"line_start":229,"line_end":229,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330036,"byte_end":330045,"line_start":276,"line_end":276,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331434,"byte_end":331443,"line_start":306,"line_end":306,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331532,"byte_end":331541,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333340,"byte_end":333349,"line_start":372,"line_end":372,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":334243,"byte_end":334252,"line_start":401,"line_end":401,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":334542,"byte_end":334551,"line_start":411,"line_end":411,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":353848,"byte_end":353856,"line_start":67,"line_end":67,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":355063,"byte_end":355071,"line_start":109,"line_end":109,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":356770,"byte_end":356778,"line_start":150,"line_end":150,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":356986,"byte_end":356994,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":358643,"byte_end":358651,"line_start":208,"line_end":208,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":358776,"byte_end":358784,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":358915,"byte_end":358923,"line_start":226,"line_end":226,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":360091,"byte_end":360099,"line_start":274,"line_end":274,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":387763,"byte_end":387776,"line_start":68,"line_end":68,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":387957,"byte_end":387969,"line_start":77,"line_end":77,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389106,"byte_end":389118,"line_start":123,"line_end":123,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389484,"byte_end":389496,"line_start":138,"line_end":138,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":392215,"byte_end":392227,"line_start":221,"line_end":221,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":392717,"byte_end":392729,"line_start":239,"line_end":239,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393536,"byte_end":393548,"line_start":266,"line_end":266,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":394910,"byte_end":394922,"line_start":296,"line_end":296,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255779,"byte_end":255783,"line_start":76,"line_end":76,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255991,"byte_end":255995,"line_start":86,"line_end":86,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256454,"byte_end":256458,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":3322}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256882,"byte_end":256886,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258213,"byte_end":258217,"line_start":178,"line_end":178,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258336,"byte_end":258340,"line_start":187,"line_end":187,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258490,"byte_end":258494,"line_start":196,"line_end":196,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258672,"byte_end":258676,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258745,"byte_end":258749,"line_start":207,"line_end":207,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":259391,"byte_end":259395,"line_start":228,"line_end":228,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":259594,"byte_end":259598,"line_start":237,"line_end":237,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":259813,"byte_end":259817,"line_start":246,"line_end":246,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260010,"byte_end":260014,"line_start":255,"line_end":255,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260145,"byte_end":260149,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260299,"byte_end":260303,"line_start":273,"line_end":273,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260444,"byte_end":260448,"line_start":282,"line_end":282,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260588,"byte_end":260592,"line_start":291,"line_end":291,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260751,"byte_end":260755,"line_start":302,"line_end":302,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416036,"byte_end":416042,"line_start":62,"line_end":62,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3427}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416264,"byte_end":416270,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416519,"byte_end":416525,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416917,"byte_end":416923,"line_start":102,"line_end":102,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417015,"byte_end":417021,"line_start":108,"line_end":108,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3444}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417150,"byte_end":417156,"line_start":117,"line_end":117,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417322,"byte_end":417328,"line_start":126,"line_end":126,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3450},{"krate":0,"index":3451}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417449,"byte_end":417455,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417570,"byte_end":417576,"line_start":140,"line_end":140,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417701,"byte_end":417707,"line_start":149,"line_end":149,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417836,"byte_end":417842,"line_start":158,"line_end":158,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417962,"byte_end":417968,"line_start":167,"line_end":167,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":425207,"byte_end":425211,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":425797,"byte_end":425801,"line_start":99,"line_end":99,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426005,"byte_end":426009,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426487,"byte_end":426491,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426893,"byte_end":426897,"line_start":152,"line_end":152,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":427147,"byte_end":427151,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":427654,"byte_end":427658,"line_start":185,"line_end":185,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428057,"byte_end":428061,"line_start":200,"line_end":200,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428180,"byte_end":428184,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428330,"byte_end":428334,"line_start":218,"line_end":218,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3556},{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428498,"byte_end":428502,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3560}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428661,"byte_end":428665,"line_start":238,"line_end":238,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3563}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428853,"byte_end":428857,"line_start":247,"line_end":247,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428926,"byte_end":428930,"line_start":249,"line_end":249,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":429622,"byte_end":429626,"line_start":270,"line_end":270,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":429835,"byte_end":429839,"line_start":279,"line_end":279,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3578}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430059,"byte_end":430063,"line_start":288,"line_end":288,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3581}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430261,"byte_end":430265,"line_start":297,"line_end":297,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430401,"byte_end":430405,"line_start":306,"line_end":306,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430560,"byte_end":430564,"line_start":315,"line_end":315,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3591}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430710,"byte_end":430714,"line_start":324,"line_end":324,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":451415,"byte_end":451426,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":451975,"byte_end":451986,"line_start":61,"line_end":61,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":452741,"byte_end":452752,"line_start":89,"line_end":89,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3699}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":453274,"byte_end":453285,"line_start":112,"line_end":112,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":453774,"byte_end":453787,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":454309,"byte_end":454322,"line_start":157,"line_end":157,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":457527,"byte_end":457533,"line_start":58,"line_end":58,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":458900,"byte_end":458906,"line_start":98,"line_end":98,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":459458,"byte_end":459464,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":460934,"byte_end":460940,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":461724,"byte_end":461727,"line_start":201,"line_end":201,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":462259,"byte_end":462262,"line_start":221,"line_end":221,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/keyptr.rs","byte_start":469893,"byte_end":469899,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3840}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":486194,"byte_end":486197,"line_start":123,"line_end":123,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":486360,"byte_end":486366,"line_start":132,"line_end":132,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":486989,"byte_end":486995,"line_start":154,"line_end":154,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":487840,"byte_end":487843,"line_start":183,"line_end":183,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":488077,"byte_end":488085,"line_start":194,"line_end":194,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482318,"byte_end":482328,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482442,"byte_end":482450,"line_start":52,"line_end":52,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4005}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482562,"byte_end":482571,"line_start":58,"line_end":58,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1625,"byte_end":1630,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1640,"byte_end":1651,"line_start":51,"line_end":51,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":292}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38198,"byte_end":38209,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":293}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38219,"byte_end":38227,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":630}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38237,"byte_end":38243,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":739}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38253,"byte_end":38260,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1145}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38270,"byte_end":38278,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1671}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38288,"byte_end":38293,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1902}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/mod.rs","byte_start":38303,"byte_end":38306,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2211}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1661,"byte_end":1665,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2467}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":254915,"byte_end":254924,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2468}},{"kind":"Mod","span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lib.rs","byte_start":1697,"byte_end":1703,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3595}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":9518,"byte_end":9522,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":10163,"byte_end":10167,"line_start":75,"line_end":75,"column_start":29,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":18},"to":{"krate":1,"index":4335}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":10404,"byte_end":10408,"line_start":86,"line_end":86,"column_start":33,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":10815,"byte_end":10832,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocation.rs","byte_start":11719,"byte_end":11732,"line_start":123,"line_end":123,"column_start":32,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":36},"to":{"krate":25,"index":202}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","byte_start":14677,"byte_end":14693,"line_start":41,"line_end":41,"column_start":28,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4145},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","byte_start":14968,"byte_end":14984,"line_start":51,"line_end":51,"column_start":23,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4145},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/allocator.rs","byte_start":15423,"byte_end":15439,"line_start":69,"line_end":69,"column_start":6,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20425,"byte_end":20435,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20642,"byte_end":20652,"line_start":31,"line_end":31,"column_start":34,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20842,"byte_end":20852,"line_start":40,"line_end":40,"column_start":27,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":20921,"byte_end":20931,"line_start":42,"line_end":42,"column_start":35,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":21633,"byte_end":21643,"line_start":63,"line_end":63,"column_start":28,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":21854,"byte_end":21864,"line_start":72,"line_end":72,"column_start":32,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22085,"byte_end":22095,"line_start":81,"line_end":81,"column_start":30,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22293,"byte_end":22303,"line_start":90,"line_end":90,"column_start":37,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22440,"byte_end":22450,"line_start":99,"line_end":99,"column_start":37,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22606,"byte_end":22616,"line_start":108,"line_end":108,"column_start":44,"column_end":54},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22763,"byte_end":22773,"line_start":117,"line_end":117,"column_start":47,"column_end":57},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":22919,"byte_end":22929,"line_start":126,"line_end":126,"column_start":30,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/impls.rs","byte_start":23094,"byte_end":23104,"line_start":137,"line_end":137,"column_start":33,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4158},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":24344,"byte_end":24354,"line_start":39,"line_end":39,"column_start":31,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4158},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":24639,"byte_end":24649,"line_start":50,"line_end":50,"column_start":38,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4158},"to":{"krate":21,"index":797}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":25712,"byte_end":25722,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4158},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":26111,"byte_end":26121,"line_start":96,"line_end":96,"column_start":27,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4158},"to":{"krate":25,"index":202}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":26719,"byte_end":26729,"line_start":117,"line_end":117,"column_start":27,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4158},"to":{"krate":25,"index":220}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/storage.rs","byte_start":26980,"byte_end":26990,"line_start":128,"line_end":128,"column_start":26,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4158},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18342,"byte_end":18345,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/boxed/mod.rs","byte_start":18934,"byte_end":18937,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":29813,"byte_end":29834,"line_start":69,"line_end":69,"column_start":30,"column_end":51},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4181},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/alloc/init.rs","byte_start":30071,"byte_end":30092,"line_start":78,"line_end":78,"column_start":6,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":49570,"byte_end":49578,"line_start":90,"line_end":90,"column_start":9,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":50706,"byte_end":50714,"line_start":130,"line_end":130,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4213},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":51011,"byte_end":51019,"line_start":142,"line_end":142,"column_start":26,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4213},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children.rs","byte_start":51461,"byte_end":51469,"line_start":162,"line_end":162,"column_start":26,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4213},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":55127,"byte_end":55136,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":55953,"byte_end":55965,"line_start":81,"line_end":81,"column_start":13,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":56140,"byte_end":56151,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":62535,"byte_end":62546,"line_start":287,"line_end":287,"column_start":26,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4261},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":63573,"byte_end":63577,"line_start":324,"line_end":324,"column_start":13,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/children_vec.rs","byte_start":64016,"byte_end":64020,"line_start":343,"line_end":343,"column_start":26,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4282},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/impls.rs","byte_start":65471,"byte_end":65481,"line_start":22,"line_end":22,"column_start":23,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4331},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/impls.rs","byte_start":65710,"byte_end":65720,"line_start":36,"line_end":36,"column_start":29,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4331},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67351,"byte_end":67358,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":67677,"byte_end":67684,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4299},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":68130,"byte_end":68137,"line_start":70,"line_end":70,"column_start":26,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4299},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":68523,"byte_end":68530,"line_start":87,"line_end":87,"column_start":27,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4299},"to":{"krate":25,"index":202}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/reverse.rs","byte_start":69126,"byte_end":69133,"line_start":112,"line_end":112,"column_start":27,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4299},"to":{"krate":25,"index":220}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/storage.rs","byte_start":70377,"byte_end":70387,"line_start":37,"line_end":37,"column_start":31,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4331},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/storage.rs","byte_start":71067,"byte_end":71078,"line_start":65,"line_end":65,"column_start":31,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4261},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/storage.rs","byte_start":71568,"byte_end":71578,"line_start":81,"line_end":81,"column_start":26,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4331},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":40748,"byte_end":40758,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":41234,"byte_end":41244,"line_start":77,"line_end":77,"column_start":9,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":44120,"byte_end":44130,"line_start":177,"line_end":177,"column_start":9,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":45451,"byte_end":45458,"line_start":219,"line_end":219,"column_start":18,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":45633,"byte_end":45640,"line_start":230,"line_end":230,"column_start":30,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":45906,"byte_end":45913,"line_start":243,"line_end":243,"column_start":33,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/binary_heap/mod.rs","byte_start":46154,"byte_end":46161,"line_start":255,"line_end":255,"column_start":13,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":80178,"byte_end":80187,"line_start":32,"line_end":32,"column_start":20,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4375},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":80331,"byte_end":80340,"line_start":40,"line_end":40,"column_start":23,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4375},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":80630,"byte_end":80638,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/counts.rs","byte_start":81211,"byte_end":81220,"line_start":68,"line_end":68,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":83837,"byte_end":83845,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4420},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":84324,"byte_end":84333,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4375},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":84736,"byte_end":84745,"line_start":77,"line_end":77,"column_start":23,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4375},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/storage.rs","byte_start":84898,"byte_end":84906,"line_start":83,"line_end":83,"column_start":23,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4420},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitstash/mod.rs","byte_start":74229,"byte_end":74237,"line_start":61,"line_end":61,"column_start":6,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95616,"byte_end":95625,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4434},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95732,"byte_end":95741,"line_start":37,"line_end":37,"column_start":17,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4434},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitref.rs","byte_start":95759,"byte_end":95768,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":101658,"byte_end":101665,"line_start":30,"line_end":30,"column_start":18,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4471},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":101940,"byte_end":101944,"line_start":46,"line_end":46,"column_start":10,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":102210,"byte_end":102214,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4479},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":102245,"byte_end":102249,"line_start":62,"line_end":62,"column_start":23,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4479},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":102922,"byte_end":102926,"line_start":90,"line_end":90,"column_start":34,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4479},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":103491,"byte_end":103498,"line_start":114,"line_end":114,"column_start":10,"column_end":17},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":103990,"byte_end":103997,"line_start":133,"line_end":133,"column_start":32,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4492},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":104028,"byte_end":104035,"line_start":135,"line_end":135,"column_start":23,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4492},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":104712,"byte_end":104719,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4492},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bits256.rs","byte_start":105109,"byte_end":105116,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112165,"byte_end":112173,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":112462,"byte_end":112470,"line_start":50,"line_end":50,"column_start":10,"column_end":18},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":113414,"byte_end":113422,"line_start":84,"line_end":84,"column_start":10,"column_end":18},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/bitsref.rs","byte_start":114117,"byte_end":114125,"line_start":104,"line_end":104,"column_start":31,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4500},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118061,"byte_end":118074,"line_start":21,"line_end":21,"column_start":18,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118152,"byte_end":118165,"line_start":27,"line_end":27,"column_start":20,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118338,"byte_end":118351,"line_start":36,"line_end":36,"column_start":13,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118378,"byte_end":118391,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118566,"byte_end":118579,"line_start":46,"line_end":46,"column_start":31,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118757,"byte_end":118770,"line_start":54,"line_end":54,"column_start":29,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/impls.rs","byte_start":118970,"byte_end":118983,"line_start":62,"line_end":62,"column_start":37,"column_end":50},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4554},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120437,"byte_end":120445,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120796,"byte_end":120804,"line_start":51,"line_end":51,"column_start":32,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4512},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":120835,"byte_end":120843,"line_start":53,"line_end":53,"column_start":23,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4512},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":121895,"byte_end":121903,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4512},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":122963,"byte_end":122974,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":123333,"byte_end":123344,"line_start":135,"line_end":135,"column_start":32,"column_end":43},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4526},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":123375,"byte_end":123386,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4526},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":124451,"byte_end":124462,"line_start":173,"line_end":173,"column_start":34,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4526},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":125566,"byte_end":125577,"line_start":207,"line_end":207,"column_start":10,"column_end":21},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":125854,"byte_end":125865,"line_start":217,"line_end":217,"column_start":23,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4535},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":126422,"byte_end":126433,"line_start":240,"line_end":240,"column_start":34,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4535},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":126861,"byte_end":126872,"line_start":256,"line_end":256,"column_start":32,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4535},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":127189,"byte_end":127203,"line_start":267,"line_end":267,"column_start":10,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":127488,"byte_end":127502,"line_start":277,"line_end":277,"column_start":23,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":127999,"byte_end":128013,"line_start":297,"line_end":297,"column_start":34,"column_end":48},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/iter.rs","byte_start":128347,"byte_end":128361,"line_start":310,"line_end":310,"column_start":32,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":129525,"byte_end":129538,"line_start":45,"line_end":45,"column_start":28,"column_end":41},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4554},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":129949,"byte_end":129956,"line_start":58,"line_end":58,"column_start":23,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4471},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":130359,"byte_end":130366,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4471},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/storage.rs","byte_start":130519,"byte_end":130532,"line_start":81,"line_end":81,"column_start":23,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4554},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/bitvec/mod.rs","byte_start":87384,"byte_end":87390,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":150827,"byte_end":150841,"line_start":40,"line_end":40,"column_start":24,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":151062,"byte_end":151076,"line_start":52,"line_end":52,"column_start":27,"column_end":41},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":151308,"byte_end":151322,"line_start":64,"line_end":64,"column_start":44,"column_end":58},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":151697,"byte_end":151711,"line_start":79,"line_end":79,"column_start":47,"column_end":61},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":152758,"byte_end":152772,"line_start":122,"line_end":122,"column_start":34,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":153128,"byte_end":153142,"line_start":139,"line_end":139,"column_start":40,"column_end":54},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":153488,"byte_end":153502,"line_start":156,"line_end":156,"column_start":29,"column_end":43},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/impls.rs","byte_start":153955,"byte_end":153969,"line_start":173,"line_end":173,"column_start":22,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":155371,"byte_end":155375,"line_start":43,"line_end":43,"column_start":19,"column_end":23},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":155807,"byte_end":155811,"line_start":61,"line_end":61,"column_start":19,"column_end":23},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":156383,"byte_end":156387,"line_start":82,"line_end":82,"column_start":32,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4559},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":156898,"byte_end":156902,"line_start":105,"line_end":105,"column_start":41,"column_end":45},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4559},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":157089,"byte_end":157093,"line_start":114,"line_end":114,"column_start":43,"column_end":47},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4559},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":157732,"byte_end":157739,"line_start":139,"line_end":139,"column_start":19,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":158179,"byte_end":158186,"line_start":157,"line_end":157,"column_start":19,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":158838,"byte_end":158845,"line_start":180,"line_end":180,"column_start":32,"column_end":39},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4583},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":159360,"byte_end":159367,"line_start":203,"line_end":203,"column_start":41,"column_end":48},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4583},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":159554,"byte_end":159561,"line_start":212,"line_end":212,"column_start":43,"column_end":50},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4583},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":160101,"byte_end":160107,"line_start":235,"line_end":235,"column_start":19,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":160504,"byte_end":160510,"line_start":252,"line_end":252,"column_start":32,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4596},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":160976,"byte_end":160982,"line_start":274,"line_end":274,"column_start":41,"column_end":47},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4596},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":161169,"byte_end":161175,"line_start":283,"line_end":283,"column_start":43,"column_end":49},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4596},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":161685,"byte_end":161694,"line_start":305,"line_end":305,"column_start":19,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":162099,"byte_end":162108,"line_start":322,"line_end":322,"column_start":32,"column_end":41},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":162578,"byte_end":162587,"line_start":344,"line_end":344,"column_start":41,"column_end":50},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":162774,"byte_end":162783,"line_start":353,"line_end":353,"column_start":43,"column_end":52},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163261,"byte_end":163265,"line_start":375,"line_end":375,"column_start":13,"column_end":17},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163661,"byte_end":163665,"line_start":392,"line_end":392,"column_start":26,"column_end":30},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4631},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":163993,"byte_end":163997,"line_start":411,"line_end":411,"column_start":35,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4631},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/iter.rs","byte_start":164067,"byte_end":164071,"line_start":413,"line_end":413,"column_start":37,"column_end":41},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4631},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":165569,"byte_end":165583,"line_start":54,"line_end":54,"column_start":37,"column_end":51},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4646},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":166294,"byte_end":166304,"line_start":76,"line_end":76,"column_start":26,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4674},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":166778,"byte_end":166788,"line_start":96,"line_end":96,"column_start":26,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4674},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/storage.rs","byte_start":167173,"byte_end":167187,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4646},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":135299,"byte_end":135306,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":137958,"byte_end":137965,"line_start":236,"line_end":236,"column_start":15,"column_end":22},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":138945,"byte_end":138952,"line_start":262,"line_end":262,"column_start":15,"column_end":22},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":144728,"byte_end":144733,"line_start":410,"line_end":410,"column_start":16,"column_end":21},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":147493,"byte_end":147504,"line_start":490,"line_end":490,"column_start":16,"column_end":27},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/hashmap/mod.rs","byte_start":148295,"byte_end":148308,"line_start":516,"line_end":516,"column_start":16,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":177845,"byte_end":177853,"line_start":25,"line_end":25,"column_start":34,"column_end":42},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":178000,"byte_end":178008,"line_start":34,"line_end":34,"column_start":51,"column_end":59},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":178469,"byte_end":178477,"line_start":54,"line_end":54,"column_start":54,"column_end":62},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179149,"byte_end":179157,"line_start":84,"line_end":84,"column_start":39,"column_end":47},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179399,"byte_end":179407,"line_start":98,"line_end":98,"column_start":45,"column_end":53},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179666,"byte_end":179674,"line_start":112,"line_end":112,"column_start":50,"column_end":58},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/impls.rs","byte_start":179955,"byte_end":179963,"line_start":124,"line_end":124,"column_start":43,"column_end":51},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":181111,"byte_end":181115,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":181560,"byte_end":181564,"line_start":54,"line_end":54,"column_start":42,"column_end":46},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4683},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":182333,"byte_end":182337,"line_start":85,"line_end":85,"column_start":51,"column_end":55},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4683},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":182426,"byte_end":182430,"line_start":87,"line_end":87,"column_start":53,"column_end":57},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4683},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":183352,"byte_end":183359,"line_start":123,"line_end":123,"column_start":29,"column_end":36},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":183818,"byte_end":183825,"line_start":143,"line_end":143,"column_start":29,"column_end":36},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":184544,"byte_end":184551,"line_start":161,"line_end":161,"column_start":42,"column_end":49},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4708},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":185324,"byte_end":185331,"line_start":192,"line_end":192,"column_start":51,"column_end":58},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4708},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/iter.rs","byte_start":185420,"byte_end":185427,"line_start":194,"line_end":194,"column_start":53,"column_end":60},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4708},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/storage.rs","byte_start":186940,"byte_end":186948,"line_start":35,"line_end":35,"column_start":47,"column_end":55},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4721},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/storage.rs","byte_start":187434,"byte_end":187442,"line_start":51,"line_end":51,"column_start":42,"column_end":50},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4721},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":169947,"byte_end":169955,"line_start":67,"line_end":67,"column_start":37,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":170071,"byte_end":170079,"line_start":76,"line_end":76,"column_start":25,"column_end":33},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":170923,"byte_end":170931,"line_start":102,"line_end":102,"column_start":25,"column_end":33},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":171592,"byte_end":171600,"line_start":133,"line_end":133,"column_start":25,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173298,"byte_end":173306,"line_start":193,"line_end":193,"column_start":25,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/smallvec/mod.rs","byte_start":173704,"byte_end":173712,"line_start":209,"line_end":209,"column_start":25,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211064,"byte_end":211076,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211191,"byte_end":211203,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211308,"byte_end":211320,"line_start":46,"line_end":46,"column_start":9,"column_end":21},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":211692,"byte_end":211704,"line_start":62,"line_end":62,"column_start":35,"column_end":47},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":212052,"byte_end":212064,"line_start":77,"line_end":77,"column_start":38,"column_end":50},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":212828,"byte_end":212840,"line_start":114,"line_end":114,"column_start":23,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":213063,"byte_end":213075,"line_start":128,"line_end":128,"column_start":29,"column_end":41},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":213319,"byte_end":213331,"line_start":142,"line_end":142,"column_start":34,"column_end":46},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/impls.rs","byte_start":213593,"byte_end":213605,"line_start":154,"line_end":154,"column_start":27,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":214908,"byte_end":214912,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":215379,"byte_end":215383,"line_start":64,"line_end":64,"column_start":26,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4731},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":216190,"byte_end":216194,"line_start":98,"line_end":98,"column_start":35,"column_end":39},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4731},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":216264,"byte_end":216268,"line_start":100,"line_end":100,"column_start":37,"column_end":41},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4731},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":217338,"byte_end":217345,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":217826,"byte_end":217833,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":218535,"byte_end":218542,"line_start":182,"line_end":182,"column_start":26,"column_end":33},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4749},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":219351,"byte_end":219358,"line_start":216,"line_end":216,"column_start":35,"column_end":42},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4749},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":219428,"byte_end":219435,"line_start":218,"line_end":218,"column_start":37,"column_end":44},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4749},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220433,"byte_end":220440,"line_start":259,"line_end":259,"column_start":13,"column_end":20},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":220751,"byte_end":220758,"line_start":274,"line_end":274,"column_start":26,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4760},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":221408,"byte_end":221415,"line_start":301,"line_end":301,"column_start":35,"column_end":42},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4760},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/iter.rs","byte_start":221485,"byte_end":221492,"line_start":303,"line_end":303,"column_start":37,"column_end":44},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4760},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":223227,"byte_end":223233,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4797},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":223458,"byte_end":223470,"line_start":58,"line_end":58,"column_start":31,"column_end":43},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4777},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":223947,"byte_end":223953,"line_start":74,"line_end":74,"column_start":23,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4797},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":224356,"byte_end":224362,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4797},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":224518,"byte_end":224523,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":224997,"byte_end":225002,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/storage.rs","byte_start":225542,"byte_end":225554,"line_start":140,"line_end":140,"column_start":26,"column_end":38},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4777},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191074,"byte_end":191079,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":191970,"byte_end":191975,"line_start":131,"line_end":131,"column_start":9,"column_end":14},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":194529,"byte_end":194534,"line_start":224,"line_end":224,"column_start":9,"column_end":14},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":195507,"byte_end":195512,"line_start":257,"line_end":257,"column_start":9,"column_end":14},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/stash/mod.rs","byte_start":196836,"byte_end":196841,"line_start":290,"line_end":290,"column_start":9,"column_end":14},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":243515,"byte_end":243525,"line_start":28,"line_end":28,"column_start":18,"column_end":28},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":243654,"byte_end":243664,"line_start":37,"line_end":37,"column_start":35,"column_end":45},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":244106,"byte_end":244116,"line_start":57,"line_end":57,"column_start":38,"column_end":48},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":244973,"byte_end":244983,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":245206,"byte_end":245216,"line_start":113,"line_end":113,"column_start":29,"column_end":39},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":245458,"byte_end":245468,"line_start":127,"line_end":127,"column_start":34,"column_end":44},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/impls.rs","byte_start":245730,"byte_end":245740,"line_start":139,"line_end":139,"column_start":27,"column_end":37},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":246848,"byte_end":246852,"line_start":35,"line_end":35,"column_start":13,"column_end":17},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":247277,"byte_end":247281,"line_start":54,"line_end":54,"column_start":26,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4859},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248031,"byte_end":248035,"line_start":85,"line_end":85,"column_start":35,"column_end":39},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4859},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248105,"byte_end":248109,"line_start":87,"line_end":87,"column_start":37,"column_end":41},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4859},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":248989,"byte_end":248996,"line_start":123,"line_end":123,"column_start":13,"column_end":20},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":249435,"byte_end":249442,"line_start":143,"line_end":143,"column_start":13,"column_end":20},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":250142,"byte_end":250149,"line_start":161,"line_end":161,"column_start":26,"column_end":33},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4876},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":250903,"byte_end":250910,"line_start":192,"line_end":192,"column_start":35,"column_end":42},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4876},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/iter.rs","byte_start":250980,"byte_end":250987,"line_start":194,"line_end":194,"column_start":37,"column_end":44},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4876},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/storage.rs","byte_start":252578,"byte_end":252588,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4886},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/storage.rs","byte_start":253061,"byte_end":253071,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4886},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228278,"byte_end":228281,"line_start":71,"line_end":71,"column_start":21,"column_end":24},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228378,"byte_end":228381,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":228867,"byte_end":228870,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":229695,"byte_end":229698,"line_start":129,"line_end":129,"column_start":9,"column_end":12},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":231383,"byte_end":231386,"line_start":189,"line_end":189,"column_start":9,"column_end":12},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/collections/vec/mod.rs","byte_start":238280,"byte_end":238283,"line_start":381,"line_end":381,"column_start":9,"column_end":12},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266444,"byte_end":266457,"line_start":161,"line_end":161,"column_start":26,"column_end":39},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2596},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":266661,"byte_end":266672,"line_start":171,"line_end":171,"column_start":25,"column_end":36},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":268286,"byte_end":268297,"line_start":235,"line_end":235,"column_start":37,"column_end":48},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":269019,"byte_end":269030,"line_start":258,"line_end":258,"column_start":32,"column_end":43},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":270365,"byte_end":270376,"line_start":297,"line_end":297,"column_start":27,"column_end":38},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":270501,"byte_end":270512,"line_start":306,"line_end":306,"column_start":40,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":270863,"byte_end":270874,"line_start":323,"line_end":323,"column_start":34,"column_end":45},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":271208,"byte_end":271219,"line_start":340,"line_end":340,"column_start":15,"column_end":26},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":273658,"byte_end":273669,"line_start":417,"line_end":417,"column_start":15,"column_end":26},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":277029,"byte_end":277040,"line_start":491,"line_end":491,"column_start":15,"column_end":26},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":278147,"byte_end":278158,"line_start":532,"line_end":532,"column_start":15,"column_end":26},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":286774,"byte_end":286779,"line_start":739,"line_end":739,"column_start":16,"column_end":21},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":289298,"byte_end":289309,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_hmap.rs","byte_start":290460,"byte_end":290473,"line_start":855,"line_end":855,"column_start":16,"column_end":29},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":310735,"byte_end":310744,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311066,"byte_end":311075,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2759},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311244,"byte_end":311253,"line_start":56,"line_end":56,"column_start":21,"column_end":30},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2759},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311345,"byte_end":311354,"line_start":62,"line_end":62,"column_start":21,"column_end":30},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2759},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/cache_cell.rs","byte_start":311471,"byte_end":311480,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":314184,"byte_end":314196,"line_start":47,"line_end":47,"column_start":19,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4924},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315103,"byte_end":315113,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":315488,"byte_end":315500,"line_start":97,"line_end":97,"column_start":26,"column_end":38},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4924},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":316075,"byte_end":316087,"line_start":119,"line_end":119,"column_start":27,"column_end":39},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4924},"to":{"krate":25,"index":202}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":316690,"byte_end":316702,"line_start":144,"line_end":144,"column_start":27,"column_end":39},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4924},"to":{"krate":25,"index":220}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":316974,"byte_end":316986,"line_start":156,"line_end":156,"column_start":26,"column_end":38},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4924},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":317369,"byte_end":317381,"line_start":176,"line_end":176,"column_start":9,"column_end":21},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":318844,"byte_end":318856,"line_start":216,"line_end":216,"column_start":9,"column_end":21},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/entry.rs","byte_start":320387,"byte_end":320399,"line_start":257,"line_end":257,"column_start":9,"column_end":21},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":324714,"byte_end":324723,"line_start":78,"line_end":78,"column_start":47,"column_end":56},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2924},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":325318,"byte_end":325333,"line_start":100,"line_end":100,"column_start":39,"column_end":54},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2953},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":325722,"byte_end":325731,"line_start":116,"line_end":116,"column_start":35,"column_end":44},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2924},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":327331,"byte_end":327342,"line_start":179,"line_end":179,"column_start":13,"column_end":24},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":327533,"byte_end":327544,"line_start":187,"line_end":187,"column_start":26,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4978},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":327932,"byte_end":327943,"line_start":206,"line_end":206,"column_start":37,"column_end":48},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4978},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328106,"byte_end":328117,"line_start":212,"line_end":212,"column_start":35,"column_end":46},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4978},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328153,"byte_end":328163,"line_start":214,"line_end":214,"column_start":25,"column_end":35},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328379,"byte_end":328389,"line_start":223,"line_end":223,"column_start":37,"column_end":47},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4968},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":328478,"byte_end":328488,"line_start":229,"line_end":229,"column_start":25,"column_end":35},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":330036,"byte_end":330045,"line_start":276,"line_end":276,"column_start":25,"column_end":34},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331434,"byte_end":331443,"line_start":306,"line_end":306,"column_start":37,"column_end":46},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2924},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":331532,"byte_end":331541,"line_start":312,"line_end":312,"column_start":25,"column_end":34},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":333340,"byte_end":333349,"line_start":372,"line_end":372,"column_start":42,"column_end":51},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2924},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":334243,"byte_end":334252,"line_start":401,"line_end":401,"column_start":25,"column_end":34},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_array.rs","byte_start":334542,"byte_end":334551,"line_start":411,"line_end":411,"column_start":25,"column_end":34},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":353848,"byte_end":353856,"line_start":67,"line_end":67,"column_start":19,"column_end":27},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":355063,"byte_end":355071,"line_start":109,"line_end":109,"column_start":18,"column_end":26},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":356770,"byte_end":356778,"line_start":150,"line_end":150,"column_start":31,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3090},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":356986,"byte_end":356994,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3090},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":358643,"byte_end":358651,"line_start":208,"line_end":208,"column_start":21,"column_end":29},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":358776,"byte_end":358784,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":358915,"byte_end":358923,"line_start":226,"line_end":226,"column_start":9,"column_end":17},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_cell.rs","byte_start":360091,"byte_end":360099,"line_start":274,"line_end":274,"column_start":9,"column_end":17},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":387763,"byte_end":387776,"line_start":68,"line_end":68,"column_start":23,"column_end":36},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":387957,"byte_end":387969,"line_start":77,"line_end":77,"column_start":19,"column_end":31},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3192},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389106,"byte_end":389118,"line_start":123,"line_end":123,"column_start":21,"column_end":33},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3192},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":389484,"byte_end":389496,"line_start":138,"line_end":138,"column_start":9,"column_end":21},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":392215,"byte_end":392227,"line_start":221,"line_end":221,"column_start":31,"column_end":43},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3192},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":392717,"byte_end":392729,"line_start":239,"line_end":239,"column_start":26,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3192},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":393536,"byte_end":393548,"line_start":266,"line_end":266,"column_start":9,"column_end":21},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/lazy_imap.rs","byte_start":394910,"byte_end":394922,"line_start":296,"line_end":296,"column_start":9,"column_end":21},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255779,"byte_end":255783,"line_start":76,"line_end":76,"column_start":31,"column_end":35},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":255991,"byte_end":255995,"line_start":86,"line_end":86,"column_start":26,"column_end":30},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256454,"byte_end":256458,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":256882,"byte_end":256886,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258213,"byte_end":258217,"line_start":178,"line_end":178,"column_start":21,"column_end":25},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258336,"byte_end":258340,"line_start":187,"line_end":187,"column_start":21,"column_end":25},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258490,"byte_end":258494,"line_start":196,"line_end":196,"column_start":34,"column_end":38},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258672,"byte_end":258676,"line_start":205,"line_end":205,"column_start":27,"column_end":31},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":258745,"byte_end":258749,"line_start":207,"line_end":207,"column_start":35,"column_end":39},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":259391,"byte_end":259395,"line_start":228,"line_end":228,"column_start":28,"column_end":32},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":259594,"byte_end":259598,"line_start":237,"line_end":237,"column_start":32,"column_end":36},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":259813,"byte_end":259817,"line_start":246,"line_end":246,"column_start":30,"column_end":34},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260010,"byte_end":260014,"line_start":255,"line_end":255,"column_start":37,"column_end":41},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260145,"byte_end":260149,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260299,"byte_end":260303,"line_start":273,"line_end":273,"column_start":44,"column_end":48},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260444,"byte_end":260448,"line_start":282,"line_end":282,"column_start":47,"column_end":51},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260588,"byte_end":260592,"line_start":291,"line_end":291,"column_start":30,"column_end":34},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/lazy/mod.rs","byte_start":260751,"byte_end":260755,"line_start":302,"line_end":302,"column_start":33,"column_end":37},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416036,"byte_end":416042,"line_start":62,"line_end":62,"column_start":31,"column_end":37},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4992},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416264,"byte_end":416270,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4992},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416519,"byte_end":416525,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":416917,"byte_end":416923,"line_start":102,"line_end":102,"column_start":21,"column_end":27},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417015,"byte_end":417021,"line_start":108,"line_end":108,"column_start":21,"column_end":27},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417150,"byte_end":417156,"line_start":117,"line_end":117,"column_start":21,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417322,"byte_end":417328,"line_start":126,"line_end":126,"column_start":19,"column_end":25},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417449,"byte_end":417455,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417570,"byte_end":417576,"line_start":140,"line_end":140,"column_start":22,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417701,"byte_end":417707,"line_start":149,"line_end":149,"column_start":31,"column_end":37},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417836,"byte_end":417842,"line_start":158,"line_end":158,"column_start":23,"column_end":29},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/memory.rs","byte_start":417962,"byte_end":417968,"line_start":167,"line_end":167,"column_start":26,"column_end":32},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":425207,"byte_end":425211,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5024},"to":{"krate":25,"index":202}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":425797,"byte_end":425801,"line_start":99,"line_end":99,"column_start":27,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5024},"to":{"krate":25,"index":220}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426005,"byte_end":426009,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426487,"byte_end":426491,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":426893,"byte_end":426897,"line_start":152,"line_end":152,"column_start":31,"column_end":35},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5024},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":427147,"byte_end":427151,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5024},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":427654,"byte_end":427658,"line_start":185,"line_end":185,"column_start":26,"column_end":30},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5024},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428057,"byte_end":428061,"line_start":200,"line_end":200,"column_start":21,"column_end":25},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428180,"byte_end":428184,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428330,"byte_end":428334,"line_start":218,"line_end":218,"column_start":30,"column_end":34},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428498,"byte_end":428502,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428661,"byte_end":428665,"line_start":238,"line_end":238,"column_start":34,"column_end":38},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428853,"byte_end":428857,"line_start":247,"line_end":247,"column_start":27,"column_end":31},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":428926,"byte_end":428930,"line_start":249,"line_end":249,"column_start":35,"column_end":39},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":429622,"byte_end":429626,"line_start":270,"line_end":270,"column_start":28,"column_end":32},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":429835,"byte_end":429839,"line_start":279,"line_end":279,"column_start":32,"column_end":36},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430059,"byte_end":430063,"line_start":288,"line_end":288,"column_start":30,"column_end":34},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430261,"byte_end":430265,"line_start":297,"line_end":297,"column_start":37,"column_end":41},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430401,"byte_end":430405,"line_start":306,"line_end":306,"column_start":37,"column_end":41},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430560,"byte_end":430564,"line_start":315,"line_end":315,"column_start":44,"column_end":48},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/pack.rs","byte_start":430710,"byte_end":430714,"line_start":324,"line_end":324,"column_start":47,"column_end":51},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5024},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":451415,"byte_end":451426,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":383}},"from":{"krate":5,"index":1220},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":451975,"byte_end":451986,"line_start":61,"line_end":61,"column_start":29,"column_end":40},"kind":{"Impl":{"id":384}},"from":{"krate":5,"index":1220},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":452741,"byte_end":452752,"line_start":89,"line_end":89,"column_start":26,"column_end":37},"kind":{"Impl":{"id":385}},"from":{"krate":5,"index":7144},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":453274,"byte_end":453285,"line_start":112,"line_end":112,"column_start":26,"column_end":37},"kind":{"Impl":{"id":386}},"from":{"krate":5,"index":7144},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":453774,"byte_end":453787,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"kind":{"Impl":{"id":387}},"from":{"krate":5,"index":669},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/collections.rs","byte_start":454309,"byte_end":454322,"line_start":157,"line_end":157,"column_start":26,"column_end":39},"kind":{"Impl":{"id":388}},"from":{"krate":5,"index":669},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":457527,"byte_end":457533,"line_start":58,"line_end":58,"column_start":26,"column_end":32},"kind":{"Impl":{"id":419}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":458900,"byte_end":458906,"line_start":98,"line_end":98,"column_start":26,"column_end":32},"kind":{"Impl":{"id":420}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":459458,"byte_end":459464,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"kind":{"Impl":{"id":421}},"from":{"krate":2,"index":40079},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":460934,"byte_end":460940,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"kind":{"Impl":{"id":422}},"from":{"krate":2,"index":40079},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":461724,"byte_end":461727,"line_start":201,"line_end":201,"column_start":26,"column_end":29},"kind":{"Impl":{"id":423}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":3886}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/impls/prims.rs","byte_start":462259,"byte_end":462262,"line_start":221,"line_end":221,"column_start":26,"column_end":29},"kind":{"Impl":{"id":424}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/keyptr.rs","byte_start":469893,"byte_end":469899,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"kind":{"Impl":{"id":425}},"from":{"krate":20,"index":128},"to":{"krate":0,"index":3836}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":475877,"byte_end":475889,"line_start":19,"line_end":19,"column_start":25,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":3886},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":475899,"byte_end":475905,"line_start":19,"line_end":19,"column_start":47,"column_end":53},"kind":"SuperTrait","from":{"krate":25,"index":202},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/packed.rs","byte_start":475915,"byte_end":475921,"line_start":19,"line_end":19,"column_start":63,"column_end":69},"kind":"SuperTrait","from":{"krate":25,"index":220},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":486194,"byte_end":486197,"line_start":123,"line_end":123,"column_start":27,"column_end":30},"kind":{"Impl":{"id":442}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":486360,"byte_end":486366,"line_start":132,"line_end":132,"column_start":27,"column_end":33},"kind":{"Impl":{"id":443}},"from":{"krate":2,"index":39947},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":486989,"byte_end":486995,"line_start":154,"line_end":154,"column_start":30,"column_end":36},"kind":{"Impl":{"id":444}},"from":{"krate":2,"index":40079},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":487840,"byte_end":487843,"line_start":183,"line_end":183,"column_start":27,"column_end":30},"kind":{"Impl":{"id":445}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/impls.rs","byte_start":488077,"byte_end":488085,"line_start":194,"line_end":194,"column_start":30,"column_end":38},"kind":{"Impl":{"id":446}},"from":{"krate":5,"index":1220},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482318,"byte_end":482328,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":447}},"from":{"krate":19,"index":2481},"to":{"krate":0,"index":4000}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482442,"byte_end":482450,"line_start":52,"line_end":52,"column_start":29,"column_end":37},"kind":{"Impl":{"id":448}},"from":{"krate":19,"index":2457},"to":{"krate":0,"index":4000}},{"span":{"file_name":"/home/sergej/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_storage-3.0.0-rc4/src/traits/layout/mod.rs","byte_start":482562,"byte_end":482571,"line_start":58,"line_end":58,"column_start":29,"column_end":38},"kind":{"Impl":{"id":449}},"from":{"krate":19,"index":2469},"to":{"krate":0,"index":4000}}]}